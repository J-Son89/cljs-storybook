{"version":3,"sources":["quo2/components/dividers/divider_label.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,AAAA,AAAKA;AAEL,AAAA,AAAKC;AAEL;;;;;;;;;;;AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAYWQ;AAZX,AAAAJ,AAAAJ,AAAA,AAiBWa;AAjBX,AAAAT,AAAAJ,AAAA,AAeWW;AAfX,AAAAP,AAAAJ,AAAA,AAaWS;AAbX,AAAAL,AAAAJ,AAAA,AAkBWc;AAlBX,AAAAV,AAAAJ,AAAA,AAgBWY;AAhBX,AAAAR,AAAAJ,AAAA,AAcWU;AAdX,AAAAN,AAAAJ,AAAA,AAWWO;AAXX,AAAAH,AAAAJ,AAAA,AAmBWe;AAnBX,AAAAX,AAAAJ,AAAA,AAUWM;AAVX,AAoBE,AAAMU,AAA4B,AAAA,AAACC,AAAQF;AACrCG,AAA4B,AAAIF,AACF,AAAIJ,AAAMO,AAAmBC,AAC7BC;AAC9BC,AAA4B,AAAA,AAAA,AAAIZ;AAChCa,AAA4B,AAAIP,AAAMQ,AAAkBC;AACxDC,AAA4B,AAAIV,AAAMW,AAAaC;AANzD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOGC,AACWf,AACVgB,AAGsB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAC2Bb,AACAI,AACAX,AAIrBE,AAC7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAACI,AAAEV,AACNuB,AAGCE,AACA,AAAAC,AAAIzB;AAAJ,AAAA,AAAAyB;AAAAA;;AAAA;;AAzBR,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAoBI,AAAA,AAAA,AAAA,AAAA,AAMaV,AACA1B,AACAC,AACZoC,AAGiBX,AAEjBjB,AACD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAACW,AAAEV,AACNuB,AACCE,AACA,AAAAC,AAAIzB;AAAJ,AAAA,AAAAyB;AAAAA;;AAAA;;AAHJ,AAAA,AAAA,AAAA,AAIYV,AACA1B,AACZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAMY,AACTqB,AAG2B,AAAAK,AAAM,AAACC,AAAM3B;AAAb,AAAA,AAAA0B;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;;;AAJ9B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAQ8BjB,AAG1BgB,AAGiBR,AACjBjB;;AAEV,AAAK4B,AAAc,AAACC,AAAiBjC","names":["quo2.components.dividers.divider-label/chevron-icon-container-width","quo2.components.dividers.divider-label/chevron-icon-container-height","p__16925","map__16926","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.dividers.divider-label/themed-view","label","chevron-position","chevron-icon","counter-value","increase-padding-top?","padding-bottom","blur?","container-style","on-press","theme","dark?","cljs.core/=","border-and-counter-bg-color","quo2.foundations.colors/white-opa-5","quo2.foundations.colors/neutral-70","quo2.foundations.colors/neutral-10","padding-top","text-and-icon-color","quo2.foundations.colors/neutral-40","quo2.foundations.colors/neutral-50","counter-text-color","quo2.foundations.colors/white","quo2.foundations.colors/neutral-100","react-native.core/touchable-without-feedback","react-native.core/view","cljs.core/merge","quo2.components.icon/icon","or__4126__auto__","quo2.components.markdown.text/text","G__16940","cljs.core/count","quo2.components.dividers.divider-label/divider-label","quo2.theme/with-theme"],"sourcesContent":["(ns quo2.components.dividers.divider-label\n  (:require [quo2.theme :as theme]\n            [quo2.components.icon :as icons]\n            [quo2.components.markdown.text :as markdown.text]\n            [quo2.foundations.colors :as colors]\n            [react-native.core :as rn]))\n\n(def chevron-icon-container-width 20)\n\n(def chevron-icon-container-height 20)\n\n(defn themed-view\n  \"label -> string\n   chevron-position -> :left, :right\n   chevron-icon -> keyword\n   on-press -> function\n   padding-bottom -> number\n   counter-value -> number\n   increase-padding-top? -> boolean\n   blur? -> boolean\n   theme -> theme value passed from with-theme HOC\"\n  [{:keys [label\n           chevron-position\n           chevron-icon\n           counter-value\n           increase-padding-top?\n           padding-bottom\n           blur?\n           container-style\n           on-press\n           theme]}]\n  (let [dark?                       (= :dark theme)\n        border-and-counter-bg-color (if dark?\n                                      (if blur? colors/white-opa-5 colors/neutral-70)\n                                      colors/neutral-10)\n        padding-top                 (if increase-padding-top? 16 8)\n        text-and-icon-color         (if dark? colors/neutral-40 colors/neutral-50)\n        counter-text-color          (if dark? colors/white colors/neutral-100)]\n    [rn/touchable-without-feedback\n     {:on-press on-press}\n     [rn/view\n      {:accessible          true\n       :accessibility-label :divider-label\n       :style               (merge {:border-top-width   1\n                                    :border-top-color   border-and-counter-bg-color\n                                    :padding-top        padding-top\n                                    :padding-bottom     padding-bottom\n                                    :padding-horizontal 16\n                                    :align-items        :center\n                                    :flex-direction     :row}\n                                   container-style)}\n      (when (= chevron-position :left)\n        [rn/view\n         {:test-ID :divider-label-icon-left\n          :style   {:margin-right 4}}\n         [icons/icon\n          (or chevron-icon :i/chevron-down)\n          {:color  text-and-icon-color\n           :width  chevron-icon-container-width\n           :height chevron-icon-container-height}]])\n      [markdown.text/text\n       {:size   :paragraph-2\n        :weight :medium\n        :style  {:color text-and-icon-color\n                 :flex  1}}\n       label]\n      (when (= chevron-position :right)\n        [rn/view {:test-ID :divider-label-icon-right}\n         [icons/icon\n          (or chevron-icon :i/chevron-down)\n          {:color text-and-icon-color\n           :size  chevron-icon-container-width}]])\n      (when (pos? counter-value)\n        [rn/view\n         {:style {:border-radius    6\n                  :height           16\n                  :width            (case (count counter-value)\n                                      1 16\n                                      2 20\n                                      28)\n                  :background-color border-and-counter-bg-color\n                  :align-items      :center\n                  :justify-content  :center}}\n         [markdown.text/text\n          {:size   :label\n           :weight :medium\n           :style  {:color counter-text-color}}\n          counter-value]])]]))\n\n(def divider-label (theme/with-theme themed-view))\n"]}