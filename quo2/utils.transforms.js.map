{"version":3,"sources":["utils/transforms.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,AAAA,AAAMA,AAASC;AAAf,AAAqB,AAAA,AAAA,AAACC,AAAkBD;;AAExC,AAAA,AAAME,AACHF,AAAKG;AADR,AAEE,AAAA,AAAYC,AAAQ,AAACC,AAAcL,AAAUG;;AAE/C,AAAA,AAAMG,AAAWN;AAAjB,AAAuB,AAAA,AAACE,AAAiBF;;AAEzC,AAAA,AAAMO,AACHC;AADH,AAEE,AAAU,AAAA,AAACC,AAAED;AAAb;;AAAA,AACE,AAAA,AAAK,AAACT,AAAQ,AAAQK,AAAQI;AAA9B,AAAA,AAAAE,AACYC;AADZ,AAAAD,AACqBE;AADrB,AACuB,AAAM,AAASJ;AAAf,AAAqBA;;AAArB;;;AADvB,AAAA,AAAAE;;;;;AAGJ,AAAA,AAAMG,AACHL;AADH,AAEE,AAAU,AAAA,AAACC,AAAED;AAAb;;AAAA,AACE,AAAA,AAAK,AAAQJ,AAAQI;AAArB,AAAA,AAAAM,AAAkCH;AAAlC,AAAAG,AAA2CF;AAA3C,AAA6C,AAAM,AAASJ;AAAf,AAAqBA;;AAArB;;;AAA7C,AAAA,AAAAM","names":["utils.transforms/js->clj","data","cljs.core/js->clj","utils.transforms/clj->pretty-json","spaces","js/JSON","cljs-bean.core/->js","utils.transforms/clj->json","utils.transforms/json->clj","json","cljs.core/=","e16002","js/Error","_","utils.transforms/json->js","e16005"],"sourcesContent":["(ns utils.transforms\n  (:refer-clojure :exclude [js->clj])\n  (:require [cljs-bean.core :as clj-bean]))\n\n(defn js->clj [data] (cljs.core/js->clj data :keywordize-keys true))\n\n(defn clj->pretty-json\n  [data spaces]\n  (.stringify js/JSON (clj-bean/->js data) nil spaces))\n\n(defn clj->json [data] (clj->pretty-json data 0))\n\n(defn json->clj\n  [json]\n  (when-not (= json \"undefined\")\n    (try (js->clj (.parse js/JSON json))\n         (catch js/Error _ (when (string? json) json)))))\n\n(defn json->js\n  [json]\n  (when-not (= json \"undefined\")\n    (try (.parse js/JSON json) (catch js/Error _ (when (string? json) json)))))\n"]}