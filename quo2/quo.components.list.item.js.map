{"version":3,"sources":["quo/components/list/item.cljs"],"mappings":"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","names":["quo.components.list.item/themes","theme","G__19012","cljs.core/Keyword","js/Error","cljs.core/deref","quo.design-system.colors/theme","quo.components.list.item/size->icon-size","size","G__19017","quo.components.list.item/size->container-size","G__19019","quo.components.list.item/size->single-title-size","G__19022","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","quo.components.list.item/container","p__19027","map__19028","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","seq19023","G__19024","cljs.core/first","cljs.core/next","self__4723__auto__","container-style","children","cljs.core/into","quo.react-native/view","cljs.core/merge","quo.design-system.spacing/padding-horizontal","p__19035","map__19036","quo.components.list.item/icon-column","icon","icon-bg-color","icon-color","icon-container-style","icon-size","or__4126__auto__","cljs.core/vector?","status-im.ui.components.icons.icons/icon","p__19043","map__19044","quo.components.list.item/title-column","title","text-color","subtitle","subtitle-max-lines","subtitle-secondary","title-accessibility-label","text-size","title-text-weight","right-side-present?","and__4115__auto__","quo.components.text/text","quo.components.list.item/left-side","props","p__19047","map__19048","quo.components.list.item/right-side","chevron","active","disabled","accessory","accessory-text","accessory-style","animated-accessory?","G__19053","quo.components.controls.view/radio","quo.components.controls.view/animated-checkbox","quo.components.controls.view/checkbox","quo.components.controls.view/switch","quo.platform/ios?","quo.design-system.spacing/spacing","p__19061","map__19062","quo.components.list.item/list-item","left-side-alignment","on-press","on-long-press","accessibility-label","haptic-feedback","haptic-type","error","animated","active-background-enabled","background-color","map__19071","active-background","passive-background","optional-haptic","quo.haptic/trigger","component","cljs.core/not","quo.components.animated.pressable/pressable","quo.react-native/touchable-highlight","cljs.core/not=","cljs.core/=","quo.components.tooltip/tooltip","cljs.core/name"],"sourcesContent":["(ns quo.components.list.item\n  (:require [quo.components.animated.pressable :as animated]\n            [quo.components.controls.view :as controls]\n            [quo.components.text :as text]\n            [quo.components.tooltip :as tooltip]\n            [quo.design-system.colors :as colors]\n            [quo.design-system.spacing :as spacing]\n            [quo.haptic :as haptic]\n            [quo.platform :as platform]\n            [quo.react-native :as rn]\n            [status-im.ui.components.icons.icons :as icons]))\n\n(defn themes\n  [theme]\n  (case theme\n    :main     {:icon-color         (:icon-04 @colors/theme)\n               :icon-bg-color      (:interactive-02 @colors/theme)\n               :active-background  (:interactive-02 @colors/theme)\n               :passive-background (:ui-background @colors/theme)\n               :text-color         (:text-01 @colors/theme)}\n    :accent   {:icon-color         (:icon-04 @colors/theme)\n               :icon-bg-color      (:interactive-02 @colors/theme)\n               :active-background  (:interactive-02 @colors/theme)\n               :passive-background (:ui-background @colors/theme)\n               :text-color         (:text-04 @colors/theme)}\n    :negative {:icon-color         (:negative-01 @colors/theme)\n               :icon-bg-color      (:negative-02 @colors/theme)\n               :active-background  (:negative-02 @colors/theme)\n               :passive-background (:ui-background @colors/theme)\n               :text-color         (:negative-01 @colors/theme)}\n    :positive {:icon-color         (:positive-01 @colors/theme)\n               :icon-bg-color      (:positive-02 @colors/theme)\n               :active-background  (:positive-02 @colors/theme)\n               :passive-background (:ui-background @colors/theme)\n               :text-color         (:positive-01 @colors/theme)}\n    :disabled {:icon-color         (:icon-02 @colors/theme)\n               :icon-bg-color      (:ui-01 @colors/theme)\n               :active-background  (:ui-01 @colors/theme)\n               :passive-background (:ui-background @colors/theme)\n               :text-color         (:text-02 @colors/theme)}))\n\n(defn size->icon-size\n  [size]\n  (case size\n    :small 36\n    40))\n\n(defn size->container-size\n  [size]\n  (case size\n    :small 52\n    64))\n\n(defn size->single-title-size\n  [size]\n  (case size\n    :small :base\n    :large))\n\n(defn container\n  [{:keys [size container-style]} & children]\n  (into [rn/view\n         {:style (merge (:tiny spacing/padding-horizontal)\n                        {:min-height       (size->container-size size)\n                         :padding-vertical 8\n                         :flex-direction   :row\n                         :align-items      :center\n                         :justify-content  :space-between}\n                        container-style)}]\n        children))\n\n(defn icon-column\n  [{:keys [icon icon-bg-color icon-color size icon-container-style]}]\n  (when icon\n    (let [icon-size (size->icon-size size)]\n      [rn/view {:style (or icon-container-style (:tiny spacing/padding-horizontal))}\n       (cond\n         (vector? icon)\n         icon\n         (keyword? icon)\n         [rn/view\n          {:style {:width            icon-size\n                   :height           icon-size\n                   :align-items      :center\n                   :justify-content  :center\n                   :border-radius    (/ icon-size 2)\n                   :background-color icon-bg-color}}\n          [icons/icon icon {:color icon-color}]])])))\n\n(defn title-column\n  [{:keys [title text-color subtitle subtitle-max-lines subtitle-secondary\n           title-accessibility-label size text-size title-text-weight\n           right-side-present?]}]\n  [rn/view\n   {:style (merge (:tiny spacing/padding-horizontal)\n                  ;; make left-side title grow if nothing is present on right-side\n                  (when-not right-side-present?\n                    {:flex            1\n                     :justify-content :center}))}\n   (cond\n\n     (and title subtitle)\n     [:<>\n      ;; FIXME(Ferossgp): ReactNative 63 will support view inside text on andrid, remove thess if when\n      ;; migrating\n      (if (string? title)\n        [text/text\n         {:weight              (or title-text-weight :medium)\n          :style               {:color text-color}\n          :accessibility-label title-accessibility-label\n          :ellipsize-mode      :tail\n          :number-of-lines     1\n          :size                text-size}\n         title]\n        title)\n      (if (string? subtitle-secondary)\n        [rn/view {:flex-direction :row}\n         [text/text\n          {:style           {:max-width \"56.5%\"}\n           :weight          :regular\n           :color           :secondary\n           :ellipsize-mode  :tail\n           :number-of-lines subtitle-max-lines\n           :size            text-size}\n          subtitle]\n         [text/text\n          {:style           {:width \"7%\" :text-align :center}\n           :weight          :regular\n           :color           :secondary\n           :ellipsize-mode  :middle\n           :number-of-lines subtitle-max-lines\n           :size            text-size}\n          \"\u2022\"]\n         [text/text\n          {:style           {:max-width \"36.5%\"}\n           :weight          :regular\n           :color           :secondary\n           :ellipsize-mode  :middle\n           :number-of-lines subtitle-max-lines\n           :size            text-size}\n          subtitle-secondary]]\n        (if (string? subtitle)\n          [text/text\n           {:weight          :regular\n            :color           :secondary\n            :ellipsize-mode  :tail\n            :number-of-lines subtitle-max-lines\n            :size            text-size}\n           subtitle]\n          subtitle))]\n\n     title\n     (if (string? title)\n       [text/text\n        {:weight                    (or title-text-weight :regular)\n         :number-of-lines           1\n         :style                     {:color text-color}\n         :title-accessibility-label title-accessibility-label\n         :ellipsize-mode            :tail\n         :size                      (or text-size (size->single-title-size size))}\n        title]\n       title))])\n\n(defn left-side\n  [props]\n  [rn/view\n   {:style {:flex-direction :row\n            ;; Occupy only content width, never grow, but shrink if need be\n            :flex-grow      0\n            :flex-shrink    1\n            :padding-right  16\n            :align-items    (or (:left-side-alignment props) :center)}}\n   [icon-column props]\n   [title-column props]])\n\n(defn right-side\n  [{:keys [chevron active disabled accessory accessory-text accessory-style animated-accessory?]}]\n  (when (or chevron accessory)\n    [rn/view\n     {:style (merge {:align-items     :center\n                     :justify-content :flex-end\n                     :flex-direction  :row\n                     ;; Grow to occupy full space, shrink when need be, but always maitaining 16px left\n                     ;; gutter\n                     :flex-grow       1\n                     :flex-shrink     0\n                     :margin-left     16\n                     ;; When the left-side leaves no room for right-side, the rendered element is pushed\n                     ;; out. A flex-basis ensures that there is some room reserved.\n                     ;; The number 80px was determined by trial and error.\n                     :flex-basis      80}\n                    accessory-style)}\n     [rn/view {:style (:tiny spacing/padding-horizontal)}\n      (case accessory\n        :radio    [controls/radio {:value active :disabled disabled}]\n        :checkbox [(if animated-accessory?\n                     controls/animated-checkbox\n                     controls/checkbox)\n                   {:value active :disabled disabled}]\n        :switch   [controls/switch {:value active :disabled disabled}]\n        :text     [text/text\n                   {:color           :secondary\n                    :ellipsize-mode  :middle\n                    :number-of-lines 1}\n                   accessory-text]\n        accessory)]\n     (when (and chevron platform/ios?)\n       [rn/view {:style {:padding-right (:tiny spacing/spacing)}}\n        [icons/icon :main-icons/next\n         {:container-style {:opacity         0.4\n                            :align-items     :center\n                            :justify-content :center}\n          :resize-mode     :center\n          :color           (:icon-02 @colors/theme)}]])]))\n\n(defn list-item\n  [{:keys [theme accessory disabled subtitle-max-lines icon icon-container-style\n           left-side-alignment icon-color icon-bg-color\n           title subtitle subtitle-secondary active on-press on-long-press chevron size text-size\n           accessory-text accessibility-label title-accessibility-label accessory-style\n           haptic-feedback haptic-type error animated animated-accessory? title-text-weight\n           container-style\n           active-background-enabled background-color]\n    :or   {subtitle-max-lines        1\n           theme                     :main\n           haptic-feedback           true\n           animated                  platform/ios?\n           active-background-enabled true\n           haptic-type               :selection}}]\n  (let [theme (if disabled :disabled theme)\n        {:keys [text-color active-background passive-background]}\n        (themes theme)\n        icon-color (or icon-color\n                       (:icon-color (themes theme)))\n        icon-bg-color (or icon-bg-color\n                          (:icon-bg-color (themes theme)))\n        optional-haptic (fn []\n                          (when haptic-feedback\n                            (haptic/trigger haptic-type)))\n        component (cond\n                    (and (not on-press)\n                         (not on-long-press))\n                    rn/view\n                    animated animated/pressable\n                    :else rn/touchable-highlight)]\n    [rn/view\n     {:background-color (cond (not= background-color nil)\n                              background-color\n                              (and (= accessory :radio) active)\n                              active-background\n                              :else\n                              passive-background)}\n     [component\n      (merge {:type                :list-item\n              :disabled            disabled\n              :bg-color            (when active-background-enabled active-background)\n              :accessibility-label accessibility-label\n              :underlay-color      (:interactive-02 @colors/theme)}\n             (when on-press\n               {:on-press (fn []\n                            (optional-haptic)\n                            (on-press))})\n             (when on-long-press\n               {:on-long-press (fn []\n                                 (optional-haptic)\n                                 (on-long-press))}))\n      [container {:size size :container-style container-style}\n       [left-side\n        {:icon-color                icon-color\n         :text-color                (if on-press\n                                      text-color\n                                      (:text-color (themes :main)))\n         :left-side-alignment       left-side-alignment\n         :icon-bg-color             icon-bg-color\n         :title-accessibility-label title-accessibility-label\n         :icon                      icon\n         :icon-container-style      icon-container-style\n         :title                     title\n         :title-text-weight         title-text-weight\n         :size                      size\n         :text-size                 text-size\n         :subtitle                  subtitle\n         :subtitle-max-lines        subtitle-max-lines\n         :subtitle-secondary        subtitle-secondary\n         :right-side-present?       (or accessory chevron)}]\n       [right-side\n        {:chevron             chevron\n         :active              active\n         :disabled            disabled\n         :on-press            on-press\n         :accessory-text      accessory-text\n         :animated-accessory? animated-accessory?\n         :accessory-style     accessory-style\n         :accessory           accessory}]]]\n     (when error\n       [tooltip/tooltip\n        (merge {:bottom-value 0}\n               (when accessibility-label\n                 {:accessibility-label (str (name accessibility-label) \"-error\")}))\n        [text/text\n         {:color :negative\n          :size  :small}\n         error]])]))\n"]}