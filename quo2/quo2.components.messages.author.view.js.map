{"version":3,"sources":["quo2/components/messages/author/view.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,AAAA,AAAKA;AAEL,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACwBO;AADxB,AAAAH,AAAAJ,AAAA,AACuCQ;AADvC,AAAAJ,AAAAJ,AAAA,AAC6CS;AAD7C,AAAAL,AAAAJ,AAAA,AAC4DU;AAD5D,AAAAN,AAAAJ,AAAA,AACqEW;AADrE,AAAAP,AAAAJ,AAAA,AAC8EY;AAD9E,AAAAR,AAAAJ,AAAA,AACwFa;AADxF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGC,AAAgB,AAACC,AAAMC,AAAgBR,AACtCS,AAI0B,AAACC,AAAoBC,AAAmBC,AAClEd,AACD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAK,AAACe,AAAcd,AAEtBU,AAGkBK,AAClBxB,AACAmB,AAI0B,AAACC,AAAoBK,AAAkBC,AACjEjB,AACJ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMI,AACHc,AAGkBC,AACrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACEd,AACCa,AAGkBC,AACnBb,AACCY,AAGkBC,AACrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAK,AAACC,AAAIf,AAAWH,AACxBQ,AAIkBW,AAClBnB,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAK,AAACkB,AAAIf,AAAWF,AACxBO,AAIkBY,AAClB/B,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMY,AACHO,AAKsB,AAACa,AAAgBlB,AACvCF","names":["quo2.components.messages.author.view/middle-dot","p__17192","map__17193","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.messages.author.view/author","primary-name","secondary-name","style","short-chat-key","time-str","contact?","verified?","untrustworthy?","react-native.core/view","cljs.core/merge","quo2.components.messages.author.style/container","quo2.components.markdown.text/text","quo2.foundations.colors/theme-colors","quo2.foundations.colors/neutral-100","quo2.foundations.colors/white","clojure.string/blank?","quo2.components.messages.author.style/middle-dot-nickname","quo2.foundations.colors/neutral-60","quo2.foundations.colors/neutral-40","quo2.components.icon/icon","quo2.components.messages.author.style/icon-container","cljs.core/not","quo2.components.messages.author.style/chat-key-text","quo2.components.messages.author.style/middle-dot-chat-key","quo2.components.messages.author.style/time-text"],"sourcesContent":["(ns quo2.components.messages.author.view\n  (:require [clojure.string :as string]\n            [quo2.components.icon :as icons]\n            [quo2.components.markdown.text :as text]\n            [quo2.components.messages.author.style :as style]\n            [quo2.foundations.colors :as colors]\n            [react-native.core :as rn]))\n\n(def middle-dot \"\u00b7\")\n\n(defn author\n  [{:keys [primary-name secondary-name style short-chat-key time-str contact? verified? untrustworthy?]}]\n  [rn/view {:style (merge style/container style)}\n   [text/text\n    {:weight          :semi-bold\n     :size            :paragraph-2\n     :number-of-lines 1\n     :style           {:color (colors/theme-colors colors/neutral-100 colors/white)}}\n    primary-name]\n   (when (not (string/blank? secondary-name))\n     [:<>\n      [text/text\n       {:size            :paragraph-2\n        :number-of-lines 1\n        :style           style/middle-dot-nickname}\n       middle-dot]\n      [text/text\n       {:weight          :medium\n        :size            :paragraph-2\n        :number-of-lines 1\n        :style           {:color (colors/theme-colors colors/neutral-60 colors/neutral-40)}}\n       secondary-name]])\n   (when contact?\n     [icons/icon :main-icons2/contact\n      {:size            12\n       :no-color        true\n       :container-style style/icon-container}])\n   (cond\n     verified?\n     [icons/icon :main-icons2/verified\n      {:size            12\n       :no-color        true\n       :container-style style/icon-container}]\n     untrustworthy?\n     [icons/icon :main-icons2/untrustworthy\n      {:size            12\n       :no-color        true\n       :container-style style/icon-container}])\n   (when (and (not verified?) short-chat-key)\n     [text/text\n      {:monospace       true\n       :size            :label\n       :number-of-lines 1\n       :style           style/chat-key-text}\n      short-chat-key])\n   (when (and (not verified?) time-str)\n     [text/text\n      {:monospace       true\n       :size            :label\n       :number-of-lines 1\n       :style           style/middle-dot-chat-key}\n      middle-dot])\n   (when time-str\n     [text/text\n      {:monospace           true\n       :size                :label\n       :accessibility-label :message-timestamp\n       :number-of-lines     1\n       :style               (style/time-text verified?)}\n      time-str])])\n"]}