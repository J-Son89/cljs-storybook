{"version":3,"sources":["quo/components/header.cljs"],"mappings":"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","names":["quo.components.header/header-height","p__19009","map__19010","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo.components.header/header-wrapper-style","height","border-bottom","background","cljs.core/merge","quo.design-system.spacing/padding-horizontal","cljs.core/deref","quo.design-system.colors/theme","quo.components.header/absolute-fill","quo.components.header/content","quo.components.header/left","quo.components.header/right","p__19039","map__19040","quo.components.header/title-style","left","right","title-align","G__19042","cljs.core/Keyword","x__4214__auto__","y__4215__auto__","quo.components.header/header-actions-style","quo.components.header/header-action-placeholder","quo.design-system.spacing/spacing","quo.components.header/element","p__19050","map__19051","quo.components.header/header-action","icon","label","on-press","disabled","accessibility-label","quo.components.button.view/button","p__19054","map__19055","quo.components.header/header-actions","accessories","component","quo.react-native/view","cljs.core/seq","cljs.core/into","cljs.core/map","p__19057","map__19058","quo.components.header/header-title","title","subtitle","and__4115__auto__","quo.components.text/text","p__19065","map__19066","quo.components.header/header","left-width","right-width","layout","reagent.core/atom","or__4126__auto__","handle-layout","el","get-layout","evt","width","target-obj-19073","*runtime-state*-orig-val__19078","oops.state/*runtime-state*","*runtime-state*-temp-val__19079","oops.state/prepare-state","js/Error","next-obj-19074","oops.core/validate-object-access-dynamically","next-obj-19075","next-obj-19076","target-obj-19080","*runtime-state*-orig-val__19085","*runtime-state*-temp-val__19086","next-obj-19081","next-obj-19082","next-obj-19083","cljs.core/swap!","cljs.core/assoc","p__19089","map__19090","left-accessories","left-component","right-accessories","right-component","insets","title-component","style","status-bar-height","quo.animated/view"],"sourcesContent":["(ns quo.components.header\n  (:require [oops.core :refer [oget]]\n            [quo.animated :as animated]\n            [quo.components.button.view :as button]\n            [quo.components.text :as text]\n            [quo.design-system.colors :as colors]\n            [quo.design-system.spacing :as spacing]\n            [quo.react-native :as rn]\n            [reagent.core :as reagent]))\n\n(def header-height 56)\n\n(defn header-wrapper-style\n  [{:keys [height border-bottom background]}]\n  (merge\n   (:x-tiny spacing/padding-horizontal)\n   {:background-color (:ui-background @colors/theme)\n    :height           height}\n   (when background\n     {:background-color background})\n   (when border-bottom\n     {:border-bottom-width 1\n      :border-bottom-color (:ui-01 @colors/theme)})))\n\n(def absolute-fill\n  {:position :absolute\n   :top      0\n   :bottom   0\n   :left     0\n   :right    0})\n\n(def content\n  {:flex            1\n   :flex-direction  :row\n   :align-items     :center\n   :justify-content :center})\n\n(def left\n  {:position        :absolute\n   :left            0\n   :top             0\n   :bottom          0\n   :justify-content :center\n   :align-items     :flex-start})\n\n(def right\n  {:position        :absolute\n   :right           0\n   :top             0\n   :bottom          0\n   :justify-content :center\n   :align-items     :flex-end})\n\n(defn title-style\n  [{:keys [left right]} title-align]\n  (merge\n   absolute-fill\n   (case title-align\n     :left {:left  (:width left)\n            :right (:width right)}\n     {:align-items     :center\n      :justify-content :center\n      :left            (max (:width left) (:width right))\n      :right           (max (:width left) (:width right))})))\n\n(def header-actions-style\n  (merge\n   {:flex            1\n    :flex-direction  :row\n    :align-items     :center\n    :justify-content :center}\n   (:x-tiny spacing/padding-horizontal)))\n\n(def header-action-placeholder\n  {:width (:base spacing/spacing)})\n\n(def element\n  {:align-items     :center\n   :justify-content :center\n   :flex            1})\n\n(defn header-action\n  [{:keys [icon label on-press disabled accessibility-label]}]\n  [button/button\n   (merge {:on-press on-press\n           :disabled disabled}\n          (cond\n            icon  {:type  :icon\n                   :theme :icon}\n            label {:type :secondary})\n          (when accessibility-label\n            {:accessibility-label accessibility-label}))\n   (cond\n     icon  icon\n     label label)])\n\n(defn header-actions\n  [{:keys [accessories component]}]\n  [rn/view {:style element}\n   (cond\n     (seq accessories)\n     (into [rn/view {:style header-actions-style}]\n           (map header-action accessories))\n\n     component component\n\n     :else\n     [rn/view {:style header-action-placeholder}])])\n\n(defn header-title\n  [{:keys [title subtitle component title-align]}]\n  [:<>\n   (cond\n     component component\n\n     (and title subtitle)\n     [:<>\n      [text/text\n       {:weight          :medium\n        :number-of-lines 1}\n       title]\n      [text/text\n       {:weight          :regular\n        :color           :secondary\n        :number-of-lines 1}\n       subtitle]]\n\n     title [text/text\n            {:weight          :bold\n             :number-of-lines 0\n             :align           title-align\n             :size            :large}\n            title])])\n\n(defn header\n  [{:keys [left-width right-width]}]\n  (let [layout        (reagent/atom {:left  {:width  (or left-width 8)\n                                             :height header-height}\n                                     :right {:width  (or right-width 8)\n                                             :height header-height}\n                                     :title {:width  0\n                                             :height header-height}})\n        handle-layout (fn [el get-layout]\n                        (fn [evt]\n                          (let [width  (oget evt \"nativeEvent\" \"layout\" \"width\")\n                                height (oget evt \"nativeEvent\" \"layout\" \"height\")]\n                            (when get-layout\n                              (get-layout el\n                                          {:width  width\n                                           :height height}))\n                            (swap! layout assoc\n                              el\n                              {:width  width\n                               :height height}))))]\n    (fn\n      [{:keys [left-accessories left-component border-bottom\n               right-accessories right-component insets get-layout\n               title subtitle title-component style title-align\n               background]\n        :or   {title-align   :center\n               border-bottom true}}]\n      (let [status-bar-height (get insets :top 0)\n            height            (+ header-height status-bar-height)]\n        [animated/view\n         {:style (header-wrapper-style {:height        height\n                                        :background    background\n                                        :border-bottom border-bottom})}\n         [rn/view\n          {:pointer-events :box-none\n           :height         status-bar-height}]\n         [rn/view\n          {:style          (merge {:height header-height}\n                                  style)\n           :pointer-events :box-none}\n          [rn/view\n           {:style          absolute-fill\n            :pointer-events :box-none}\n           [rn/view\n            {:style          content\n             :pointer-events :box-none}\n            [rn/view\n             {:style          left\n              :on-layout      (handle-layout :left get-layout)\n              :pointer-events :box-none}\n             [header-actions\n              {:accessories left-accessories\n               :component   left-component}]]\n\n            [rn/view\n             {:style          (title-style @layout title-align)\n              :on-layout      (handle-layout :title get-layout)\n              :pointer-events :box-none}\n             [header-title\n              {:title       title\n               :subtitle    subtitle\n               :title-align title-align\n               :component   title-component}]]\n\n            [rn/view\n             {:style          right\n              :on-layout      (handle-layout :right get-layout)\n              :pointer-events :box-none}\n             [header-actions\n              {:accessories right-accessories\n               :component   right-component}]]]]]]))))\n"]}