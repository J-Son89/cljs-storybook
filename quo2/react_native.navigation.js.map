{"version":3,"sources":["react_native/navigation.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,AAAA,AAAMA,AACHC;AADH,AAEE,AAAwBC,AAAW,AAACC,AAAQF;;AAE9C,AAAA,AAAMG,AAAoBC,AAAKC,AAAKC;AAApC,AAA0C,AAAwBL,AAAWG,AAAKC,AAAKC;;AACvF,AAAA,AAAMC,AAAgCC;AAAtC,AAA+C,AAAkCP,AAAWO;;AAE5F,AAAA,AAAMC,AACHC;AADH,AAEE,AAAcT,AAAW,AAACC,AAAQQ;;AAEpC,AAAA,AAAMC,AACHC,AAAMC;AADT,AAEE,AAAmBZ,AAAWW,AAAM,AAACV,AAAQW;;AAE/C,AAAA,AAAMC,AACHV,AAAKC;AADR,AAEE,AAAWJ,AAAWG,AAAK,AAACF,AAAQG;;AAEtC,AAAA,AAAMU,AAAKF;AAAX,AAAiB,AAAUZ,AAAWY;;AAEtC,AAAA,AAAMG,AACHC;AADH,AAEE,AAAgBhB,AAAW,AAACC,AAAQe;;AAEtC,AAAA,AAAMC,AAAeL;AAArB,AAA2B,AAAmBZ,AAAWY;;AAEzD,AAAA,AAAMM,AACHN;AADH,AAEE,AAAcZ,AAAW,AAACC,AAAQW;;AAEpC,AAAA,AAAMO,AACHC;AADH,AAEE,AAAYpB,AAAW,AAACC,AAAQmB;;AAElC,AAAA,AAAMC,AACHT;AADH,AAEE,AAAA,AAAQ,AAAiBZ,AAAWY;AAApC,AAAA;;;AAEF,AAAA,AAAMU,AACHf;AADH,AAEE,AAA8B,AAAiBP,AAAYO;;AAE7D,AAAA,AAAMgB,AACHhB;AADH,AAEE,AACC,AAASP,AACT,AAASwB;AAAT,AACE,AAACjB,AAAQ,AAAYiB;;;AAE1B,AAAA,AAAMC,AACHlB;AADH,AAEE,AAAiC,AAAiBP,AAAYO;;AAEhE,AAAA,AAAMmB,AACHnB;AADH,AAEE,AACC,AAAiBP,AACjB,AAASwB;AAAT,AACE,AAACjB,AAAQ,AAACoB,AAAQ,AAAiBH;;;AAExC,AAAA,AAAMI,AACHrB;AADH,AAEE,AACC,AAAiBP,AACjB,AAASwB;AAAT,AACE,AAACjB,AAAQ,AAAiBiB;;;AAE/B,AAAA,AAAMK,AACHC,AAAG/B;AADN,AAEE,AAAeC,AAAW8B,AAAG,AAAC7B,AAAQF;;AAExC,AAAKgC,AAAU,AAAA,AAACC;AAEhB,AAAA,AAAMC;AAAN,AAEE,AAAA,AAAA,AAAAC,AAAqBH;;AAEvB,AAAO,AAAY/B,AACZ,AAASmC;AAAT,AACE,AAAA,AAAA,AAAA,AAAA,AAACC,AAAOL,AAA+B,AAAgBI,AAChB,AAAoBA,AACpB,AAAmBA","names":["react-native.navigation/set-default-options","opts","js/shadow.js.shim.module$react_native_navigation.Navigation","cljs.core/clj->js","react-native.navigation/register-component","arg1","arg2","arg3","react-native.navigation/set-lazy-component-registrator","handler","react-native.navigation/set-root","root","react-native.navigation/set-stack-root","stack","comp","react-native.navigation/push","react-native.navigation/pop","react-native.navigation/show-modal","arg","react-native.navigation/dismiss-modal","react-native.navigation/show-overlay","react-native.navigation/pop-to-root","tab","react-native.navigation/dissmiss-overlay","react-native.navigation/reg-app-launched-listener","react-native.navigation/reg-button-pressed-listener","evn","react-native.navigation/reg-modal-dismissed-listener","react-native.navigation/reg-component-did-appear-listener","cljs.core/keyword","react-native.navigation/reg-component-did-disappear-listener","react-native.navigation/merge-options","id","react-native.navigation/constants","cljs.core/atom","react-native.navigation/status-bar-height","cljs.core/deref","consts","cljs.core/reset!"],"sourcesContent":["(ns react-native.navigation\n  (:refer-clojure :exclude [pop])\n  (:require [\"react-native-navigation\" :refer (Navigation)]))\n\n(defn set-default-options\n  [opts]\n  (.setDefaultOptions ^js Navigation (clj->js opts)))\n\n(defn register-component [arg1 arg2 arg3] (.registerComponent ^js Navigation arg1 arg2 arg3))\n(defn set-lazy-component-registrator [handler] (.setLazyComponentRegistrator ^js Navigation handler))\n\n(defn set-root\n  [root]\n  (.setRoot ^js Navigation (clj->js root)))\n\n(defn set-stack-root\n  [stack comp]\n  (.setStackRoot ^js Navigation stack (clj->js comp)))\n\n(defn push\n  [arg1 arg2]\n  (.push ^js Navigation arg1 (clj->js arg2)))\n\n(defn pop [comp] (.pop ^js Navigation comp))\n\n(defn show-modal\n  [arg]\n  (.showModal ^js Navigation (clj->js arg)))\n\n(defn dismiss-modal [comp] (.dismissModal ^js Navigation comp))\n\n(defn show-overlay\n  [comp]\n  (.showOverlay Navigation (clj->js comp)))\n\n(defn pop-to-root\n  [tab]\n  (.popToRoot Navigation (clj->js tab)))\n\n(defn dissmiss-overlay\n  [comp]\n  (.catch (.dismissOverlay Navigation comp) #()))\n\n(defn reg-app-launched-listener\n  [handler]\n  (.registerAppLaunchedListener ^js (.events ^js Navigation) handler))\n\n(defn reg-button-pressed-listener\n  [handler]\n  (.registerNavigationButtonPressedListener\n   (.events Navigation)\n   (fn [^js evn]\n     (handler (.-buttonId evn)))))\n\n(defn reg-modal-dismissed-listener\n  [handler]\n  (.registerModalDismissedListener ^js (.events ^js Navigation) handler))\n\n(defn reg-component-did-appear-listener\n  [handler]\n  (.registerComponentDidAppearListener\n   ^js (.events ^js Navigation)\n   (fn [^js evn]\n     (handler (keyword (.-componentName evn))))))\n\n(defn reg-component-did-disappear-listener\n  [handler]\n  (.registerComponentDidDisappearListener\n   ^js (.events ^js Navigation)\n   (fn [^js evn]\n     (handler (.-componentName evn)))))\n\n(defn merge-options\n  [id opts]\n  (.mergeOptions Navigation id (clj->js opts)))\n\n(def constants (atom nil))\n\n(defn status-bar-height\n  []\n  (:status-bar-height @constants))\n\n(.then (.constants Navigation)\n       (fn [^js consts]\n         (reset! constants {:top-bar-height     (.-topBarHeight consts)\n                            :bottom-tabs-height (.-bottomTabsHeight consts)\n                            :status-bar-height  (.-statusBarHeight consts)})))\n"]}