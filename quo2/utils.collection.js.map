{"version":3,"sources":["utils/collection.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;AAAA,AAAMA,AAEHC,AAAKC;AAFR,AAGE,AACK,AAACC,AAAa,AAAKC,AAAIC,AAGvBC;AAHc,AACE,AAAM,AAACL,AAAKI;AAAZ,AACED;;AADF;;AAFhBF;;AAMP;;;;AAAA,AAAMK,AAGHC,AAAIN;AAHP,AAIE,AAAA,AAACO,AAAQ,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAAF,AAAA,AAAQ,AAAAA,AAACF;AAAUN;;AAEpC;;;AAAA,AAAMW,AAEHL,AAAIN;AAFP,AAGE,AAAMY,AAAO,AAACC,AAASP,AAAIN;AAA3B,AACE,AAAA,AAAAc,AAACL;AAAD,AAAM,AAACL,AAAM,AAAAU,AAACF;AAAW,AAACG,AAAS,AAACN,AAAIH,AAAIN;;AAEhD,AAAA,AAAMgB,AACHC,AAAEC;AADL,AAEO,AAACT,AAAI,AAAAU,AACL,AAAA,AAACZ;AADI,AAAA,AAAAa,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAME;AAAN,AAAAD,AAAAD,AAAA,AAAA,AAAQG;AAAR,AAAA,AAAa,AAACN,AAAEK,AAAGC;AAAIL","names":["utils.collection/first-index","pred","coll","cljs.core/keep-indexed","idx","e","cljs.core/first","utils.collection/index-by","key","cljs.core/into","p1__19328#","cljs.core/map","cljs.core/PersistentVector","utils.collection/distinct-by","groups","cljs.core/group-by","p1__19334#","cljs.core/distinct","utils.collection/map-keys","f","m","p__19338","vec__19339","cljs.core/nth","k","v"],"sourcesContent":["(ns utils.collection)\n\n(defn first-index\n  \"Returns first index in coll where predicate on coll element is truthy\"\n  [pred coll]\n  (->> coll\n       (keep-indexed (fn [idx e]\n                       (when (pred e)\n                         idx)))\n       first))\n\n(defn index-by\n  \"Given a collection and a unique key function, returns a map that indexes the collection.\n  Similar to group-by except that the map values are single objects (depends on key uniqueness).\"\n  [key coll]\n  (into {} (map #(vector (key %) %) coll)))\n\n(defn distinct-by\n  \"Given a key and a collection returns a unique collection by that key\"\n  [key coll]\n  (let [groups (group-by key coll)]\n    (map #(first (groups %)) (distinct (map key coll)))))\n\n(defn map-keys\n  [f m]\n  (->> (map (fn [[k v]] [(f k) v]) m)\n       (into {})))\n"]}