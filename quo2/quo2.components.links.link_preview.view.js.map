{"version":3,"sources":["quo2/components/links/link_preview/view.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,AAAA,AAAOA,AACJC,AAAcC;AADjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGC,AAIsBD,AAEtBD;;AAEH,AAAA,AAAOG,AACJC;AADH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGC,AAIAD;;AAEH,AAAA,AAAOE,AACJC;AADH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGF,AAGsB,AAACG,AAEvBD;;AAEH,AAAA,AAAOE,AACJC;AADH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGL,AAIsBM,AAEtBD;;AAEH,AAAA,AAAOE,AACJC,AAAUC;AADb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGC,AACsB,AAACC,AAAgBF,AACjB,AAAA,AAAA,AAAI,AAASD,AACLA,AACNA;;AAG3B,AAAA,AAAOI,AACJC;AADH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGH,AAEsB,AAAA,AAAA,AAAI,AAASG,AACLA,AACNA,AACFC;;AAEzB,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAGWO;AAHX,AAAAH,AAAAJ,AAAA,AAEoBpB;AAFpB,AAAAwB,AAAAJ,AAAA,AACsBjB;AADtB,AAAAqB,AAAAJ,AAAA,AAG2BQ;AAH3B,AAAAJ,AAAAJ,AAAA,AAE8BrB;AAF9B,AAAAyB,AAAAJ,AAAA,AACiBH;AADjB,AAAAO,AAAAJ,AAAA,AACWX;AADX,AAAAe,AAAAJ,AAAA,AAAA,AAEWM;AAFX,AAAAF,AAAAJ,AAAA,AACuCR;AADvC,AAAAY,AAAAJ,AAAA,AACkCd;AADlC,AAAA,AAAA,AAAA,AAAA,AAAA,AAKGuB,AACsB,AAACC,AAAM,AAACC,AAAgBL,AAAUC,AAExD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAID,AAEAG,AAAgBG,AAChB,AAAA,AAAA,AAAA,AAAMf,AACHD,AAAUC,AACZT,AAAWC,AACb,AAAA,AAAA,AAAA,AAAMN,AACHD,AAAiBC,AACnBE,AAAUC,AACX,AAAA,AAAA,AAAA,AAAMM,AACHD,AAAeC,AAAUgB,AAC5B9B,AAAgBC,AAAcC","names":["quo2.components.links.link-preview.view/button-disabled","disabled-text","on-enable","quo2.components.buttons.button/button","quo2.components.links.link-preview.view/description-comp","description","quo2.components.markdown.text/text","quo2.components.links.link-preview.view/link-comp","link","quo2.components.links.link-preview.style/link","quo2.components.links.link-preview.view/title-comp","title","quo2.components.links.link-preview.style/title","quo2.components.links.link-preview.view/thumbnail-comp","thumbnail","size","react-native.core/image","quo2.components.links.link-preview.style/thumbnail","quo2.components.links.link-preview.view/logo-comp","logo","quo2.components.links.link-preview.style/logo","p__17189","map__17190","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.links.link-preview.view/view","enabled?","container-style","thumbnail-size","react-native.core/view","cljs.core/merge","quo2.components.links.link-preview.style/container","quo2.components.links.link-preview.style/header-container"],"sourcesContent":["(ns quo2.components.links.link-preview.view\n  (:require [quo2.components.buttons.button :as button]\n            [quo2.components.links.link-preview.style :as style]\n            [quo2.components.markdown.text :as text]\n            [react-native.core :as rn]))\n\n(defn- button-disabled\n  [disabled-text on-enable]\n  [button/button\n   {:before              :i/reveal\n    :size                32\n    :type                :grey\n    :on-press            on-enable\n    :accessibility-label :button-enable-preview}\n   disabled-text])\n\n(defn- description-comp\n  [description]\n  [text/text\n   {:size                :paragraph-2\n    :number-of-lines     3\n    :accessibility-label :description}\n   description])\n\n(defn- link-comp\n  [link]\n  [text/text\n   {:size                :paragraph-2\n    :weight              :medium\n    :style               (style/link)\n    :accessibility-label :link}\n   link])\n\n(defn- title-comp\n  [title]\n  [text/text\n   {:size                :paragraph-1\n    :number-of-lines     1\n    :weight              :semi-bold\n    :style               style/title\n    :accessibility-label :title}\n   title])\n\n(defn- thumbnail-comp\n  [thumbnail size]\n  [rn/image\n   {:style               (style/thumbnail size)\n    :source              (if (string? thumbnail)\n                           {:uri thumbnail}\n                           thumbnail)\n    :accessibility-label :thumbnail}])\n\n(defn- logo-comp\n  [logo]\n  [rn/image\n   {:accessibility-label :logo\n    :source              (if (string? logo)\n                           {:uri logo}\n                           logo)\n    :style               style/logo}])\n\n(defn view\n  [{:keys [title logo description link thumbnail\n           enabled? on-enable disabled-text\n           container-style thumbnail-size]\n    :or   {enabled? true}}]\n  [rn/view\n   {:style               (merge (style/container enabled?) container-style)\n    :accessibility-label :link-preview}\n   (if enabled?\n     [:<>\n      [rn/view {:style style/header-container}\n       (when logo\n         [logo-comp logo])\n       [title-comp title]]\n      (when description\n        [description-comp description])\n      [link-comp link]\n      (when thumbnail\n        [thumbnail-comp thumbnail thumbnail-size])]\n     [button-disabled disabled-text on-enable])])\n"]}