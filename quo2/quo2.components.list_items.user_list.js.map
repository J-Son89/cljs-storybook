{"version":3,"sources":["quo2/components/list_items/user_list.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AASL,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACgBO;AADhB,AAAAH,AAAAJ,AAAA,AACyBQ;AADzB,AAAAJ,AAAAJ,AAAA,AACkCS;AADlC,AAAAL,AAAAJ,AAAA,AAC4CU;AAD5C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGC,AACW,AAAA,AAAA,AAAMJ,AAASA,AAE1B,AAAAK,AAAMN;AAANM,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGE,AAEQ,AAACC,AAAoBC,AAAkBC;;;AAJlD;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMGC,AACsBR,AAEAD,AACA,AAAA,AAAA,AAAMD,AAASA;;;AAVxC;AAAA,AAAA,AAYGW;;;;AAZH,AAaGC;;;;;AAEN,AAAA,AAAAC,AAAME;AAAN,AAAA,AAAAD,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArB,AAAA,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAApB,AAAAC,AAAAmB,AAAAA;AAAA,AAAAlB,AAAAkB,AAAA,AACyEO;AADzE,AAAAzB,AAAAkB,AAAA,AAEmCU;AAFnC,AAAA5B,AAAAkB,AAAA,AAC0BG;AAD1B,AAAArB,AAAAkB,AAAA,AAE0Bf;AAF1B,AAAAH,AAAAkB,AAAA,AACuCI;AADvC,AAAAtB,AAAAkB,AAAA,AAEiDW;AAFjD,AAAA7B,AAAAkB,AAAA,AACWE;AADX,AAAApB,AAAAkB,AAAA,AACiEM;AADjE,AAAAxB,AAAAkB,AAAA,AACkFQ;AADlF,AAAA1B,AAAAkB,AAAA,AAEWS;AAFX,AAAA3B,AAAAkB,AAAA,AACsDK;AADtD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGGhB,AACsBb,AAEA,AAAA,AAAA,AAAMS,AAASA,AACf,AAAA,AAAA,AAAMyB,AAAcA,AACzCE,AACoBT,AACAE,AAEAC,AAEpBR,AACCe,AACiBV,AACAC,AACAG,AACAC,AACAC,AAClB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMP,AACHL,AAEgB,AAACJ,AAAoBC,AAAkBC,AACvDO,AACJ,AAAA,AAAA,AAAA,AAAMS,AACH5B,AAAY4B","names":["quo2.components.list-items.user-list/container-style","p__17347","map__17348","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.list-items.user-list/action-icon","type","on-press","on-check","disabled?","checked?","react-native.core/touchable-opacity","G__17353","cljs.core/Keyword","quo2.components.icon/icon","quo2.foundations.colors/theme-colors","quo2.foundations.colors/neutral-50","quo2.foundations.colors/neutral-40","quo2.components.selectors.selectors.view/checkbox","quo2.components.markdown.text/text","react-native.core/view","p__17354","map__17355","quo2.components.list-items.user-list/user-list","short-chat-key","primary-name","secondary-name","photo-path","online?","contact?","verified?","untrustworthy?","on-long-press","accessory","quo2.components.avatars.user-avatar.view/user-avatar","quo2.components.messages.author.view/author"],"sourcesContent":["(ns quo2.components.list-items.user-list\n  (:require [react-native.core :as rn]\n            [quo2.components.avatars.user-avatar.view :as user-avatar]\n            [quo2.components.markdown.text :as text]\n            [quo2.components.icon :as icons]\n            [quo2.foundations.colors :as colors]\n            [quo2.components.messages.author.view :as author]\n            [quo2.components.selectors.selectors.view :as selectors]))\n\n(def container-style\n  {:margin-horizontal  8\n   :padding-vertical   8\n   :padding-horizontal 12\n   :border-radius      12\n   :flex               1\n   :flex-direction     :row\n   :align-items        :center})\n\n(defn action-icon\n  [{:keys [type on-press on-check disabled? checked?]}]\n  [rn/touchable-opacity\n   {:on-press (when on-press on-press)\n    :style    {:position :absolute :right 20}}\n   (case type\n     :options\n     [icons/icon :i/options\n      {:size  20\n       :color (colors/theme-colors colors/neutral-50 colors/neutral-40)}]\n     :checkbox\n     [selectors/checkbox\n      {:checked?            checked?\n       :accessibility-label :user-list-toggle-check\n       :disabled?           disabled?\n       :on-change           (when on-check on-check)}]\n     :close\n     [text/text \"not implemented\"]\n     [rn/view])])\n\n(defn user-list\n  [{:keys [short-chat-key primary-name secondary-name photo-path online? contact? verified?\n           untrustworthy? on-press on-long-press accessory]}]\n  [rn/touchable-opacity\n   {:style               container-style\n    :accessibility-label :user-list\n    :on-press            (when on-press on-press)\n    :on-long-press       (when on-long-press on-long-press)}\n   [user-avatar/user-avatar\n    {:full-name         primary-name\n     :profile-picture   photo-path\n     :status-indicator? true\n     :online?           online?\n     :size              :small}]\n   [rn/view {:style {:margin-left 8}}\n    [author/author\n     {:primary-name   primary-name\n      :secondary-name secondary-name\n      :contact?       contact?\n      :verified?      verified?\n      :untrustworthy? untrustworthy?}]\n    (when short-chat-key\n      [text/text\n       {:size  :paragraph-1\n        :style {:color (colors/theme-colors colors/neutral-50 colors/neutral-40)}}\n       short-chat-key])]\n   (when accessory\n     [action-icon accessory])])\n"]}