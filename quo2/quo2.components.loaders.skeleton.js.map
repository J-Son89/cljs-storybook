{"version":3,"sources":["quo2/components/loaders/skeleton.cljs"],"mappings":"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","names":["quo2.components.loaders.skeleton/message-skeleton-height","quo2.components.loaders.skeleton/avatar-skeleton-size","quo2.components.loaders.skeleton/message-content-width","quo2.components.loaders.skeleton/f-message-skeleton","map__17195","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","color","quo2.foundations.colors/theme-colors","quo2.foundations.colors/neutral-5","quo2.foundations.colors/neutral-70","loading-color","quo2.foundations.colors/neutral-10","quo2.foundations.colors/neutral-60","content-width","cljs.core/rand-nth","author-width","message-width","window-width","react-native.core/get-window","translate-x","react-native.reanimated/use-shared-value","animated-gradient-style","react-native.reanimated/apply-animations-to-style","react-native.reanimated/animate-shared-value-with-repeat","react-native.masked-view/masked-view","reagent.core/as-element","react-native.core/view","react-native.reanimated/linear-gradient","quo2.components.loaders.skeleton/skeleton","parent-height","number-of-skeletons","Math/floor","quo2.foundations.colors/white","quo2.foundations.colors/neutral-90","cljs.core/doall","iter__4529__auto__","s__17205","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__17207","cljs.core/chunk-buffer","i__17206","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__17204","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","n","cljs.core/range","cljs.core/chunk-first"],"sourcesContent":["(ns quo2.components.loaders.skeleton\n  (:require [quo2.foundations.colors :as colors]\n            [react-native.core :as rn]\n            [react-native.masked-view :as masked-view]\n            [react-native.reanimated :as reanimated]\n            [reagent.core :as reagent]))\n\n(def message-skeleton-height 54)\n\n(def avatar-skeleton-size 32)\n\n(def message-content-width\n  [{:author  80\n    :message 249}\n   {:author  124\n    :message 156}\n   {:author  96\n    :message 212}\n   {:author  112\n    :message 144}])\n\n;; Standlone message skeleton\n(defn- f-message-skeleton\n  []\n  (let [color                   (colors/theme-colors colors/neutral-5 colors/neutral-70)\n        loading-color           (colors/theme-colors colors/neutral-10 colors/neutral-60)\n        content-width           (rand-nth message-content-width)\n        author-width            (content-width :author)\n        message-width           (content-width :message)\n        {window-width :width}   (rn/get-window)\n        translate-x             (reanimated/use-shared-value (- window-width))\n        animated-gradient-style (reanimated/apply-animations-to-style\n                                 {:transform [{:translateX translate-x}]}\n                                 {:width  window-width\n                                  :height \"100%\"})]\n    (reanimated/animate-shared-value-with-repeat translate-x window-width 1000 :linear (- 1) false)\n    [masked-view/masked-view\n     {:style       {:height message-skeleton-height}\n      :maskElement (reagent/as-element\n                    [rn/view\n                     {:style {:height           message-skeleton-height\n                              :flex-direction   :row\n                              :padding-vertical 11\n                              :background-color :transparent\n                              :padding-left     21}}\n                     [rn/view\n                      {:style {:height           avatar-skeleton-size\n                               :width            avatar-skeleton-size\n                               :border-radius    (/ avatar-skeleton-size 2)\n                               :background-color color\n                               :overflow         :hidden}}]\n                     [rn/view\n                      {:style {:padding-left     8\n                               :background-color :transparent}}\n                      [rn/view\n                       {:style {:height           8\n                                :width            author-width\n                                :border-radius    6\n                                :background-color color\n                                :margin-bottom    8\n                                :overflow         :hidden}}]\n                      [rn/view\n                       {:style {:height           16\n                                :width            message-width\n                                :border-radius    6\n                                :overflow         :hidden\n                                :background-color color}}]]])}\n     [rn/view\n      {:style {:flex             1\n               :background-color color}}\n      [reanimated/linear-gradient\n       {:colors [color color loading-color color color]\n        :start  {:x 0 :y 0}\n        :end    {:x 1 :y 0}\n        :style  animated-gradient-style}]]]))\n\n(defn skeleton\n  [parent-height]\n  (let [number-of-skeletons (int (Math/floor (/ parent-height message-skeleton-height)))]\n    [rn/view\n     {:style {:background-color (colors/theme-colors\n                                 colors/white\n                                 colors/neutral-90)\n              :flex             1}}\n     (doall\n      (for [n (range number-of-skeletons)]\n        [:f> f-message-skeleton {:key n}]))]))\n"]}