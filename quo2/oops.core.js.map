{"version":3,"sources":["oops/core.cljs"],"mappings":"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","names":["oops.core/report-error-dynamically","msg","data","oops.state/was-error-reported?","oops.state/mark-error-reported!","G__16377","oops.config/get-error-reporting","cljs.core/=","oops.state/prepare-error-from-call-site","oops.helpers/wrap-data-in-enveloper-if-possible","oops.config/use-envelope?","oops.state/get-console-reporter","js/console","js/Error","oops.core/report-warning-dynamically","G__16392","oops.config/get-warning-reporting","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","oops.core/report-if-needed-dynamically","p__16398","vec__16400","cljs.core/nth","seq16395","G__16396","cljs.core/first","cljs.core/next","self__4723__auto__","msg-id","info","cljs.core/contains?","oops.config/get-suppress-reporting","G__16405","oops.config/get-config-key","oops.messages/runtime-message","oops.core/validate-object-access-dynamically","obj","mode","key","push?","check-key-read?","check-key-write?","oops.state/get-key-path-str","oops.state/get-target-object","goog/isBoolean","goog/isNumber","goog/isString","cljs.core/not","goog/isObject","goog/isDateLike","oops.helpers/cljs-type?","oops.helpers/cljs-instance?","oops.state/add-key-to-current-path!","oops.state/set-last-access-modifier!","and__4115__auto__","goog.object/containsKey","temp__5737__auto__","oops.helpers/get-property-descriptor","oops.helpers/is-object-frozen?","oops.helpers/is-object-sealed?","descriptor-16406","oops.helpers/determine-property-non-writable-reason","reason-16407","oops.core/validate-fn-call-dynamically","fn","goog/isFunction","oops.core/punch-key-dynamically!","child-factory-16409","oops.config/get-child-factory","G__16410","cljs.core/Keyword","child-obj-16408","oops.core/build-path-dynamically","selector","selector-path-16413","oops.schema/prepare-simple-path!","selector-path-16414","oops.schema/prepare-path!","oops.core/check-path-dynamically","path","op","temp__5739__auto__","oops.schema/check-dynamic-path!","issue-16415","cljs.core/apply","oops.core/get-key-dynamically","oops.core/set-key-dynamically","val","oops.core/get-selector-dynamically","cljs.spec.alpha/valid?","explanation-16424","cljs.spec.alpha/explain-data","path-16417","path-16416","len-16418","i-16419","obj-16420","mode-16421","key-16422","next-obj-16423","G__16425","oops.core/get-selector-call-info-dynamically","explanation-16451","path-16427","path-16426","len-16428","path-16430","len-16431","i-16432","obj-16433","mode-16434","key-16435","next-obj-16436","G__16452","target-obj-16429","path-16437","len-16438","i-16439","obj-16440","mode-16441","key-16442","next-obj-16443","G__16453","path-16444","len-16445","i-16446","obj-16447","mode-16448","key-16449","next-obj-16450","G__16454","oops.core/set-selector-dynamically","explanation-16469","path-16456","path-16455","len-16459","parent-obj-path-16460","key-16457","mode-16458","parent-obj-16461","path-16462","len-16463","i-16464","obj-16465","mode-16466","key-16467","next-obj-16468","G__16470"],"sourcesContent":["(ns oops.core\n  \"The main namespace to be consumed by library users from ClojureScript.\n  Provides core macros via core.clj and runtime support (see runtime.clj).\n\n    (ns your-project.namespace\n        (:require [oops.core :refer [oget oset! ocall oapply ocall! oapply!\n                                     oget+ oset!+ ocall+ oapply+ ocall!+ oapply!+\n                                     gget gset! gcall gapply gcall! gapply!\n                                     gget+ gset!+ gcall+ gapply+ gcall!+ gapply!+]]))\n\n    (oset! (js-obj) :mood \\\"a happy camper\\\")\n\n  Read about usage: https://github.com/binaryage/cljs-oops\"\n  (:require-macros [oops.core]\n                   [oops.runtime :as runtime])\n  (:require [clojure.spec.alpha]\n            [goog.object]\n            [oops.sdefs]\n            [oops.state]\n            [oops.config]\n            [oops.messages]\n            [oops.helpers]\n            [oops.schema]))\n\n; -- diagnostics reporting --------------------------------------------------------------------------------------------------\n\n(defn ^:dynamic report-error-dynamically [msg data]\n  (runtime/report-error-dynamically msg data))\n\n(defn ^:dynamic report-warning-dynamically [msg data]\n  (runtime/report-warning-dynamically msg data))\n\n(defn ^:dynamic report-if-needed-dynamically [msg-id & [info]]\n  (runtime/report-if-needed-dynamically msg-id info))\n\n; -- runtime support for macros ---------------------------------------------------------------------------------------------\n\n(defn ^boolean validate-object-access-dynamically [obj mode key push? check-key-read? check-key-write?]\n  (runtime/validate-object-access-dynamically obj mode key push? check-key-read? check-key-write?))\n\n(defn ^boolean validate-fn-call-dynamically [fn mode]\n  (runtime/validate-fn-call-dynamically fn mode))\n\n(defn ^:dynamic punch-key-dynamically! [obj key]\n  (runtime/punch-key-dynamically obj key))\n\n(defn build-path-dynamically [selector]\n  (runtime/build-path-dynamically selector))\n\n(defn check-path-dynamically [path op]\n  (runtime/check-path-dynamically path op))\n\n(defn get-key-dynamically [obj key mode]\n  (runtime/get-key-dynamically obj key mode))\n\n(defn set-key-dynamically [obj key val mode]\n  (runtime/set-key-dynamically obj key val mode))\n\n(defn get-selector-dynamically [obj selector]\n  (runtime/get-selector-dynamically obj selector))\n\n(defn get-selector-call-info-dynamically [obj selector]\n  (runtime/get-selector-call-info-dynamically obj selector))\n\n(defn set-selector-dynamically [obj selector val]\n  (runtime/set-selector-dynamically obj selector val))\n"]}