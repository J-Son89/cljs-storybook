{"version":3,"sources":["quo2/components/selectors/filter/view.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,AAAA,AAAMA,AACHC;AADH,AAEE,AAAMC,AAAS,AAACC,AAAa,AAAA,AAAWF;AAAxC,AACE,AAAAG;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAaK;AAAb,AAAAD,AAAAJ,AAAA,AAAmBM,AACS,AAACE;AAD7B,AAAAJ,AAAAJ,AAAA,AAAkCO;AAAlC,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGE,AAEsB;AAAA,AACE,AAACC,AAAMb,AAASc;;AAChB,AAAMJ;AAAN,AACE,AAAA,AAAAK,AAACL,AAAcV;;AADjB;;AAN3B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAQIgB,AAAgB,AAAA,AAAAD,AAACE,AAAuBjB,AAASS,AAChDO,AAAgB,AAAA,AAAAD,AAACG,AAAuBlB,AAASQ,AAAMC,AACtDU,AACQ,AAAA,AAAAJ,AAACK,AAAkBpB,AAASS","names":["quo2.components.selectors.filter.view/view","initial-props","pressed?","reagent.core/atom","p__19306","map__19307","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","blur?","override-theme","on-press-out","quo2.theme/get-theme","react-native.core/touchable-without-feedback","cljs.core/swap!","cljs.core/not","cljs.core/deref","react-native.core/view","quo2.components.selectors.filter.style/container-outer","quo2.components.selectors.filter.style/container-inner","quo2.components.icon/icon","quo2.components.selectors.filter.style/icon-color"],"sourcesContent":["(ns quo2.components.selectors.filter.view\n  (:require [quo2.components.icon :as icon]\n            [quo2.components.selectors.filter.style :as style]\n            [quo2.theme :as theme]\n            [react-native.core :as rn]\n            [reagent.core :as reagent]))\n\n(defn view\n  [initial-props]\n  (let [pressed? (reagent/atom (:pressed? initial-props))]\n    (fn [{:keys [blur? override-theme on-press-out]\n          :or   {override-theme (theme/get-theme)}}]\n      [rn/touchable-without-feedback\n       {:accessibility-label :selector-filter\n        :on-press-out        (fn []\n                               (swap! pressed? not)\n                               (when on-press-out\n                                 (on-press-out @pressed?)))}\n       [rn/view {:style (style/container-outer @pressed? override-theme)}\n        [rn/view {:style (style/container-inner @pressed? blur? override-theme)}\n         [icon/icon :i/unread\n          {:color (style/icon-color @pressed? override-theme)\n           :size  20}]]]])))\n"]}