{"version":3,"sources":["status_im/utils/platform.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,AAAKA,AACH,AAAYC;AAEd,AAAKC,AACH,AAAA,AAAA,AAAMF,AACJ,AAAUA;AAEd,AAAKG,AACH,AAAA,AAAA,AAAMH,AACJ,AAAeA;AAGnB,AAAA,AAAKI;AACL,AAAA,AAAKC;AAEL,AAAA,AAAMC;AAAN,AAEE,AAAAC,AAA2BM,AACA,AAAA,AACA,AAAA,AAAA,AAACC;AAF5BP,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAcK;AAAd,AAGE,AAAI,AAACG,AAAEH,AAAOR,AAAU,AAACW,AAAEH,AAAOP;;AAEtC,AAAKW,AAAS,AAAA,AAACD,AAAEb;AACjB,AAAKe,AAAK,AAAA,AAACF,AAAEb;AACb,AAAKgB,AAAU,AAAKD,AAAK,AAACX;AAE1B,AAAA,AAAMa;AAAN,AAEE,AACEH;AADF;;AAAA,AAEEC;AAFF;;AAAA;;;;AAIF,AAAA,AAAMG,AACHC;AADH,AAEE,AAAKL,AAAS,AAAIb,AAAQkB;;AAE5B,AAAKC,AAAY,AAAKN,AAAS,AAAA,AAAGb","names":["status-im.utils.platform/platform","js/shadow.js.shim.module$react_native","status-im.utils.platform/os","status-im.utils.platform/version","status-im.utils.platform/x-height","status-im.utils.platform/xs-height","status-im.utils.platform/iphone-x-dimensions?","map__17364","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","height","js/shadow.js.shim.module$react_native.Dimensions","cljs.core/js->clj","cljs.core/=","status-im.utils.platform/android?","status-im.utils.platform/ios?","status-im.utils.platform/iphone-x?","status-im.utils.platform/no-backup-directory","status-im.utils.platform/android-version>=","v","status-im.utils.platform/low-device?"],"sourcesContent":["(ns status-im.utils.platform\n  (:require [\"react-native\" :as react-native :refer (Dimensions)]))\n\n(def platform\n  (.-Platform react-native))\n\n(def os\n  (when platform\n    (.-OS ^js platform)))\n\n(def version\n  (when platform\n    (.-Version ^js platform)))\n\n;; iPhone X dimensions\n(def x-height 812)\n(def xs-height 896)\n\n(defn iphone-x-dimensions?\n  []\n  (let [{:keys [height]} (-> Dimensions\n                             (.get \"window\")\n                             (js->clj :keywordize-keys true))]\n    (or (= height x-height) (= height xs-height))))\n\n(def android? (= os \"android\"))\n(def ios? (= os \"ios\"))\n(def iphone-x? (and ios? (iphone-x-dimensions?)))\n\n(defn no-backup-directory\n  []\n  (cond\n    android? \"/../no_backup\"\n    ios?     \"/\"))\n\n(defn android-version>=\n  [v]\n  (and android? (>= version v)))\n\n(def low-device? (and android? (< version 29)))\n"]}