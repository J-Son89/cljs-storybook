{"version":3,"sources":["quo2/components/markdown/text.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACgBO;AADhB,AAAAH,AAAAJ,AAAA,AACsBQ;AADtB,AAAAJ,AAAAJ,AAAA,AAC6BS;AAD7B,AAEE,AAACC,AAAM,AAAAC,AAAM,AAAAG,AAAIN;AAAJ,AAAA,AAAAM;AAAAA;;AAAA;;;AAANH,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAA;AAAA;AACaI;;;AADb;AAEaC;;;AAFb;AAGaC;;;AAHb;AAIaC;;;AAJb;AAKaC;;;AALb;AAMaC;;;AANb;AAAA;;;;AAAA,AAAA,AAAAP,AAAA,AAAA,AAAAF;;;AAQA,AAAAU,AAAM,AAAAP,AAAIR;AAAJ,AAAA,AAAAQ;AAAAA;;AAAA;;;AAANO,AAAA,AAAA,AAAAA,AAAAT,AAAA,AAAAS,AAAA;AAAA,AAAA,AAAAA;AAAA;AACeC;;;AADf;AAEeC;;;AAFf;AAGeC;;;AAHf;AAIeC;;;AAJf;AAKeC;;;AALf;AAAA;;;;AAAA,AAAA,AAAAb,AAAA,AAAA,AAAAQ;;;AARP,AAAA,AAeoB,AAAAP,AAAIP;AAAJ,AAAA,AAAAO;AAAAA;;AAAA;;AACb,AAAI,AAAA,AAAQL,AACVA,AACA,AAAA,AAACkB,AAAMlB,AAAa,AAAI,AAAA,AAACmB,AAAE,AAACC,AAAwBC,AAAaC;;AAE5E,AAAA,AAAMC;AAAN,AAEE,AAAMC,AAAM,AAACC;AACPC,AAAM,AAACC,AAAcH;AACrBxB,AAAM,AAACJ,AAAW8B;AAFxB,AAGE,AAAA,AAACE,AAAMC,AACA,AAAA,AAAA,AAAC5B,AAAcD,AACR,AAAA,AAAA,AAAA,AAAA,AAAA,AAAC8B,AAAOJ,AAChB,AAACK,AAAiBP","names":["p__16572","map__16573","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.markdown.text/text-style","size","align","weight","style","cljs.core/merge","G__16577","cljs.core/Keyword","js/Error","or__4126__auto__","quo2.foundations.typography/font-regular","quo2.foundations.typography/font-medium","quo2.foundations.typography/font-semi-bold","quo2.foundations.typography/font-bold","quo2.foundations.typography/monospace","quo2.foundations.typography/code","G__16581","quo2.foundations.typography/label","quo2.foundations.typography/paragraph-2","quo2.foundations.typography/paragraph-1","quo2.foundations.typography/heading-2","quo2.foundations.typography/heading-1","cljs.core/assoc","cljs.core/=","quo2.theme/get-theme","quo2.foundations.colors/white","quo2.foundations.colors/neutral-100","quo2.components.markdown.text/text","this","reagent.core/current-component","props","reagent.core/props","cljs.core/into","react-native.core/text","cljs.core/dissoc","reagent.core/children"],"sourcesContent":["(ns quo2.components.markdown.text\n  (:require [quo2.foundations.colors :as colors]\n            [quo2.foundations.typography :as typography]\n            [quo2.theme :as theme]\n            [react-native.core :as rn]\n            [reagent.core :as reagent]))\n\n(defn text-style\n  [{:keys [size align weight style]}]\n  (merge (case (or weight :regular)\n           :regular   typography/font-regular\n           :medium    typography/font-medium\n           :semi-bold typography/font-semi-bold\n           :bold      typography/font-bold\n           :monospace typography/monospace\n           :code      typography/code\n           :inherit   nil)\n         (case (or size :paragraph-1)\n           :label       typography/label\n           :paragraph-2 typography/paragraph-2\n           :paragraph-1 typography/paragraph-1\n           :heading-2   typography/heading-2\n           :heading-1   typography/heading-1\n           :inherit     nil)\n         {:text-align (or align :auto)}\n         (if (:color style)\n           style\n           (assoc style :color (if (= (theme/get-theme) :dark) colors/white colors/neutral-100)))))\n\n(defn text\n  []\n  (let [this  (reagent/current-component)\n        props (reagent/props this)\n        style (text-style props)]\n    (into [rn/text\n           (merge {:style style}\n                  (dissoc props :style :size :align :weight :color))]\n          (reagent/children this))))\n"]}