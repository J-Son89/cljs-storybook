{"version":3,"sources":["quo2/components/profile/profile_card/view.cljs"],"mappings":"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","names":["p__19167","map__19169","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.profile.profile-card.view/f-profile-card-component","keycard-account?","profile-picture","name","hash","customization-color","emoji-hash","on-options-press","show-emoji-hash?","show-options-button?","show-user-hash?","show-logged-in?","on-card-press","login-card?","last-item?","card-style","map__19175","width","react-native.core/get-window","padding-bottom","border-bottom-radius","or__4126__auto__","cljs.core/not","react-native.core/touchable-without-feedback","react-native.hole-view/hole-view","cljs.core/merge","react-native.core/view","quo2.components.profile.profile-card.style/card-container","quo2.components.profile.profile-card.style/card-header","quo2.components.avatars.user-avatar.view/user-avatar","quo2.components.tags.tag/tag","quo2.foundations.colors/success-50","utils.i18n/label","quo2.components.buttons.button/button","quo2.components.profile.profile-card.style/option-button","quo2.components.profile.profile-card.style/name-container","quo2.components.markdown.text/text","quo2.components.profile.profile-card.style/user-name","quo2.components.icon/icon","quo2.components.profile.profile-card.style/keycard-icon","quo2.components.profile.profile-card.style/user-hash","and__4115__auto__","quo2.components.profile.profile-card.style/emoji-hash","quo2.components.profile.profile-card.view/profile-card","props"],"sourcesContent":["(ns quo2.components.profile.profile-card.view\n  (:require [utils.i18n :as i18n]\n            [react-native.core :as rn]\n            [quo2.components.icon :as icon]\n            [quo2.components.tags.tag :as tag]\n            [quo2.foundations.colors :as colors]\n            [react-native.hole-view :as hole-view]\n            [quo2.components.markdown.text :as text]\n            [quo2.components.buttons.button :as button]\n            [quo2.components.profile.profile-card.style :as style]\n            [quo2.components.avatars.user-avatar.view :as user-avatar]))\n\n(defn- f-profile-card-component\n  [{:keys [keycard-account? profile-picture name hash\n           customization-color emoji-hash on-options-press\n           show-emoji-hash? show-options-button? show-user-hash?\n           show-logged-in? on-card-press login-card? last-item? card-style]\n    :or   {show-emoji-hash?     false\n           show-user-hash?      false\n           customization-color  :turquoise\n           show-options-button? false\n           show-logged-in?      false\n           keycard-account?     false\n           login-card?          false\n           last-item?           false\n           card-style           {:padding-horizontal 20\n                                 :flex               1}}}]\n  (let [{:keys [width]}      (rn/get-window)\n        padding-bottom       (cond\n                               login-card?      38\n                               show-emoji-hash? 12\n                               :else            10)\n        border-bottom-radius (if (or (not login-card?) last-item?) 16 0)]\n    [rn/touchable-without-feedback\n     {:on-press            on-card-press\n      :accessibility-label :profile-card}\n     [hole-view/hole-view\n      {:key   (str name last-item?) ;; Key is required to force removal of holes\n       :style (merge {:flex-direction :row} card-style)\n       :holes (if (or (not login-card?) last-item?)\n                []\n                [{:x            20\n                  :y            108\n                  :width        (- width 40)\n                  :height       50\n                  :borderRadius 16}])}\n      [rn/view\n       {:style (style/card-container\n                {:customization-color  customization-color\n                 :padding-bottom       padding-bottom\n                 :border-bottom-radius border-bottom-radius})}\n       [rn/view\n        {:style style/card-header}\n        [user-avatar/user-avatar\n         {:full-name           name\n          :profile-picture     profile-picture\n          :override-theme      :dark\n          :size                :medium\n          :status-indicator?   false\n          :customization-color customization-color\n          :static?             true}]\n        [rn/view {:flex-direction :row}\n         (when show-logged-in?\n           [tag/tag\n            {:type                :icon\n             :size                32\n             :blurred?            true\n             :labelled?           true\n             :resource            :main-icons2/check\n             :accessibility-label :logged-in-tag\n             :icon-color          colors/success-50\n             :override-theme      :dark\n             :label               (i18n/label :t/logged-in)}])\n         (when show-options-button?\n           [button/button\n            {:size                32\n             :type                :blur-bg\n             :icon                true\n             :override-theme      :dark\n             :style               style/option-button\n             :on-press            on-options-press\n             :accessibility-label :profile-card-options}\n            :i/options])]]\n       [rn/view\n        {:style style/name-container}\n        [text/text\n         {:size            :heading-2\n          :weight          :semi-bold\n          :number-of-lines 1\n          :style           style/user-name} name]\n        (when keycard-account?\n          (icon/icon\n           :i/keycard\n           style/keycard-icon))]\n       (when show-user-hash?\n         [text/text\n          {:weight :monospace\n           :style  style/user-hash} hash])\n       (when (and show-emoji-hash? emoji-hash)\n         [text/text\n          {:weight          :monospace\n           :number-of-lines 1\n           :style           style/emoji-hash} emoji-hash])]]]))\n\n(defn profile-card\n  [props]\n  [:f> f-profile-card-component props])\n"]}