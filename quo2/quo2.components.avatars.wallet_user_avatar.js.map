{"version":3,"sources":["quo2/components/avatars/wallet_user_avatar.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAML,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAML,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAML;;;;AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAA,AAGWM;AAHX,AAAAF,AAAAJ,AAAA,AAAA,AAGkBO;AAHlB,AAAAH,AAAAJ,AAAA,AAAA,AAGyBQ;AAHzB,AAAAJ,AAAAJ,AAAA,AAAA,AAG+BS;AAH/B,AAQE,AAAMC,AAAe,AAACD,AAAKb;AACrBe,AAAe,AAAA,AAACC,AAAEH;AAClBI,AAAmBP,AACAQ,AACA,AAAA,AAAA,AAAA,AAACC;AACpBC,AAAmBT,AACAO,AACA,AAAA,AAAA,AAAA,AAACC;AACpBE,AAAe,AAAA,AAAA,AAACC,AAAoBV;AACpCW,AAAe,AAAA,AAAA,AAACC,AAA6BZ;AATnD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAUGa,AAC2BX,AACAA,AACAA,AAIAO,AAC1BK,AACS,AAACb,AAAKZ,AACN,AAACY,AAAKX,AACEqB,AACjB,AAAIR,AACGE,AACL,AAAKA,AAAeG","names":["quo2.components.avatars.wallet-user-avatar/circle-sizes","quo2.components.avatars.wallet-user-avatar/font-sizes","quo2.components.avatars.wallet-user-avatar/font-weights","p__16613","map__16614","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.avatars.wallet-user-avatar/wallet-user-avatar","f-name","l-name","color","size","circle-size","small?","cljs.core/=","f-name-initial","clojure.string/upper-case","cljs.core/subs","l-name-initial","circle-color","quo2.foundations.colors/custom-color","text-color","quo2.foundations.colors/custom-color-by-theme","react-native.core/view","quo2.components.markdown.text/text"],"sourcesContent":["(ns quo2.components.avatars.wallet-user-avatar\n  (:require [clojure.string :as string]\n            [quo2.components.markdown.text :as text]\n            [quo2.foundations.colors :as colors]\n            [react-native.core :as rn]))\n\n(def circle-sizes\n  {:small   20\n   :medium  32\n   :large   48\n   :x-large 80})\n\n(def font-sizes\n  {:small   :label\n   :medium  :paragraph-2\n   :large   :paragraph-1\n   :x-large :heading-1})\n\n(def font-weights\n  {:small   :medium\n   :medium  :semi-bold\n   :large   :semi-bold\n   :x-large :medium})\n\n(defn wallet-user-avatar\n  \"params, first name, last name, color, size\n   and if it's dark or not!\"\n  [{:keys [f-name l-name color size]\n    :or   {f-name \"John\"\n           l-name \"Doe\"\n           color  :red\n           size   :x-large}}]\n  (let [circle-size    (size circle-sizes)\n        small?         (= size :small)\n        f-name-initial (-> f-name\n                           string/upper-case\n                           (subs 0 1))\n        l-name-initial (-> l-name\n                           string/upper-case\n                           (subs 0 1))\n        circle-color   (colors/custom-color color 50 20)\n        text-color     (colors/custom-color-by-theme color 50 60)]\n    [rn/view\n     {:style {:width            circle-size\n              :height           circle-size\n              :border-radius    circle-size\n              :text-align       :center\n              :justify-content  :center\n              :align-items      :center\n              :background-color circle-color}}\n     [text/text\n      {:size   (size font-sizes)\n       :weight (size font-weights)\n       :style  {:color text-color}}\n      (if small?\n        (str f-name-initial)\n        (str f-name-initial l-name-initial))]]))\n"]}