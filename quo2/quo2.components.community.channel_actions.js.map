{"version":3,"sources":["quo2/components/community/channel_actions.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACgBO;AADhB,AAAAH,AAAAJ,AAAA,AACsBQ;AADtB,AAAAJ,AAAAJ,AAAA,AAC4BS;AAD5B,AAAAL,AAAAJ,AAAA,AAC0CU;AAD1C,AAAAN,AAAAJ,AAAA,AAC+CW;AAD/C,AAAAP,AAAAJ,AAAA,AACwDY;AADxD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGC,AACsBF,AACA,AAACG,AAA2BR,AAC5BM,AACrBG,AAAgB,AAACC,AAAqBT,AACrCQ,AAAgBE,AACfC,AAAWR,AACZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMD,AACHU,AAAmCV,AACtCW,AAAkEZ;;AAEvE,AAAA,AAAAa,AAAME;AAAN,AAAA,AAAAD,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArB,AAAA,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAApB,AAAAC,AAAAmB,AAAAA;AAAA,AAAAlB,AAAAkB,AAAA,AACWE;AADX,AAAApB,AAAAkB,AAAA,AACiBG;AADjB,AAAA,AAAA,AAAA,AAEGV,AAAgB,AAAA,AAAA,AAAA,AAAA,AAAA,AAACW,AAAqCF,AACtD,AAAAG,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AA86EgD,AAAAkB,AAAAvB;AA96EhDM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAA,AAAAK,AAAAN,AAAAK,AAAMU;AAAN,AAAA,AAAA,AAAAR,AAAAJ,AAAA,AAAA,AAAA,AAEI/B,AAAe2C,AAChB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAACC,AAAKD,AAAO,AAACE,AAAKzB,AACtBV;;AAJN,AAAA,AAAAuB,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAhB;;AAAA,AAAAa,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAA,AAAAS,AAAAjB,AAAMoB;AAAN,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAAI,AAAAnB,AAEIvB,AAAe2C,AAChB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAACC,AAAKD,AAAO,AAACE,AAAKzB,AACtBV;;;AAJN;;;;AAAA,AAAA;;AAAA,AAAA,AAAAY,AAAaF","names":["p__19591","map__19592","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.community.channel-actions/channel-action","big?","color","label","counter-value","icon","on-press","accessibility-label","react-native.core/touchable-opacity","quo2.components.community.style/channel-action-touch","react-native.core/view","quo2.components.community.style/channel-action","quo2.components.community.style/channel-action-row","quo2.components.icon/icon","quo2.components.counter.counter/counter","quo2.components.markdown.text/text","p__19594","map__19595","quo2.components.community.channel-actions/channel-actions","style","actions","cljs.core/merge","iter__4529__auto__","s__19606","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__19608","cljs.core/chunk-buffer","i__19607","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__19605","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","action","cljs.core/not=","cljs.core/last","cljs.core/chunk-first"],"sourcesContent":["(ns quo2.components.community.channel-actions\n  (:require [react-native.core :as rn]\n            [quo2.components.icon :as icons]\n            [quo2.components.counter.counter :as counter]\n            [quo2.components.markdown.text :as text]\n            [quo2.components.community.style :as style]))\n\n(defn channel-action\n  [{:keys [big? color label counter-value icon on-press accessibility-label]}]\n  [rn/touchable-opacity\n   {:on-press            on-press\n    :style               (style/channel-action-touch big?)\n    :accessibility-label accessibility-label}\n   [rn/view {:style (style/channel-action color)}\n    [rn/view {:style style/channel-action-row}\n     [icons/icon icon]\n     (when counter-value\n       [counter/counter {:type :secondary} counter-value])]\n    [text/text {:size :paragraph-1 :weight :medium :number-of-lines 2} label]]])\n\n(defn channel-actions\n  [{:keys [style actions]}]\n  [rn/view {:style (merge {:flex-direction :row :flex 1} style)}\n   (for [action actions]\n     [:<>\n      [channel-action action]\n      (when (not= action (last actions))\n        [rn/view {:width 16}])])])\n"]}