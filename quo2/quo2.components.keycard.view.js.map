{"version":3,"sources":["quo2/components/keycard/view.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;;;;;;AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAKWM;AALX,AAAAF,AAAAJ,AAAA,AAKuBO;AALvB,AAME,AAAMC,AAAM,AAAI,AAACC,AAAQH,AACX,AAAA,AAAA,AAAA,AAACI,AAAkCJ,AACnC,AAAA,AAACI;AAFf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGGC,AAAgB,AAACC,AAAqBL,AACrCM,AACS,AAAA,AAACC,AACD,AAACC,AAAmBR,AAC7BM,AACS,AAACC,AACA,AAAI,AAAAE,AAAIT;AAAJ,AAAA,AAAAS;AAAAA;;AAAY,AAACC;;AAT/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AASc,AAAA,AACDC,AACTL,AACS,AAAA,AAACC,AACD,AAACK,AAAwBZ,AAClCa,AAEsB,AAAA,AAAA,AAAA,AAAMb,AACNC,AAGA,AAAA,AAAA,AAAA,AAAMD,AAENc,AACA,AAAA,AAAA,AAAA,AAAMd","names":["p__17091","map__17092","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.keycard.view/keycard","holder-name","locked?","label","cljs.core/boolean","utils.i18n/label","react-native.core/view","quo2.components.keycard.style/card-container","react-native.core/image","quo2.foundations.resources/get-image","quo2.components.keycard.style/keycard-logo","or__4126__auto__","quo2.foundations.colors/dark?","quo2.components.keycard.style/keycard-chip","quo2.components.keycard.style/keycard-watermark","quo2.components.tags.tag/tag","quo2.foundations.colors/white-70-blur"],"sourcesContent":["(ns quo2.components.keycard.view\n  (:require [react-native.core :as rn]\n            [quo2.components.keycard.style :as style]\n            [quo2.components.tags.tag :as tag]\n            [quo2.foundations.colors :as colors]\n            [quo2.foundations.resources :as resources]\n            [utils.i18n :as i18n]))\n\n(defn keycard\n  \"This component based on the following properties:\n  - :holder-name - Can be owner's name. Default is Empty\n  - :locked? - Boolean to specify whether the keycard is locked or not\n  \"\n  [{:keys [holder-name locked?]}]\n  (let [label (if (boolean holder-name)\n                (i18n/label :t/user-keycard {:name holder-name})\n                (i18n/label :t/empty-keycard))]\n    [rn/view {:style (style/card-container locked?)}\n     [rn/image\n      {:source (resources/get-image :keycard-logo)\n       :style  (style/keycard-logo locked?)}]\n     [rn/image\n      {:source (resources/get-image\n                (if (or locked? (colors/dark?)) :keycard-chip-dark :keycard-chip-light))\n       :style  style/keycard-chip}]\n     [rn/image\n      {:source (resources/get-image :keycard-watermark)\n       :style  (style/keycard-watermark locked?)}]\n     [tag/tag\n      {:size                32\n       :type                (when locked? :icon)\n       :label               label\n       :labelled?           true\n       :blurred?            true\n       :resource            (when locked? :i/locked)\n       :accessibility-label :holder-name\n       :icon-color          colors/white-70-blur\n       :override-theme      (when locked? :dark)}]]))\n"]}