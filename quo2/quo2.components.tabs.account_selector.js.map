{"version":3,"sources":["quo2/components/tabs/account_selector.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA,AACkCC,AACAC,AACAC,AACAC,AACAF,AACAG,AAEAC,AACAC,AACAC,AACAC,AACAF,AACAC;AAEvC,AAAA,AAAME,AACHC;AADH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKqBA;;AAGrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAIL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AACgB,AAAA,AAAA,AAACC;AAQtB,AAAA,AAAMC,AACHC,AAAKC;AADR,AAEE,AAAA,AAACC,AAAOlB,AAAQ,AAACmB,AAAiBH,AAAKC;;AAEzC;;;;;;;;;;AAAA,AAAAG,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AASWM;AATX,AAAAF,AAAAJ,AAAA,AASuBO;AATvB,AAAAH,AAAAJ,AAAA,AASoCQ;AATpC,AAAAJ,AAAAJ,AAAA,AASkDS;AATlD,AAAAL,AAAAJ,AAAA,AAS+DU;AAT/D,AAAAN,AAAAJ,AAAA,AAS0EW;AAT1E,AAUE,AAAMrB,AAAmB,AAAA,AAACI,AAAkB,AAAA,AAAA,AAAIe;AAC1CG,AAAmB,AAAA,AAAClB,AAAkB,AAAA,AAAA,AAAIe;AAC1CI,AAAmB,AAAA,AAACnB,AAAkB,AAAA,AAAA,AAAIe;AAFhD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGGK,AAAgBH,AAChB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAML,AACHS,AAGyBF,AAEzBH,AACFI,AAAgB,AAACzB,AAAsBC,AACtCwB,AAAgBtB,AACfuB,AAAUP,AACXO,AAGiBH,AACjBL","names":["quo2.components.tabs.account-selector/themes","quo2.foundations.colors/neutral-10","quo2.foundations.colors/neutral-100","quo2.foundations.colors/neutral-50","quo2.foundations.colors/neutral-80-opa-5","quo2.foundations.colors/neutral-80-opa-40","quo2.foundations.colors/neutral-80-opa-80","quo2.foundations.colors/white","quo2.foundations.colors/neutral-40","quo2.foundations.colors/white-opa-5","quo2.components.tabs.account-selector/account-container-row","background-color","quo2.components.tabs.account-selector/account-emoji","quo2.components.tabs.account-selector/account-emoji-container","quo2.foundations.colors/custom-color","quo2.components.tabs.account-selector/get-color-by-type","type","key","cljs.core/get-in","quo2.theme/get-theme","p__19316","map__19317","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.tabs.account-selector/account-selector","show-label?","account-text","account-emoji","transparent?","label-text","style","account-text-color","label-text-color","react-native.core/view","quo2.components.markdown.text/text"],"sourcesContent":["(ns quo2.components.tabs.account-selector\n  (:require [quo2.components.markdown.text :as quo2]\n            [quo2.foundations.colors :as colors]\n            [quo2.theme :as theme]\n            [react-native.core :as rn]))\n\n(def themes\n  {:light {:default     {:bg           colors/neutral-10\n                         :account-text colors/neutral-100\n                         :label-text   colors/neutral-50}\n           :transparent {:bg           colors/neutral-80-opa-5\n                         :account-text colors/neutral-100\n                         :label-text   colors/neutral-80-opa-40}}\n\n   :dark  {:default     {:bg           colors/neutral-80-opa-80\n                         :account-text colors/white\n                         :label-text   colors/neutral-40}\n           :transparent {:bg           colors/white-opa-5\n                         :account-text colors/white\n                         :label-text   colors/neutral-40}}})\n\n(defn account-container-row\n  [background-color]\n  {:padding-vertical 4\n   :flex-direction   :row\n   :align-items      :center\n   :background-color background-color\n   :border-radius    12})\n\n(def account-emoji\n  {:height 16\n   :width  16})\n\n(def account-emoji-container\n  {:background-color (colors/custom-color :purple 50)\n   :padding          8\n   :justify-content  :center\n   :align-items      :center\n   :border-radius    10\n   :margin-left      4\n   :margin-right     8})\n\n(defn get-color-by-type\n  [type key]\n  (get-in themes [(theme/get-theme) type key]))\n\n(defn account-selector\n  \"[account-selector opts]\n   opts\n   {:show-label?       true/false            ;; hide or show the label\n    :transparent?      true/false            ;; implement transparent background styles\n    :style             style                 ;; any other styling can be passed\n    :label-text        \\\"Label\\\"             ;; content to show where the label should be shown\n    :account-text      \\\"My Savings\\\"        ;; content in place of account name\n   }\"\n  [{:keys [show-label? account-text account-emoji transparent? label-text style]}]\n  (let [background-color   (get-color-by-type (if transparent? :transparent :default) :bg)\n        account-text-color (get-color-by-type (if transparent? :transparent :default) :account-text)\n        label-text-color   (get-color-by-type (if transparent? :transparent :default) :label-text)]\n    [rn/view {:style style}\n     (when show-label?\n       [quo2/text\n        {:weight :medium\n         :size   :paragraph-2\n         :style  {:color         label-text-color\n                  :margin-bottom 8}}\n        label-text])\n     [rn/view {:style (account-container-row background-color)}\n      [rn/view {:style account-emoji-container}\n       [quo2/text account-emoji]]\n      [quo2/text\n       {:weight :medium\n        :size   :paragraph-1\n        :style  {:color account-text-color}}\n       account-text]]]))\n\n"]}