{"version":3,"sources":["quo2/components/empty_state/empty_state/view.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAEIW;AAFJ,AAAAP,AAAAJ,AAAA,AAGIY;AAHJ,AAAAR,AAAAJ,AAAA,AAAA,AACkBM;AADlB,AAAAF,AAAAJ,AAAA,AACsCO;AADtC,AAAAH,AAAAJ,AAAA,AAC4CQ;AAD5C,AAAAJ,AAAAJ,AAAA,AACkDS;AADlD,AAAAL,AAAAJ,AAAA,AAC8DU;AAD9D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKGG,AAAgBC,AACfC,AACSC,AACAT,AACTM,AAAgBI,AACfC,AACkB,AAACC,AAAaT,AAIhCF,AACAU,AACkB,AAACE,AAAmBV,AAKtCD,AACF,AAAAY,AAC6CV;AAD7C,AAAA,AAAAU;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArB,AAAA,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAApB,AAAAC,AAAAmB,AAAAA;AAAA,AAAAlB,AAAAkB,AAAA,AAAYC;AAAZ,AAAAnB,AAAAkB,AAAA,AACYE;AADZ,AAAA,AAAA,AAAA,AAAA,AAEGX,AAAgBY,AACfC,AACA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEoC,AAACC,AAA0BtB,AAC3BkB;AAHpC,AAAA,AAIEd;AAAM,AAAAiB,AAAA,AAAA,AAACE;;AAJTF;;AAKAJ,AAED,AAAAF,AAC6CT;AAD7C,AAAA,AAAAS;AAAA,AAAA,AAAAS,AAAAT;AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA7B,AAAA,AAAA6B,AAAA,AAAA,AAAA,AAAA,AAAA5B,AAAAC,AAAA2B,AAAAA;AAAA,AAAA1B,AAAA0B,AAAA,AAAYC;AAAZ,AAAA3B,AAAA0B,AAAA,AACYE;AADZ,AAAA,AAEGN,AACA,AAAAO,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGmBD;AAHnB,AAAA,AAIEtB;AAAM,AAAAuB,AAAA,AAAA,AAACJ;;AAJTI;;AAKAF;;AARH;;;;AAXH","names":["p__17008","map__17010","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.empty-state.empty-state.view/empty-state","customization-color","image","title","description","blur?","upper-button","lower-button","react-native.core/view","quo2.components.empty-state.empty-state.styles/container","react-native.fast-image/fast-image","quo2.components.empty-state.empty-state.styles/image","quo2.components.empty-state.empty-state.styles/text-container","quo2.components.markdown.text/text","quo2.components.empty-state.empty-state.styles/title","quo2.components.empty-state.empty-state.styles/description","temp__5735__auto__","map__17016","upper-button-text","upper-button-on-press","quo2.components.empty-state.empty-state.styles/button-container","quo2.components.buttons.button/button","G__17021","quo2.components.empty-state.empty-state.styles/upper-button-color","cljs.core/assoc","map__17022","lower-button-text","lower-button-on-press","G__17024"],"sourcesContent":["(ns quo2.components.empty-state.empty-state.view\n  (:require [quo2.components.buttons.button :as button]\n            [quo2.components.empty-state.empty-state.styles :as styles]\n            [quo2.components.markdown.text :as text]\n            [react-native.core :as rn]\n            [react-native.fast-image :as fast-image]))\n\n(defn empty-state\n  [{:keys        [customization-color image title description blur?]\n    upper-button :upper-button\n    lower-button :lower-button\n    :or          {customization-color :blue}}]\n  [rn/view {:style styles/container}\n   [fast-image/fast-image\n    {:style  styles/image\n     :source image}]\n   [rn/view {:style styles/text-container}\n    [text/text\n     {:style           (styles/title blur?)\n      :number-of-lines 1\n      :weight          :semi-bold\n      :size            :paragraph-1}\n     title]\n    [text/text\n     {:style           (styles/description blur?)\n      :number-of-lines 1\n      :text-align      :center\n      :weight          :regular\n      :size            :paragraph-2}\n     description]]\n   (when-let [{upper-button-text     :text\n               upper-button-on-press :on-press} upper-button]\n     [rn/view {:style styles/button-container}\n      [button/button\n       (cond-> {:type                      :primary\n                :size                      32\n                :override-background-color (styles/upper-button-color customization-color)\n                :on-press                  upper-button-on-press}\n         blur? (assoc :override-theme :dark))\n       upper-button-text]\n\n      (when-let [{lower-button-text     :text\n                  lower-button-on-press :on-press} lower-button]\n        [button/button\n         (cond-> {:style    {:margin-top 12}\n                  :size     32\n                  :type     :blur-bg\n                  :on-press lower-button-on-press}\n           blur? (assoc :override-theme :dark))\n         lower-button-text])])])\n"]}