{"version":3,"sources":["quo2/components/drawers/drawer_buttons/view.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,AAAA,AAAMA,AACHC;AADH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGC,AAAgBC,AAChBF,AACCC,AACQE,AACPC,AACQC;;AAGb,AAAA,AAAMC,AAAQC;AAAd,AAAkB,AAAI,AAASA,AAAI,AAAAC,AAAUD;;AAE7C,AAAA,AAAME,AACHT;AADH,AAEE,AAAI,AAACM,AAAON;AAAZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACGD,AACCW,AAESC,AAETX;;AANJ,AAOGD,AAAcC;;;AAEnB,AAAA,AAAMY,AACHZ;AADH,AAEE,AAAI,AAACM,AAAON;AAAZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACGU,AAESG,AAETb;;AACDA;;;AAEJ,AAAA,AAAAc,AAAMM,AAC2DpB;AADjE,AAAA,AAAAe,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACoBO;AADpB,AAAAH,AAAAJ,AAAA,AAC0BQ;AAD1B,AAAAJ,AAAAJ,AAAA,AACkCS;AADlC,AAAAL,AAAAJ,AAAA,AACsCU;AADtC,AAAAN,AAAAJ,AAAA,AAC0DW;AAD1D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGC,AACsBF,AACAJ,AAEAC,AACA,AAAA,AAAmBA,AACxCrB,AACCS,AAES,AAACkB,AAAmBJ,AAE7BD,AACD,AAAA,AAAA,AAAIG,AACDd,AAAoBZ,AACpBS,AAAuBT;;AAE9B;;;;;;;;;;;;;;AAAA,AAAA6B,AAAME,AAa4CI,AAAQC;AAb1D,AAAA,AAAAN,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAd,AAAA,AAAAc,AAAA,AAAA,AAAA,AAAA,AAAAb,AAAAC,AAAAY,AAAAA;AAAA,AAAAX,AAAAW,AAAA,AAaWE;AAbX,AAAAb,AAAAW,AAAA,AAa2BG;AAb3B,AAAAd,AAAAW,AAAA,AAaoCI;AAbpC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAcGjC,AACQ,AAACoC,AAAML,AAAgBM,AAC9BC,AAMAtC,AAQCmB,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACiB,AAEcG,AACRP,AAAUE,AACjBf,AACA,AAAA,AAAA,AAAA,AAAA,AAACiB,AAAcI,AAERP,AAAaE","names":["quo2.components.drawers.drawer-buttons.view/render-bottom","children","react-native.core/view","quo2.components.drawers.drawer-buttons.style/bottom-container","quo2.components.drawers.drawer-buttons.style/bottom-icon","quo2.components.icon/icon","quo2.foundations.colors/white","quo2.components.drawers.drawer-buttons.view/label?","el","cljs.core/Keyword","quo2.components.drawers.drawer-buttons.view/render-children-bottom","quo2.components.markdown.text/text","quo2.components.drawers.drawer-buttons.style/bottom-text","quo2.components.drawers.drawer-buttons.view/render-children-top","quo2.components.drawers.drawer-buttons.style/top-text","p__16987","map__16988","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.drawers.drawer-buttons.view/card","on-press","style","heading","gap","accessibility-label","top?","react-native.core/touchable-highlight","quo2.components.drawers.drawer-buttons.style/heading-text","p__16990","map__16991","quo2.components.drawers.drawer-buttons.view/view","container-style","top-card","bottom-card","child-1","child-2","cljs.core/merge","quo2.components.drawers.drawer-buttons.style/outer-container","react-native.blur/view","quo2.components.drawers.drawer-buttons.style/top-card","quo2.components.drawers.drawer-buttons.style/bottom-card"],"sourcesContent":["(ns quo2.components.drawers.drawer-buttons.view\n  (:require [react-native.core :as rn]\n            [quo2.components.icon :as icon]\n            [quo2.components.markdown.text :as text]\n            [quo2.foundations.colors :as colors]\n            [react-native.blur :as blur]\n            [quo2.components.drawers.drawer-buttons.style :as style]))\n\n(defn render-bottom\n  [children]\n  [rn/view {:style style/bottom-container}\n   children\n   [rn/view\n    {:style style/bottom-icon}\n    [icon/icon :arrow-right\n     {:color colors/white\n      :size  20}]]])\n\n(defn label? [el] (or (string? el) (keyword? el)))\n\n(defn render-children-bottom\n  [children]\n  (if (label? children)\n    [render-bottom\n     [text/text\n      {:size   :paragraph-2\n       :style  style/bottom-text\n       :weight :semi-bold}\n      children]]\n    [render-bottom children]))\n\n(defn render-children-top\n  [children]\n  (if (label? children)\n    [text/text\n     {:size   :paragraph-2\n      :style  style/top-text\n      :weight :semi-bold}\n     children]\n    children))\n\n(defn card\n  [{:keys [on-press style heading gap accessibility-label top?]} children]\n  [rn/touchable-highlight\n   {:accessibility-label accessibility-label\n    :on-press            on-press\n    :border-radius       20\n    :style               style\n    :underlay-color      (:background-color style)}\n   [rn/view\n    [text/text\n     {:size   :heading-1\n      :style  (style/heading-text gap)\n      :weight :semi-bold}\n     heading]\n    (if top?\n      [render-children-top children]\n      [render-children-bottom children])]])\n\n(defn view\n  \"[view opts]\n   opts\n   {:container-style  style-object\n    :top-card         { :on-press event\n                        :heading  string\n                        :accessibility-label keyword}\n    :bottom-card      { :on-press event\n                        :heading  string\n                        :accessibility-label keyword}}\n    child-1           string, keyword or hiccup\n    child-2           string, keyword or hiccup\n   \"\n  [{:keys [container-style top-card bottom-card]} child-1 child-2]\n  [rn/view\n   {:style (merge container-style style/outer-container)}\n   [blur/view\n    {:blur-type   :dark\n     :blur-amount 10\n     :style       {:flex                    1\n                   :border-top-left-radius  20\n                   :border-top-right-radius 20}}]\n   [rn/view\n    {:style {:flex             1\n             :background-color :transparent\n             :position         :absolute\n             :top              0\n             :left             0\n             :right            0\n             :bottom           0}}\n    [card\n     (merge {:gap   4\n             :top?  true\n             :style style/top-card}\n            top-card) child-1]\n    [card\n     (merge {:style style/bottom-card\n             :gap   20}\n            bottom-card) child-2]]])"]}