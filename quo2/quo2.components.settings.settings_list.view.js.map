{"version":3,"sources":["quo2/components/settings/settings_list/view.cljs"],"mappings":"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","names":["quo2.components.settings.settings-list.view/settings-title","title","status-tag-props","override-theme","react-native.core/view","quo2.components.settings.settings-list.style/title-container","quo2.components.markdown.text/text","quo2.components.settings.settings-list.style/title","quo2.components.settings.settings-list.style/tag-container","quo2.components.tags.status-tags/status-tag","quo2.components.settings.settings-list.view/left-icon-comp","icon","quo2.components.settings.settings-list.style/icon","quo2.components.icon/icon","quo2.foundations.colors/theme-colors","quo2.foundations.colors/neutral-50","quo2.foundations.colors/neutral-40","quo2.components.settings.settings-list.view/chevron-icon","p__19403","map__19404","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.settings.settings-list.view/toggle-button","checked?","on-change","quo2.components.selectors.selectors.view/toggle","new-value","quo2.components.settings.settings-list.view/badge-icon","quo2.components.settings.settings-list.style/dot","p__19411","map__19412","quo2.components.settings.settings-list.view/right-button","on-press","quo2.components.buttons.button/button","p__19423","map__19424","quo2.components.settings.settings-list.view/communities-icons","data","icon-style","communities-count","cljs.core/count","quo2.components.settings.settings-list.style/communities-container","cljs.core/map-indexed","p__19442","map__19443","index","source","accessibility-label","react-native.core/image","cljs.core/merge","quo2.components.settings.settings-list.style/community-icon","p__19450","map__19451","quo2.components.settings.settings-list.view/settings-list","left-icon","chevron?","toggle-props","badge?","button-props","communities-props","container-style","react-native.core/touchable-without-feedback","quo2.components.settings.settings-list.style/item-container","quo2.components.settings.settings-list.style/inner-container"],"sourcesContent":["(ns quo2.components.settings.settings-list.view\n  (:require [quo2.components.settings.settings-list.style :as style]\n            [quo2.components.icon :as icons]\n            [quo2.components.selectors.selectors.view :as selectors]\n            [quo2.components.buttons.button :as button]\n            [quo2.components.markdown.text :as text]\n            [quo2.components.tags.status-tags :as status-tag]\n            [quo2.foundations.colors :as colors]\n            [react-native.core :as rn]))\n\n(defn settings-title\n  [title status-tag-props override-theme]\n  [rn/view\n   {:style style/title-container}\n   (when title\n     [text/text\n      {:accessibility-label :setting-item-name-text\n       :ellipsize-mode      :tail\n       :style               (style/title override-theme)\n       :override-theme      override-theme\n       :number-of-lines     1\n       :weight              :medium\n       :size                :paragraph-1}\n      title])\n   (when status-tag-props\n     [rn/view {:style style/tag-container}\n      [status-tag/status-tag\n       status-tag-props]])])\n\n(defn left-icon-comp\n  [icon]\n  [rn/view {:style style/icon}\n   [icons/icon icon\n    {:color (colors/theme-colors\n             colors/neutral-50\n             colors/neutral-40)}]])\n\n(def chevron-icon\n  [rn/view\n   [icons/icon :chevron-right\n    {:color (colors/theme-colors\n             colors/neutral-50\n             colors/neutral-40)}]])\n\n(defn toggle-button\n  [{:keys [checked?\n           on-change]}]\n  [selectors/toggle\n   {:checked?  checked?\n    :on-change (fn [new-value] (on-change new-value))}])\n\n(defn badge-icon\n  [override-theme]\n  [rn/view\n   {:accessible          :true\n    :accessibility-label :setting-list-badge\n    :style               (style/dot override-theme)}])\n\n(defn right-button\n  [{:keys [title\n           on-press]}\n   override-theme]\n  [button/button\n   {:type           :outline\n    :override-theme override-theme\n    :on-press       on-press\n    :size           24}\n   title])\n\n(defn communities-icons\n  [{:keys [data\n           icon-style]}\n   override-theme]\n  (let [communities-count (dec (count data))]\n    [rn/view\n     {:style style/communities-container}\n     (map-indexed\n      (fn [index {:keys [source accessibility-label]}]\n        [rn/image\n         {:key                 source\n          :source              (if (string? source)\n                                 {:uri source}\n                                 source)\n          :accessibility-label accessibility-label\n          :style               (merge (style/community-icon (- communities-count index) override-theme)\n                                      icon-style)}])\n      data)]))\n\n(defn settings-list\n  \"Options\n   - `title` String to show in the center of the component, right to the icon and left to optional gadgets.\n   - `on-press` Callback called when the component is pressed.\n   - `accessibility-label` String to use as accessibility-label for VoiceOver.\n   - `left-icon` icon keyword for icon on left.\n   - `chevron?` Boolean to show/hide chevron at the right border of the component.\n   - `toggle-prop` Map with the following keys:\n       `checked?` Boolean value to set check or unchecked toggle.\n       `on-change` Callback called when user toggles toggle. Will pass the new toggle value to the callback\n   - `badge?` Boolean to show/hide badge.\n   - `button-props` Map with the following keys:\n       `title` String to show as button text.\n       `on-press` Callback called when button is pressed.\n   - `communities-props` Map with the following keys:\n       `data` Array of maps containg source of the community asset.\n   - `style` Styles map to be merge with default container styles.\n   - `overide-theme` :dark or :light\n   - `status-tag-props see the spec for status-tag component\n   \"\n\n  [{:keys [title\n           on-press\n           accessibility-label\n           left-icon\n           chevron?\n           toggle-props\n           badge?\n           button-props\n           communities-props\n           container-style\n           override-theme\n           status-tag-props]}]\n  [rn/touchable-without-feedback\n   {:on-press            on-press\n    :accessibility-label accessibility-label}\n   [rn/view\n    {:style (merge style/item-container container-style)}\n    [rn/view {:style style/inner-container}\n     (when left-icon\n       [left-icon-comp left-icon])\n     [settings-title title status-tag-props override-theme]\n     (when toggle-props\n       [toggle-button toggle-props])\n     (when badge? [badge-icon override-theme])\n     (when button-props\n       [right-button button-props override-theme])\n     (when communities-props (communities-icons communities-props override-theme))\n     (when chevron? chevron-icon)]]])\n"]}