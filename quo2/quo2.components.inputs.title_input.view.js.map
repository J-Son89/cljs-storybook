{"version":3,"sources":["quo2/components/inputs/title_input/view.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,AAAA,AAAOA,AACJC;AADH,AAEE,AAAI,AAAA,AAAI,AAACC,AAAMD;AACb,AAAA,AAAOA;;AACPA;;;AAEJ,AAAA,AAAAE,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AAEWO;AAFX,AAAAH,AAAAJ,AAAA,AAAA,AAGWQ;AAHX,AAAAJ,AAAAJ,AAAA,AAIWS;AAJX,AAAAL,AAAAJ,AAAA,AAAA,AAKWU;AALX,AAAAN,AAAAJ,AAAA,AAAA,AAMWW;AANX,AAAAP,AAAAJ,AAAA,AAOWY;AAPX,AAWE,AAAMC,AAAU,AAACC,AAAaN;AACxBX,AAAU,AAACiB,AAAaH;AACxBI,AAAU,AAAKC;AAAL,AACE,AAACC,AAAOpB,AAAMmB;;AACd,AAAMT;AAAN,AACE,AAACA,AAAeS;;AADlB;;;AAJlB,AAME,AAAAE;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAlB,AAAA,AAAAkB,AAAA,AAAA,AAAA,AAAA,AAAAjB,AAAAC,AAAAgB,AAAAA;AAAA,AAAAf,AAAAe,AAAA,AAAaC;AAAb,AAAAhB,AAAAe,AAAA,AAAiCE;AAAjC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACGC,AACQC,AACPD,AAAgBE,AACfC,AAcW,AAACM,AAAIV,AACHX,AACCD;AApBnB,AAaiB,AAACoB,AAAMhB,AAAS,AAAA,AAACiB;AAblC,AAUqBnB;AAVrB,AAcgB,AAACkB,AAAMhB,AAAS,AAAA,AAACiB;AAdjC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACJ,AAGS,AAACC,AAAiBN,AAAUf,AAAMM,AAGvB,AAAA,AAAA,AAACgB,AAA+BhB,AAGzCJ,AAEIO,AAIC,AAACiB,AAA0BZ,AAAoBd,AAAMM,AAC9C,AAAA,AAAAqB,AAAKpB,AACH,AAACqB,AAAoC5B,AAAMM,AAC3C,AAACuB,AAA4B7B,AAAMM,AAC/DU,AACQc,AACPC,AACCA,AACQ,AAACC,AAAiBhC,AAAMM,AAEhC,AAAChB,AACA,AACC,AAAA,AAAAqC,AAACnC,AAAOD,AACVwC,AACQ,AAACC,AAAiBhC,AAAMM,AAEhC,AAAA,AACK,AAAChB,AACA,AAAKc","names":["quo2.components.inputs.title-input.view/pad-0","value","cljs.core/count","p__17051","map__17052","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.inputs.title-input.view/title-input","blur?","on-change-text","auto-focus","placeholder","max-length","default-value","override-theme","focused?","reagent.core/atom","on-change","v","cljs.core/reset!","p__17054","map__17055","customization-color","disabled?","react-native.core/view","quo2.components.inputs.title-input.style/container","quo2.components.inputs.title-input.style/text-input-container","react-native.core/text-input","quo2.components.markdown.text/text-style","quo2.components.inputs.title-input.style/title-text","quo2.theme/theme-value","cljs.core/swap!","cljs.core/constantly","cljs.core/not","quo2.components.inputs.title-input.style/get-selection-color","cljs.core/deref","quo2.components.inputs.title-input.style/get-focused-placeholder-color","quo2.components.inputs.title-input.style/get-placeholder-color","quo2.components.inputs.title-input.style/counter-container","quo2.components.markdown.text/text","quo2.components.inputs.title-input.style/char-count"],"sourcesContent":["(ns quo2.components.inputs.title-input.view\n  (:require\n    [quo2.components.inputs.title-input.style :as style]\n    [quo2.components.markdown.text :as text]\n    [reagent.core :as reagent]\n    [react-native.core :as rn]\n    [quo2.theme :as theme]))\n\n(defn- pad-0\n  [value]\n  (if (<= (count value) 1)\n    (str 0 value)\n    value))\n\n(defn title-input\n  [{:keys [blur?\n           on-change-text\n           auto-focus\n           placeholder\n           max-length\n           default-value\n           override-theme]\n    :or   {max-length    0\n           auto-focus    false\n           default-value \"\"}}]\n  (let [focused?  (reagent/atom auto-focus)\n        value     (reagent/atom default-value)\n        on-change (fn [v]\n                    (reset! value v)\n                    (when on-change-text\n                      (on-change-text v)))]\n    (fn [{:keys [customization-color disabled?]}]\n      [rn/view\n       {:style style/container}\n       [rn/view {:style style/text-input-container}\n        [rn/text-input\n         {:style\n          (text/text-style\n           {:size   :heading-2\n            :weight :semi-bold\n            :style  (style/title-text disabled? blur? override-theme)})\n          :default-value default-value\n          :accessibility-label :profile-title-input\n          :keyboard-appearance (theme/theme-value :light :dark override-theme)\n          :on-focus #(swap! focused? (constantly true))\n          :on-blur #(swap! focused? (constantly false))\n          :auto-focus auto-focus\n          :input-mode :text\n          :on-change-text on-change\n          :editable (not disabled?)\n          :max-length max-length\n          :placeholder placeholder\n          :selection-color (style/get-selection-color customization-color blur? override-theme)\n          :placeholder-text-color (if @focused?\n                                    (style/get-focused-placeholder-color blur? override-theme)\n                                    (style/get-placeholder-color blur? override-theme))}]]\n       [rn/view\n        {:style style/counter-container}\n        [text/text\n         [text/text\n          {:style (style/char-count blur? override-theme)\n           :size  :paragraph-2}\n          (pad-0\n           (str\n            (count @value)))]\n         [text/text\n          {:style (style/char-count blur? override-theme)\n           :size  :paragraph-2}\n          (str \"/\"\n               (pad-0\n                (str max-length)))]]]])))\n"]}