{"version":3,"sources":["quo2/components/settings/reorder_item/items/item_tabs.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,AAAA,AAAMA,AACHC;AADH,AAEE,AAAMC,AAAU,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACE,AAAA,AAACD,AAAcE,AACS,AAAA,AAAQF,AACRG,AACxB,AAAA,AAACH,AAAcI,AAAgBD,AAChB,AAACE,AAAgB,AAAA,AAAOL,AAAM,AAACM;AALhE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMGF,AACQG,AACRN,AACCO,AACQC,AAER,AAAA,AAAQT;;AAEd,AAAA,AAAMU,AACHC;AADH,AAEE,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAc,AAAA,AAAAF,AAAe,AAAAA,AAACb;AAAoBY;;AAE1D,AAAA,AAAAI,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWL;AADX,AAAAS,AAAAJ,AAAA,AAAA,AACgBM;AADhB,AAAAF,AAAAJ,AAAA,AAC+BO,AAEL,AAAA,AAACC;AAH3B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIGC,AAC8BH,AAGA,AAACI,AACD,AAACC,AACD,AAACC,AACD,AAAClB,AAAeC,AAChBY","names":["quo2.components.settings.reorder-item.items.item-tabs/render-tab-item","item","tab-image","quo.react-native/image","quo2.components.settings.reorder-item.style/tab-item-image","quo.react-native/view","quo2.components.icon/icon","quo2.components.settings.reorder-item.style/tab-icon","quo2.components.settings.reorder-item.style/tab-item-container","quo.components.text/text","quo2.components.settings.reorder-item.style/tab-item-label","quo2.components.settings.reorder-item.items.item-tabs/transform-data","data","p1__19542#","cljs.core/map","cljs.core/PersistentHashMap","p__19553","map__19554","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.settings.reorder-item.items.item-tabs/view","default-active","on-change","cljs.core/constantly","quo2.components.tabs.segmented-tab/segmented-control","quo2.components.settings.reorder-item.style/tab-container","quo2.components.settings.reorder-item.style/segmented-tab-item-container","quo2.components.settings.reorder-item.style/active-segmented-tab-item-container"],"sourcesContent":["(ns quo2.components.settings.reorder-item.items.item-tabs\n  (:require [quo2.components.tabs.segmented-tab :as quo2]\n            [quo.react-native :as rn]\n            [quo.components.text :as text]\n            [quo2.components.settings.reorder-item.style :as style]\n            [quo2.components.icon :as quo2-icons]))\n\n(defn render-tab-item\n  [item]\n  (let [tab-image (cond\n                    (item :image) [rn/image\n                                   {:source (:image item)\n                                    :style  style/tab-item-image}]\n                    (item :icon)  [rn/view {:style style/tab-item-image}\n                                   (quo2-icons/icon (:icon item) (style/tab-icon))])]\n    [rn/view\n     {:style style/tab-item-container}\n     tab-image\n     [text/text\n      {:style style/tab-item-label\n       :width :medium}\n      (:label item)]]))\n\n(defn transform-data\n  [data]\n  (map #(hash-map :id (:id %) :label (render-tab-item %)) data))\n\n(defn view\n  [{:keys [data default-active on-change]\n    :or   {default-active 1\n           on-change      (constantly nil)}}]\n  [quo2/segmented-control\n   {:default-active              default-active\n    :size                        32\n    :blur?                       false\n    :container-style             (style/tab-container)\n    :item-container-style        (style/segmented-tab-item-container)\n    :active-item-container-style (style/active-segmented-tab-item-container)\n    :data                        (transform-data data)\n    :on-change                   on-change}])\n"]}