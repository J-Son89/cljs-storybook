{"version":3,"sources":["quo/animated.cljs"],"mappings":"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","names":["quo.animated/create-animated-component","cljs.core/comp","reagent.core/adapt-react-class","js/shadow.js.shim.module$react_native_reanimated.default","quo.animated/view","quo.animated/text","quo.animated/scroll-view","quo.animated/code","quo.animated/animated-flat-list","quo.gesture-handler/flat-list-raw","quo.animated/flat-list","props","quo.react-native/base-list-props","quo.animated/useCode","var_args","G__17425","quo.animated/code!","js/Error","setup-fn","deps","cljs.core/into-array","js/undefined","quo.animated/eq","target-obj-17426","*runtime-state*-orig-val__17434","oops.state/*runtime-state*","*runtime-state*-temp-val__17435","oops.state/prepare-state","next-obj-17431","oops.core/validate-object-access-dynamically","quo.animated/neq","target-obj-17445","*runtime-state*-orig-val__17447","*runtime-state*-temp-val__17448","next-obj-17446","quo.animated/greater","target-obj-17449","*runtime-state*-orig-val__17452","*runtime-state*-temp-val__17453","next-obj-17451","quo.animated/greater-or-eq","target-obj-17456","*runtime-state*-orig-val__17459","*runtime-state*-temp-val__17461","next-obj-17457","quo.animated/less","target-obj-17464","*runtime-state*-orig-val__17467","*runtime-state*-temp-val__17468","next-obj-17465","quo.animated/less-or-eq","target-obj-17470","*runtime-state*-orig-val__17472","*runtime-state*-temp-val__17473","next-obj-17471","quo.animated/not*","target-obj-17475","*runtime-state*-orig-val__17482","*runtime-state*-temp-val__17483","next-obj-17480","quo.animated/or*","target-obj-17485","*runtime-state*-orig-val__17487","*runtime-state*-temp-val__17488","next-obj-17486","quo.animated/and*","target-obj-17489","*runtime-state*-orig-val__17491","*runtime-state*-temp-val__17492","next-obj-17490","quo.animated/diff","target-obj-17495","*runtime-state*-orig-val__17500","*runtime-state*-temp-val__17501","next-obj-17498","quo.animated/add","target-obj-17503","*runtime-state*-orig-val__17506","*runtime-state*-temp-val__17507","next-obj-17505","quo.animated/sub","target-obj-17509","*runtime-state*-orig-val__17511","*runtime-state*-temp-val__17512","next-obj-17510","quo.animated/multiply","target-obj-17514","*runtime-state*-orig-val__17516","*runtime-state*-temp-val__17517","next-obj-17515","quo.animated/divide","target-obj-17519","*runtime-state*-orig-val__17521","*runtime-state*-temp-val__17522","next-obj-17520","quo.animated/abs","target-obj-17525","*runtime-state*-orig-val__17529","*runtime-state*-temp-val__17530","next-obj-17527","quo.animated/min*","target-obj-17532","*runtime-state*-orig-val__17534","*runtime-state*-temp-val__17535","next-obj-17533","quo.animated/max*","target-obj-17540","*runtime-state*-orig-val__17542","*runtime-state*-temp-val__17543","next-obj-17541","quo.animated/set","target-obj-17545","*runtime-state*-orig-val__17549","*runtime-state*-temp-val__17550","next-obj-17546","quo.animated/start-clock","target-obj-17551","*runtime-state*-orig-val__17554","*runtime-state*-temp-val__17555","next-obj-17553","quo.animated/stop-clock","target-obj-17557","*runtime-state*-orig-val__17560","*runtime-state*-temp-val__17561","next-obj-17559","quo.animated/clock-running","js/shadow.js.shim.module$react_native_reanimated.clockRunning","quo.animated/bezier","js/shadow.js.shim.module$react_native_reanimated.EasingNode","quo.animated/linear","quo.animated/easings","quo.animated/springs","quo.animated/set-value","anim","val","target-obj-17564","*runtime-state*-orig-val__17569","*runtime-state*-temp-val__17570","call-info-17566","next-obj-17568","fn-17565","oops.core/validate-fn-call-dynamically","oops.state/get-last-access-modifier","quo.animated/Value","target-obj-17575","*runtime-state*-orig-val__17577","*runtime-state*-temp-val__17578","next-obj-17576","quo.animated/value","x","quo.animated/Clock","target-obj-17579","*runtime-state*-orig-val__17581","*runtime-state*-temp-val__17582","next-obj-17580","quo.animated/clock","quo.animated/debug","target-obj-17583","*runtime-state*-orig-val__17585","*runtime-state*-temp-val__17586","next-obj-17584","quo.animated/log","target-obj-17587","*runtime-state*-orig-val__17591","*runtime-state*-temp-val__17592","next-obj-17589","G__17596","quo.animated/event","config","options","target-obj-17601","*runtime-state*-orig-val__17605","*runtime-state*-temp-val__17606","call-info-17603","next-obj-17604","fn-17602","cljs.core/clj->js","quo.animated/on-change","state","node","target-obj-17607","*runtime-state*-orig-val__17611","*runtime-state*-temp-val__17612","call-info-17609","next-obj-17610","fn-17608","cljs.core/vector?","G__17615","quo.animated/cond*","condition","if-node","else-node","quo.animated/block","opts","cljs.core/to-array","quo.animated/interpolate","anim-value","quo.animated/call*","args","callback","quo.animated/timing","clock-value","quo.animated/spring","quo.animated/extrapolate","target-obj-17627","*runtime-state*-orig-val__17634","*runtime-state*-temp-val__17635","next-obj-17628","next-obj-17629","quo.animated/clamp","target-obj-17639","*runtime-state*-orig-val__17641","*runtime-state*-temp-val__17642","next-obj-17640","js/shadow.js.shim.module$react_native_redash$lib$module$v1","quo.animated/diff-clamp","quo.animated/with-spring","target-obj-17647","*runtime-state*-orig-val__17651","*runtime-state*-temp-val__17652","call-info-17649","next-obj-17650","fn-17648","quo.animated/with-decay","quo.animated/with-offset","quo.animated/with-spring-transition","quo.animated/with-timing-transition","quo.animated/use-spring-transition","quo.animated/use-timing-transition","quo.animated/re-timing","quo.animated/re-spring","quo.animated/on-scroll","target-obj-17665","*runtime-state*-orig-val__17670","*runtime-state*-temp-val__17671","call-info-17667","next-obj-17668","fn-17666","quo.animated/on-gesture","gesture-event","quo.animated/mix","quo.animated/mix-color","quo.animated/delay","quo.animated/loop*","target-obj-17721","*runtime-state*-orig-val__17733","*runtime-state*-temp-val__17735","call-info-17723","next-obj-17728","fn-17722","quo.animated/use-value","quo.animated/use-clock","quo.animated/use-gesture","gesture","quo.animated/snap-point","value","velocity","snap-points","p__17743","map__17745","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo.animated/cancelable-loop","clock","duration","finished","on-reach","time","frame-time","position","to-value","p__17747","map__17748","quo.animated/with-easing","offset","easing","animation-over","c","interrupted","quo.gesture-handler/states","vel","to","finish-animation"],"sourcesContent":["(ns quo.animated\n  (:refer-clojure :exclude [abs set delay divide])\n  (:require [\"react-native-reanimated\" :default animated :refer (clockRunning EasingNode)]\n            [\"react-native-redash/lib/module/v1\" :as redash]\n            [oops.core :refer [ocall oget]]\n            [quo.gesture-handler :as gh]\n            quo.react\n            [quo.react-native :as rn]\n            [reagent.core :as reagent])\n  (:require-macros [quo.react :refer [maybe-js-deps]]))\n\n(def create-animated-component (comp reagent/adapt-react-class (.-createAnimatedComponent animated)))\n\n(def view (reagent/adapt-react-class (.-View animated)))\n(def text (reagent/adapt-react-class (.-Text animated)))\n(def scroll-view (reagent/adapt-react-class (.-ScrollView animated)))\n(def code (reagent/adapt-react-class (.-Code animated)))\n(def animated-flat-list (create-animated-component gh/flat-list-raw))\n\n(defn flat-list\n  [props]\n  [animated-flat-list (rn/base-list-props props)])\n\n(def useCode (.-useCode animated))\n\n(defn code!\n  ([setup-fn]\n   (useCode\n    (fn [] (setup-fn))))\n  ([setup-fn deps]\n   (useCode\n    (fn [] (setup-fn))\n    (maybe-js-deps deps))))\n\n(def eq (oget animated \"eq\"))\n(def neq (oget animated \"neq\"))\n(def greater (oget animated \"greaterThan\"))\n(def greater-or-eq (oget animated \"greaterOrEq\"))\n(def less (oget animated \"lessThan\"))\n(def less-or-eq (oget animated \"lessOrEq\"))\n(def not* (oget animated \"not\"))\n(def or* (oget animated \"or\"))\n(def and* (oget animated \"and\"))\n\n(def diff (oget animated \"diff\"))\n(def add (oget animated \"add\"))\n(def sub (oget animated \"sub\"))\n(def multiply (oget animated \"multiply\"))\n(def divide (oget animated \"divide\"))\n(def abs (oget animated \"abs\"))\n\n(def min* (oget animated \"min\"))\n(def max* (oget animated \"max\"))\n\n(def set (oget animated \"set\"))\n(def start-clock (oget animated \"startClock\"))\n(def stop-clock (oget animated \"stopClock\"))\n(def clock-running clockRunning)\n(def bezier (.-bezier ^js EasingNode))\n(def linear (.-linear ^js EasingNode))\n\n(def easings\n  {:linear      linear\n   :ease-in     (bezier 0.42 0 1 1)\n   :ease-out    (bezier 0 0 0.58 1)\n   :ease-in-out (bezier 0.42 0 0.58 1)\n   :cubic       (bezier 0.55 0.055 0.675 0.19)\n   :keyboard    (bezier 0.17 0.59 0.4 0.77)})\n\n(def springs\n  {:lazy {:damping           50\n          :mass              0.3\n          :stiffness         120\n          :overshootClamping true\n          :bouncyFactor      1}\n   :jump {:damping                   13\n          :mass                      0.5\n          :stiffness                 170\n          :overshootClamping         false\n          :bouncyFactor              1\n          :restSpeedThreshold        0.001\n          :restDisplacementThreshold 0.001}})\n\n(defn set-value\n  [anim val]\n  (ocall anim \"setValue\" val))\n\n(def Value (oget animated \"Value\"))\n\n(defn value\n  [x]\n  (new Value x))\n\n(def Clock (oget animated \"Clock\"))\n\n(defn clock\n  []\n  (new Clock))\n\n(def debug (oget animated \"debug\"))\n(def log (oget animated \"log\"))\n\n(defn event\n  ([config]\n   (event config {}))\n  ([config options]\n   (ocall animated \"event\" (clj->js config) (clj->js options))))\n\n(defn on-change\n  [state node]\n  (ocall animated\n         \"onChange\"\n         state\n         (if (vector? node)\n           (clj->js node)\n           node)))\n\n(defn cond*\n  ([condition node]\n   (.cond ^js animated\n          condition\n          (if (vector? node)\n            (clj->js node)\n            node)))\n  ([condition if-node else-node]\n   (.cond ^js animated\n          condition\n          (if (vector? if-node)\n            (clj->js if-node)\n            if-node)\n          (if (vector? else-node)\n            (clj->js else-node)\n            else-node))))\n\n(defn block\n  [opts]\n  (.block ^js animated (to-array opts)))\n\n(defn interpolate\n  [anim-value config]\n  (.interpolateNode ^js animated anim-value (clj->js config)))\n\n(defn call*\n  [args callback]\n  (.call ^js animated (to-array args) callback))\n\n(defn timing\n  [clock-value opts config]\n  (.timing ^js animated\n           clock-value\n           (clj->js opts)\n           (clj->js config)))\n\n(defn spring\n  [clock-value opts config]\n  (.spring ^js animated\n           clock-value\n           (clj->js opts)\n           (clj->js config)))\n\n(def extrapolate {:clamp (oget animated \"Extrapolate\" \"CLAMP\")})\n\n;; utilities\n\n(def clamp (oget redash \"clamp\"))\n(def diff-clamp (.-diffClamp ^js redash))\n\n(defn with-spring\n  [config]\n  (ocall redash \"withSpring\" (clj->js config)))\n\n(defn with-decay\n  [config]\n  (.withDecay ^js redash (clj->js config)))\n\n(defn with-offset\n  [config]\n  (.withOffset ^js redash (clj->js config)))\n\n(defn with-spring-transition\n  [val config]\n  (.withSpringTransition ^js redash val (clj->js config)))\n\n(defn with-timing-transition\n  [val config]\n  (.withTimingTransition ^js redash val (clj->js config)))\n\n(defn use-spring-transition\n  [val config]\n  (.useSpringTransition ^js redash val (clj->js config)))\n\n(defn use-timing-transition\n  [val config]\n  (.useTimingTransition ^js redash val (clj->js config)))\n\n(defn re-timing\n  [config]\n  (.timing ^js redash (clj->js config)))\n\n(defn re-spring\n  [config]\n  (.spring ^js redash (clj->js config)))\n\n(defn on-scroll\n  [opts]\n  (ocall redash \"onScrollEvent\" (clj->js opts)))\n\n(defn on-gesture\n  [opts]\n  (let [gesture-event (event #js [#js {:nativeEvent (clj->js opts)}])]\n    {:onHandlerStateChange gesture-event\n     :onGestureEvent       gesture-event}))\n\n(def mix (.-mix ^js redash))\n\n(def mix-color (.-mixColor ^js redash))\n\n(def delay (.-delay ^js redash))\n\n(defn loop*\n  [opts]\n  (ocall redash \"loop\" (clj->js opts)))\n\n(def use-value (.-useValue ^js redash))\n\n(def use-clock (.-useClock ^js redash))\n\n(defn use-gesture\n  [opts]\n  (let [gesture (.useGestureHandler ^js redash (clj->js opts))]\n    {:onHandlerStateChange (.-onHandlerStateChange ^js gesture)\n     :onGestureEvent       (.-onGestureEvent ^js gesture)}))\n\n(defn snap-point\n  [value velocity snap-points]\n  (.snapPoint ^js redash value velocity (to-array snap-points)))\n\n(defn cancelable-loop\n  [{:keys [clock duration finished on-reach]}]\n  (let [time       (value 0)\n        frame-time (value 0)\n        position   (value 0)\n        to-value   (value 1)\n        state      {:time      time\n                    :frameTime frame-time\n                    :finished  finished\n                    :position  position}\n        config     {:toValue  to-value\n                    :duration duration\n                    :easing   (:linear easings)}]\n    (block\n     [(timing clock state config)\n      (cond* (and* finished\n                   (eq position to-value))\n             (call* [] on-reach))\n      (cond* finished\n             [(set finished 0)\n              (set time 0)\n              (set frame-time 0)\n              (set position 0)])\n      position])))\n\n(defn with-easing\n  [{val   :value\n    :keys [snap-points velocity offset state easing duration\n           animation-over]\n    :or   {duration       250\n           animation-over (value 1)\n           easing         (:ease-out easings)}}]\n  (let [position         (value 0)\n        c                (clock)\n        interrupted      (and* (eq state (:began gh/states))\n                               (clock-running c))\n        vel              (multiply velocity 1.5)\n        to               (snap-point position vel snap-points)\n        finish-animation [(set offset position)\n                          (stop-clock c)\n                          (set animation-over 1)]]\n    (block\n     [(cond* interrupted finish-animation)\n      (cond* animation-over\n             (set position offset))\n      (cond* (neq state (:end gh/states))\n             [(set animation-over 0)\n              (set position (add offset val))])\n      (cond* (and* (eq state (:end gh/states))\n                   (not* animation-over))\n             [(set position\n                   (re-timing\n                    {:clock    c\n                     :easing   easing\n                     :duration duration\n                     :from     position\n                     :to       to}))\n              (cond* (not* (clock-running c))\n                     finish-animation)])\n      position])))\n"]}