{"version":3,"sources":["status_im/ui/components/icons/icons.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,AAAKA,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,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","names":["status-im.ui.components.icons.icons/icons","js/require","status-im.ui.components.icons.icons/icon-source","icon","cljs.core/get","cljs.core/name","status-im.ui.components.icons.icons/match-color","color","cljs.core/Keyword","G__18947","quo.design-system.colors/black","quo.design-system.colors/gray","quo.design-system.colors/blue","quo.design-system.colors/white","quo.design-system.colors/red","var_args","G__18949","status-im.ui.components.icons.icons/memo-icon-fn","js/Error","p__18950","map__18951","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","name","resize-mode","container-style","accessibility-label","width","height","no-color","status-im.ui.components.react/image","cljs.core/merge","G__18953","or__4126__auto__","cljs.core/assoc","cljs.core/not","status-im.ui.components.icons.icons/icon","cljs.core/memoize","G__18955","status-im.ui.components.icons.icons/tiny-icon","options"],"sourcesContent":["(ns status-im.ui.components.icons.icons\n  (:require [quo.design-system.colors :as colors]\n            [status-im.ui.components.react :as react])\n  (:refer-clojure :exclude [use])\n  (:require-macros [status-im.ui.components.icons.icons :as icons]))\n\n(def icons (icons/resolve-icons))\n\n(defn icon-source\n  [icon]\n  (get icons (name icon)))\n\n(defn- match-color\n  [color]\n  (cond\n    (keyword? color)\n    (case color\n      :dark   colors/black\n      :gray   colors/gray\n      :blue   colors/blue\n      :active colors/blue\n      :white  colors/white\n      :red    colors/red\n      :none   nil\n      colors/black)\n    (string? color)\n    color\n    :else\n    colors/black))\n\n(defn memo-icon-fn\n  ([name] (memo-icon-fn name nil))\n  ([name\n    {:keys [color resize-mode container-style\n            accessibility-label width height no-color]\n     :or   {accessibility-label :icon}}]\n   ^{:key name}\n   [react/image\n    {:style               (merge (cond-> {:width  (or width 24)\n                                          :height (or height 24)}\n\n                                   resize-mode\n                                   (assoc :resize-mode resize-mode)\n\n                                   (not no-color)\n                                   (assoc :tint-color (match-color color)))\n                                 container-style)\n     :accessibility-label accessibility-label\n     :source              (icon-source name)}]))\n\n(def icon (memoize memo-icon-fn))\n\n(defn tiny-icon\n  ([name] (tiny-icon name {}))\n  ([name options]\n   (icon name\n         (merge {:width 16 :height 16}\n                options))))\n"]}