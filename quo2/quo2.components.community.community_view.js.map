{"version":3,"sources":["quo2/components/community/community_view.cljs"],"mappings":"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","names":["p__16873","map__16875","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.community.community-view/community-stats","icon","members-count","icon-color","react-native.core/view","quo2.components.community.style/stats-count-container","quo2.components.icon/icon","quo2.components.markdown.text/text","p__16877","map__16878","quo2.components.community.community-view/community-stats-column","type","quo2.foundations.colors/theme-colors","quo2.foundations.colors/neutral-50","quo2.foundations.colors/neutral-40","cljs.core/=","quo2.components.community.style/card-stats-container","quo2.components.community.style/list-stats-container","p__16880","map__16881","quo2.components.community.community-view/community-tags","tags","container-style","last-item-style","quo.gesture-handler/scroll-view","last-index","x__4214__auto__","y__4215__auto__","cljs.core/count","cljs.core/map-indexed","p__16886","map__16887","index","tag-name","emoji","last?","quo2.components.tags.tag/tag","p__16889","map__16890","quo2.components.community.community-view/community-title","title","description","size","quo2.components.community.style/community-title-description-container","p__16895","map__16896","quo2.components.community.community-view/permission-tag-container","locked?","tokens","on-press","quo2.components.tags.permission-tag/tag","quo2.foundations.colors/neutral-10","quo2.foundations.colors/neutral-80"],"sourcesContent":["(ns quo2.components.community.community-view\n  (:require [quo2.components.community.style :as style]\n            [quo2.components.icon :as icons]\n            [quo2.components.markdown.text :as text]\n            [quo2.components.tags.permission-tag :as permission]\n            [quo2.components.tags.tag :as tag]\n            [quo2.foundations.colors :as colors]\n            [quo.gesture-handler :as gesture-handler] ;;TODO move to quo2\n            [react-native.core :as rn]))\n\n(defn community-stats\n  [{:keys [icon members-count icon-color]}]\n  [rn/view (style/stats-count-container)\n   [rn/view {:margin-right 4}\n    [icons/icon icon\n     {:container-style {:align-items     :center\n                        :justify-content :center}\n      :resize-mode     :center\n      :size            16\n      :color           icon-color}]]\n   [text/text\n    {:weight :regular\n     :size   :paragraph-1}\n    members-count]])\n\n(defn community-stats-column\n  [{:keys [type]}]\n  (let [icon-color (colors/theme-colors colors/neutral-50 colors/neutral-40)]\n    [rn/view\n     (if (= type :card-view)\n       (style/card-stats-container)\n       (style/list-stats-container))\n     [community-stats\n      {:icon          :i/group\n       :members-count \"629.2K\" ;;TODO here should be formatted value, use money/format-members from\n                               ;;outside this component\n       :icon-color    icon-color}]\n     [community-stats\n      {:icon          :i/lightning\n       :members-count \"112.1K\"\n       :icon-color    icon-color}]]))\n\n(defn community-tags\n  [{:keys [tags container-style last-item-style]}]\n  [gesture-handler/scroll-view\n   {:shows-horizontal-scroll-indicator false\n    :horizontal                        true\n    :style                             container-style}\n   (let [last-index (max 0 (dec (count tags)))]\n     (map-indexed\n      (fn [index {tag-name :name emoji :emoji}]\n        (let [last? (= index last-index)]\n          [rn/view\n           {:key   tag-name\n            :style (if last?\n                     last-item-style\n                     {:margin-right 8})}\n           [tag/tag\n            {:size      24\n             :label     tag-name\n             :type      :emoji\n             :labelled? true\n             :resource  emoji}]]))\n      tags))])\n\n(defn community-title\n  [{:keys [title description size] :or {size :small}}]\n  [rn/view (style/community-title-description-container (if (= size :large) 56 32))\n   (when title\n     [text/text\n      {:accessibility-label :chat-name-text\n       :number-of-lines     1\n       :ellipsize-mode      :tail\n       :weight              :semi-bold\n       :size                (if (= size :large) :heading-1 :heading-2)}\n      title])\n   (when description\n     [text/text\n      {:accessibility-label :community-description-text\n       :number-of-lines     2\n       :ellipsize-mode      :tail\n       :weight              :regular\n       :size                :paragraph-1\n       :style               {:margin-top (if (= size :large) 8 2)}}\n      description])])\n\n(defn permission-tag-container\n  [{:keys [locked? tokens on-press]}]\n  [permission/tag\n   {:background-color (colors/theme-colors\n                       colors/neutral-10\n                       colors/neutral-80)\n    :locked?          locked?\n    :tokens           tokens\n    :size             24\n    :on-press         on-press}])\n"]}