{"version":3,"sources":["status_im/ethereum/eip55.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,AAAA,AAAKA;AAEL;;;AAAA,AAAMC,AAEHC;AAFH,AAGE,AAAMA;AAAN,AACE,AAACC,AACA,AAAI,AAACC,AAAoBF,AAAQF,AAC/BE,AACA,AAAKF,AAAWE;;AAJrB;;;AAMF;;;AAAA,AAAMG,AAEHH;AAFH,AAGE,AAACI,AAAqCJ","names":["status-im.ethereum.eip55/hex-prefix","status-im.ethereum.eip55/address->checksum","address","native-module.core/to-checksum-address","clojure.string/starts-with?","status-im.ethereum.eip55/valid-address-checksum?","native-module.core/check-address-checksum"],"sourcesContent":["(ns status-im.ethereum.eip55\n  \"Utility function related to [EIP55](https://eips.ethereum.org/EIPS/eip-55)\n\n   This EIP standardize how ethereum addresses should be printed as strings to validate checksum.\n\n   e.g. 0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed\"\n  (:require [clojure.string :as string]\n            [native-module.core :as native-module]))\n\n(def hex-prefix \"0x\")\n\n(defn address->checksum\n  \"Converts an arbitrary case address to one with correct checksum case.\"\n  [address]\n  (when address\n    (native-module/to-checksum-address\n     (if (string/starts-with? address hex-prefix)\n       address\n       (str hex-prefix address)))))\n\n(defn valid-address-checksum?\n  \"Checks address checksum validity.\"\n  [address]\n  (native-module/check-address-checksum address))\n"]}