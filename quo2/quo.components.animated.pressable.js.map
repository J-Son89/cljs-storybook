{"version":3,"sources":["quo/components/animated/pressable.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,AAAA,AAAKA;AACL,AAAA,AAAKC;AACL,AAAA,AAAKC;AACL,AAAA,AAAKC;AACL,AAAA,AAAKC;AACL,AAAA,AAAKC;AAEL,AAAA,AAAAC,AAAAC,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAUQ;AAAVP,AAAA,AAAAD,AAAA;AAAAE,AAAA,AAAAF,AAAA;AAAAG,AAAA,AAAAH,AAAA;AAAAI,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAAL,AAAAE,AAAAC,AAAAC;;;AAEA,AAAAM,AAAAD,AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAN,AAAAM,AAAA,AACWI;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEoC,AAAA,AAACC,AAAaD,AAAY1B,AACnC,AAAA,AAAC2B,AAAaD,AAAYxB,AACjB,AAAA,AAACyB,AAAaD,AAAY1B,AACnC,AAAA,AAAC2B,AAAaD,AAAYxB;;AAErD,AAAAkB,AAAAD,AAAA,AAAA,AAAAS;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAN,AAAA,AAAAM,AAAA,AAAA,AAAA,AAAA,AAAAL,AAAAC,AAAAI,AAAAA;AAAA,AAAAb,AAAAa,AAAA,AACWH;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEoC,AAAA,AAACC,AAAaD,AAAU1B,AACjC,AAAA,AAAC2B,AAAaD,AAAYxB,AACjB,AAAA,AAACyB,AAAaD,AAAY1B,AACnC,AAAA,AAAC2B,AAAaD,AAAYxB;;AAErD,AAAAkB,AAAAD,AAAA,AAAA,AAAAW;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAR,AAAA,AAAAQ,AAAA,AAAA,AAAA,AAAA,AAAAP,AAAAC,AAAAM,AAAAA;AAAA,AAAAf,AAAAe,AAAA,AACWL;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEoC,AAAA,AAACC,AAAaD,AAAUzB,AACjC,AAAA,AAAC0B,AAAaD,AAAYxB,AACjB,AAAA,AAACyB,AAAaD,AAAYzB,AACnC,AAAA,AAAC0B,AAAaD,AAAYxB;;AAErD,AAAAkB,AAAAD,AAAA,AAAA,AAAAa;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAV,AAAA,AAAAU,AAAA,AAAA,AAAA,AAAA,AAAAT,AAAAC,AAAAQ,AAAAA;AAAA,AAAAjB,AAAAiB,AAAA,AACWP;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEyB,AAAA,AAACC,AAAaD,AAAYxB,AACf,AAAA,AAACyB,AAAaD,AAAY1B,AACnC,AAAA,AAAC2B,AAAaD,AAAYxB;;AAErD,AAAAkB,AAAAD,AAAA,AAAA,AAAAe;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAZ,AAAA,AAAAY,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAC,AAAAU,AAAAA;AAAA,AAAAnB,AAAAmB,AAAA,AACWT;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGoC,AAAA,AAACC,AAAaD,AAAY1B,AACnC,AAAA,AAAC2B,AAAaD,AAAYxB;;AAErD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKkC;AAOL,AAAA,AAAMC,AACHC;AADH,AAEE,AAAAC,AAaM,AAACa,AAAUd;AAbjBC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAhB,AAAA,AAAAgB,AAAA,AAAA,AAAA,AAAA,AAAAf,AAAAC,AAAAc,AAAAA;AAAA,AAAAvB,AAAAuB,AAAA,AAQOU;AARP,AAAAjC,AAAAuB,AAAA,AAAA,AACOG;AADP,AAAA1B,AAAAuB,AAAA,AAOOS;AAPP,AAAAhC,AAAAuB,AAAA,AAMOQ;AANP,AAAA/B,AAAAuB,AAAA,AAUOY;AAVP,AAAAnC,AAAAuB,AAAA,AAKOO;AALP,AAAA9B,AAAAuB,AAAA,AASOW;AATP,AAAAlC,AAAAuB,AAAA,AAAOE;AAAP,AAAAzB,AAAAuB,AAAA,AAAA,AAIOM;AAJP,AAAA7B,AAAAuB,AAAA,AAGOK;AAHP,AAAA5B,AAAAuB,AAAA,AAEOI;AAYDU,AAAe,AAACC;AAChBC,AAAM,AAACC,AAAmB,AAAA,AAAeC;AACzCC,AAAO,AAACC,AAAYJ,AAAM,AAAA,AAAQE;AAClCG,AAAgB,AAAA,AAAA,AAACC,AAA6BN;AAC9C7B,AAAU,AAACoC,AACA;AAAA,AACE,AAAA,AAAA,AAAA,AAACC,AAAgCL,AACW,AAACM,AAAeN,AAAOvD,AAAQC,AAC/B,AAAA,AAAU6D;AAJzD;AAlBhBzB,AA0BM,AAACsB,AACA;AAAA,AACE,AAAA,AAAA,AAAA,AAAC3C,AAA4B,AAACiD,AAAQvB,AACTnB;AAHhC,AAIEmB;AA9BRL,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAjB,AAAA,AAAAiB,AAAA,AAAA,AAAA,AAAA,AAAAhB,AAAAC,AAAAe,AAAAA;AAAA,AAAAxB,AAAAwB,AAAA,AAwBc0B;AAxBd,AAAAlD,AAAAwB,AAAA,AAyBc2B;AAMRE,AAAa;AAAA,AAAO,AAAMtB;AAAN,AAAe,AAACA;;AAAhB;;;AACpBuB,AAAqB,AAACC,AACA,AAASC;AAAT,AACE,AAAMC,AAAc,AAAA,AAAID;AAAxB,AACE,AAAM,AAAAE,AAAKzB;AAAL,AAAA,AAAAyB;AACK,AAACC,AAAEF,AAAc,AAAA,AAAQhB;;AAD9BiB;;;AAAN,AAEE,AAACzB;;AAFH;;AAGA,AAAM,AAAAyB,AAAK1B;AAAL,AAAA,AAAA0B;AACK,AAACC,AAAEF,AAAc,AAAA,AAAShB;;AAD/BiB;;;AAAN,AAEE,AAAC1B;;AACD,AAAC4B,AAAmBrB,AAAM,AAAA,AAAeE;;AAH3C;;AANL,AAUET,AAAcC;AA1C3C,AA2CE,AAAC4B,AACA;AAAA,AACE,AAAM9B;AAAN,AACE,AAAA,AAACiB,AAAe,AAACL,AAAYJ,AAAM,AAAA,AAAME,AACxB,AAACqB,AAAavB,AAAM,AAAA,AAAeE,AACnC,AAAA,AAACsB,AAAkBV;;AAHtC;;AAFH,AAMEtB;;AACF,AAAA,AAAA,AAAA,AAACiC,AACCC,AAC0B,AAACC,AAAQ,AAAAR,AAAK1B;AAAL,AAAA,AAAA0B;AAAmB,AAACS,AAAIrC;;AAAxB4B;;AAFrC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAG4BJ,AACAvE,AAEAsD,AACzB+B,AAEsBlC,AACrBmC,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAM1B,AAE0BP,AACA,AAAC6B,AAAQ,AAAAR,AAAK,AAAAa,AAAIxC;AAAJ,AAAA,AAAAwC;AAAAA;;AAAA,AAAAA,AAAavC;AAAb,AAAA,AAAAuC;AAAAA;;AAA2BtC;;;;AAAhC,AAAA,AAAAyB;AACK,AAACS,AAAIrC;;AADV4B;;AAd9C,AAAA,AAAA,AAAA,AAgBKU,AACCA,AACQ,AAAA,AAAA,AAAA,AAAA,AAAA,AAACE,AAAMlD,AACA8B,AACmBzB,AACAC,AACAC,AACAC,AACnC,AAAA,AAAA,AAAA,AAAC4C,AAAMJ,AAAsBjB,AACvB,AAACsB,AAAmBtC;;AAEnC,AAAKuC,AAAU,AAACC,AAA0B,AAACC,AAAWvD","names":["quo.components.animated.pressable/long-press-duration","quo.components.animated.pressable/scale-down-small","quo.components.animated.pressable/scale-down-large","quo.components.animated.pressable/opactiy","quo.components.animated.pressable/time-in","quo.components.animated.pressable/time-out","js/quo","js/quo.components","js/quo.components.animated","js/quo.components.animated.pressable","js/quo.components.animated.pressable.type->animation","method-table__4619__auto__","cljs.core/atom","prefer-table__4620__auto__","method-cache__4621__auto__","cached-hierarchy__4622__auto__","hierarchy__4623__auto__","cljs.core/get","cljs.core/MultiFn","cljs.core/symbol","quo.components.animated.pressable/type->animation","cljs.core/-add-method","p__18087","map__18088","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","animation","quo.animated/mix","p__18096","map__18097","p__18100","map__18101","p__18111","map__18112","p__18115","map__18116","quo.components.animated.pressable/absolute-fill","quo.components.animated.pressable/pressable-hooks","props","map__18125","map__18126","background-color","border-radius","border-color","border-width","type","disabled","on-press","on-long-press","on-press-start","accessibility-label","children","cljs-bean.core/bean","long-press-ref","quo.react/create-ref","state","quo.animated/use-value","quo.gesture-handler/states","active","quo.animated/eq","gesture-handler","quo.animated/use-gesture","quo.react/use-memo","quo.animated/with-timing-transition","quo.animated/cond*","quo.animated/easings","background","foreground","cljs.core/keyword","handle-press","long-gesture-handler","quo.react/callback","evt","gesture-state","and__4115__auto__","cljs.core/=","quo.animated/set-value","quo.animated/code!","quo.animated/set","quo.animated/call*","reagent.core/as-element","quo.gesture-handler/long-press-gesture-handler","cljs.core/boolean","cljs.core/not","quo.animated/view","quo.gesture-handler/tap-gesture-handler","cljs.core/merge","or__4126__auto__","cljs.core/into","quo.react/get-children","quo.components.animated.pressable/pressable","reagent.core/adapt-react-class","quo.react/memo"],"sourcesContent":["(ns quo.components.animated.pressable\n  (:require [cljs-bean.core :as bean]\n            [quo.animated :as animated]\n            [quo.gesture-handler :as gesture-handler]\n            [quo.react :as react]\n            [reagent.core :as reagent]))\n\n(def long-press-duration 500)\n(def scale-down-small 0.95)\n(def scale-down-large 0.9)\n(def opactiy 0.75)\n(def time-in 100)\n(def time-out 200)\n\n(defmulti type->animation :type)\n\n(defmethod type->animation :primary\n  [{:keys [animation]}]\n  {:background {:transform [{:scale (animated/mix animation 1 scale-down-small)}]\n                :opacity   (animated/mix animation 1 opactiy)}\n   :foreground {:transform [{:scale (animated/mix animation 1 scale-down-small)}]\n                :opacity   (animated/mix animation 1 opactiy)}})\n\n(defmethod type->animation :secondary\n  [{:keys [animation]}]\n  {:background {:transform [{:scale (animated/mix animation scale-down-small 1)}]\n                :opacity   (animated/mix animation 0 opactiy)}\n   :foreground {:transform [{:scale (animated/mix animation 1 scale-down-small)}]\n                :opacity   (animated/mix animation 1 opactiy)}})\n\n(defmethod type->animation :icon\n  [{:keys [animation]}]\n  {:background {:transform [{:scale (animated/mix animation scale-down-large 1)}]\n                :opacity   (animated/mix animation 0 opactiy)}\n   :foreground {:transform [{:scale (animated/mix animation 1 scale-down-large)}]\n                :opacity   (animated/mix animation 1 opactiy)}})\n\n(defmethod type->animation :list-item\n  [{:keys [animation]}]\n  {:background {:opacity (animated/mix animation 0 opactiy)}\n   :foreground {:transform [{:scale (animated/mix animation 1 scale-down-small)}]\n                :opacity   (animated/mix animation 1 opactiy)}})\n\n(defmethod type->animation :scale\n  [{:keys [animation]}]\n  {:background {:opacity 0}\n   :foreground {:transform [{:scale (animated/mix animation 1 scale-down-small)}]\n                :opacity   (animated/mix animation 1 opactiy)}})\n\n(def absolute-fill\n  {:top      0\n   :bottom   0\n   :left     0\n   :right    0\n   :position :absolute})\n\n(defn pressable-hooks\n  [props]\n  (let [{background-color    :bgColor\n         border-radius       :borderRadius\n         border-color        :borderColor\n         border-width        :borderWidth\n         type                :type\n         disabled            :disabled\n         on-press            :onPress\n         on-long-press       :onLongPress\n         on-press-start      :onPressStart\n         accessibility-label :accessibilityLabel\n         children            :children\n         :or                 {border-radius 0\n                              type          \"primary\"}}\n        (bean/bean props)\n        long-press-ref (react/create-ref)\n        state (animated/use-value (:undetermined gesture-handler/states))\n        active (animated/eq state (:began gesture-handler/states))\n        gesture-handler (animated/use-gesture {:state state})\n        animation (react/use-memo\n                   (fn []\n                     (animated/with-timing-transition active\n                                                      {:duration (animated/cond* active time-in time-out)\n                                                       :easing   (:ease-in animated/easings)}))\n                   [])\n        {:keys [background\n                foreground]}\n        (react/use-memo\n         (fn []\n           (type->animation {:type      (keyword type)\n                             :animation animation}))\n         [type])\n        handle-press (fn [] (when on-press (on-press)))\n        long-gesture-handler (react/callback\n                              (fn [^js evt]\n                                (let [gesture-state (-> evt .-nativeEvent .-state)]\n                                  (when (and on-press-start\n                                             (= gesture-state (:began gesture-handler/states)))\n                                    (on-press-start))\n                                  (when (and on-long-press\n                                             (= gesture-state (:active gesture-handler/states)))\n                                    (on-long-press)\n                                    (animated/set-value state (:undetermined gesture-handler/states)))))\n                              [on-long-press on-press-start])]\n    (animated/code!\n     (fn []\n       (when on-press\n         (animated/cond* (animated/eq state (:end gesture-handler/states))\n                         [(animated/set state (:undetermined gesture-handler/states))\n                          (animated/call* [] handle-press)])))\n     [on-press])\n    (reagent/as-element\n     [gesture-handler/long-press-gesture-handler\n      {:enabled                 (boolean (and on-long-press (not disabled)))\n       :on-handler-state-change long-gesture-handler\n       :min-duration-ms         long-press-duration\n       :max-dist                22\n       :ref                     long-press-ref}\n      [animated/view\n       {:accessible          true\n        :accessibility-label accessibility-label}\n       [gesture-handler/tap-gesture-handler\n        (merge gesture-handler\n               {:shouldCancelWhenOutside true\n                :wait-for                long-press-ref\n                :enabled                 (boolean (and (or on-press on-long-press on-press-start)\n                                                       (not disabled)))})\n        [animated/view\n         [animated/view\n          {:style (merge absolute-fill\n                         background\n                         {:background-color background-color\n                          :border-radius    border-radius\n                          :border-color     border-color\n                          :border-width     border-width})}]\n         (into [animated/view {:style foreground}]\n               (react/get-children children))]]]])))\n\n(def pressable (reagent/adapt-react-class (react/memo pressable-hooks)))\n"]}