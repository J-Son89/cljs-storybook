{"version":3,"sources":["quo2/components/list_items/channel.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAeA;AAIf,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAIUc;AAJV,AAAAV,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACmBO;AADnB,AAAAH,AAAAJ,AAAA,AACkCQ;AADlC,AAAAJ,AAAAJ,AAAA,AAEWS;AAFX,AAAAL,AAAAJ,AAAA,AAEkBU;AAFlB,AAAAN,AAAAJ,AAAA,AAEqCW;AAFrC,AAAAP,AAAAJ,AAAA,AAE2CY,AAClBC;AAHzB,AAKE,AAAME,AAAe,AAACb,AAAMc,AAAOF,AAAMhB;AACnCmB,AAAe,AAAA,AAAOH;AAD5B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGI,AAAqBH,AACpBI,AACQ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AASM,AAAA,AAAA,AAAA,AAAA,AAAMV,AACe,AAAA,AAAA,AAACW,AAAmBT,AACvDO,AAOCG,AAEyBhB,AACA,AAAA,AAAA,AAACe,AAAmBT,AACpBD,AACzBY,AACS,AAAA,AAAA,AAAA,AAACH,AACM,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAK,AAACI,AAAIlB,AAASG,AACf,AAAI,AAACgB,AAAaC,AAAkBC,AAEvC,AAAA,AAAUV,AAClCE,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAK,AAACK,AAAIlB,AACLG,AACRmB,AAEQD,AACX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAK,AAACH,AAAIlB,AACL,AAACkB,AAAIf,AACL,AAAA,AAAM,AAAA,AAAKF,AACnBY,AAGCU,AAAyCjB,AAAeL,AAC5D,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAK,AAACiB,AAAIlB,AACL,AAACkB,AAAIf,AACL,AAAK,AAAA,AAAM,AAAA,AAAKF,AAChBC,AACRsB","names":["quo2.components.list-items.channel/custom-props","p__17171","map__17172","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.list-items.channel/list-item","locked?","mentions-count","unread-messages?","muted?","is-active-channel?","emoji","channel-color","quo2.foundations.colors/primary-50","props","standard-props","cljs.core/dissoc","name-text","react-native.core/touchable-opacity","react-native.core/view","cljs.core/merge","quo2.foundations.colors/theme-alpha","quo2.components.avatars.channel-avatar/channel-avatar","quo2.components.markdown.text/text","cljs.core/not","quo2.theme/dark?","quo2.foundations.colors/neutral-60","quo2.foundations.colors/neutral-40","quo2.components.icon/icon","quo2.components.counter.counter/counter","quo2.components.common.unread-grey-dot.view/unread-grey-dot"],"sourcesContent":["(ns quo2.components.list-items.channel\n  (:require [quo2.components.avatars.channel-avatar :as channel-avatar]\n            [quo2.components.counter.counter :as quo2.counter]\n            [quo2.components.icon :as quo2.icons]\n            [quo2.components.markdown.text :as quo2.text]\n            [quo2.foundations.colors :as colors]\n            [quo2.theme :as theme]\n            [react-native.core :as rn]\n            [quo2.components.common.unread-grey-dot.view :refer [unread-grey-dot]]))\n\n(def ^:private custom-props\n  [:name :locked? :mentions-count :unread-messages?\n   :muted? :is-active-channel? :emoji :channel-color])\n\n(defn list-item\n  [{:keys [locked? mentions-count unread-messages?\n           muted? is-active-channel? emoji channel-color]\n    :or   {channel-color colors/primary-50}\n    :as   props}]\n  (let [standard-props (apply dissoc props custom-props)\n        name-text      (:name props)]\n    [rn/touchable-opacity standard-props\n     [rn/view\n      {:style (merge {:height          48\n                      :display         :flex\n                      :border-radius   12\n                      :flex-direction  :row\n                      :justify-content :space-between\n                      :align-items     :center\n                      :width           \"100%\"\n                      :padding-left    12\n                      :padding-right   12}\n                     (when is-active-channel?\n                       {:background-color (colors/theme-alpha channel-color 0.05 0.05)}))}\n      [rn/view\n       {:display             :flex\n        :flex-direction      :row\n        :justify-content     :flex-start\n        :align-items         :center\n        :accessible          true\n        :accessibility-label :chat-name-text}\n       [channel-avatar/channel-avatar\n        {:big?                   true\n         :locked?                locked?\n         :emoji-background-color (colors/theme-alpha channel-color 0.1 0.1)\n         :emoji                  emoji}]\n       [quo2.text/text\n        {:style  (merge {:margin-left 12}\n                        (when (and (not locked?) muted?)\n                          {:color (if (theme/dark?) colors/neutral-60 colors/neutral-40)}))\n         :weight :medium\n         :size   :paragraph-1} (str \"# \" name-text)]]\n      [rn/view\n       {:style {:height          20\n                :justify-content :center}}\n       (when (and (not locked?)\n                  muted?)\n         [quo2.icons/icon :i/muted\n          {:size  20\n           :color colors/neutral-40}])\n       (when (and (not locked?)\n                  (not muted?)\n                  (pos? (int mentions-count)))\n         [rn/view\n          {:style {:margin-right 2\n                   :margin-top   2}}\n          [quo2.counter/counter {:override-bg-color channel-color} mentions-count]])\n       (when (and (not locked?)\n                  (not muted?)\n                  (not (pos? (int mentions-count)))\n                  unread-messages?)\n         [unread-grey-dot :unviewed-messages-public])]]]))\n"]}