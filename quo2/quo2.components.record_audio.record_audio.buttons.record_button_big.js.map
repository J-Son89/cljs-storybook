{"version":3,"sources":["quo2/components/record_audio/record_audio/buttons/record_button_big.cljs"],"mappings":"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","names":["quo2.components.record-audio.record-audio.buttons.record-button-big/scale-to-each","quo2.components.record-audio.record-audio.buttons.record-button-big/scale-to-total","quo2.components.record-audio.record-audio.buttons.record-button-big/scale-padding","quo2.components.record-audio.record-audio.buttons.record-button-big/opacity-from-lock","quo2.components.record-audio.record-audio.buttons.record-button-big/opacity-from-default","quo2.components.record-audio.record-audio.buttons.record-button-big/signal-anim-duration","quo2.components.record-audio.record-audio.buttons.record-button-big/signal-anim-duration-2","quo2.components.record-audio.record-audio.buttons.record-button-big/animated-ring","reagent.core/adapt-react-class","react-native.core/memo","props","map__19269","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","scale","opacity","color","cljs-bean.core/bean","reagent.core/as-element","react-native.reanimated/view","quo2.components.record-audio.record-audio.style/animated-circle","quo2.components.record-audio.record-audio.buttons.record-button-big/f-record-button-big","recording?","ready-to-send?","ready-to-lock?","ready-to-delete?","record-button-is-animating?","record-button-at-initial-position?","locked?","reviewing-audio?","recording-timer","recording-length-ms","clear-timeout","touch-active?","recorder-ref","reload-recorder-fn","idle?","on-send","on-cancel","react-native.reanimated/use-shared-value","opacity-from","cljs.core/deref","animations","cljs.core/map","index","ring-scale","utils.worklets.record-audio/ring-scale","react-native.reanimated/interpolate","cljs.core/range","rings-color","quo2.foundations.colors/theme-colors","quo2.foundations.colors/neutral-80-opa-5-opaque","quo2.foundations.colors/neutral-80","quo2.foundations.colors/danger-50","quo2.foundations.colors/primary-50","translate-y","translate-x","button-color","icon-color","quo2.foundations.colors/dark?","quo2.foundations.colors/black","quo2.foundations.colors/white","icon-opacity","red-overlay-opacity","gray-overlay-opacity","complete-animation","and__4115__auto__","cljs.core/not","cljs.core/reset!","p1__19274#","react-native.audio-toolkit/stop-recording","react-native.audio-toolkit/get-recorder-file-path","js/setTimeout","js/clearInterval","taoensso.timbre/-log!","taoensso.timbre/*config*","cljs.core/Delay","start-animation","quo2.components.record-audio.record-audio.helpers/set-value","quo2.components.record-audio.record-audio.helpers/animate-linear","quo2.components.record-audio.record-audio.helpers/animate-linear-with-delay-loop","stop-animation","react-native.reanimated/cancel-animation","js/clearTimeout","start-y-animation","quo2.components.record-audio.record-audio.helpers/animate-easing","quo2.components.record-audio.record-audio.helpers/animate-linear-with-delay","reset-y-animation","start-x-animation","reset-x-animation","start-x-y-animation","reset-x-y-animation","react-native.core/use-effect","quo2.components.record-audio.record-audio.style/record-button-big-container","cljs.core/map-indexed","id","animation","react-native.core/view","quo2.components.record-audio.record-audio.style/record-button-big-body","quo2.components.record-audio.record-audio.style/record-button-big-red-overlay","quo2.components.record-audio.record-audio.style/record-button-big-gray-overlay","quo2.components.record-audio.record-audio.style/record-button-big-icon-container","quo2.components.record-audio.record-audio.style/stop-icon","quo2.components.icon/icon"],"sourcesContent":["(ns quo2.components.record-audio.record-audio.buttons.record-button-big\n  (:require [quo2.components.icon :as icons]\n            [quo2.components.record-audio.record-audio.style :as style]\n            [quo2.foundations.colors :as colors]\n            [react-native.core :as rn :refer [use-effect]]\n            [react-native.reanimated :as reanimated]\n            [react-native.audio-toolkit :as audio]\n            [taoensso.timbre :as log]\n            [cljs-bean.core :as bean]\n            [reagent.core :as reagent]\n            [quo2.components.record-audio.record-audio.helpers :as helpers]\n            [utils.worklets.record-audio :as worklets.record-audio]))\n\n(def ^:private scale-to-each 1.8)\n(def ^:private scale-to-total 2.6)\n(def ^:private scale-padding 0.16)\n(def ^:private opacity-from-lock 1)\n(def ^:private opacity-from-default 0.5)\n(def ^:private signal-anim-duration 3900)\n(def ^:private signal-anim-duration-2 1950)\n\n(def ^:private animated-ring\n  (reagent/adapt-react-class\n   (rn/memo\n    (fn [props]\n      (let [{:keys [scale opacity color]} (bean/bean props)]\n        (reagent/as-element\n         [reanimated/view {:style (style/animated-circle scale opacity color)}]))))))\n\n(defn f-record-button-big\n  [recording? ready-to-send? ready-to-lock? ready-to-delete? record-button-is-animating?\n   record-button-at-initial-position? locked? reviewing-audio? recording-timer recording-length-ms\n   clear-timeout touch-active? recorder-ref reload-recorder-fn idle? on-send on-cancel]\n  (let [scale (reanimated/use-shared-value 1)\n        opacity (reanimated/use-shared-value 0)\n        opacity-from (if @ready-to-lock? opacity-from-lock opacity-from-default)\n        animations (map\n                    (fn [index]\n                      (let [ring-scale (worklets.record-audio/ring-scale scale\n                                                                         (* scale-padding\n                                                                            index))]\n                        {:scale   ring-scale\n                         :opacity (reanimated/interpolate ring-scale\n                                                          [1 scale-to-each]\n                                                          [opacity-from 0])}))\n                    (range 0 5))\n        rings-color (cond\n                      @ready-to-lock?   (colors/theme-colors colors/neutral-80-opa-5-opaque\n                                                             colors/neutral-80)\n                      @ready-to-delete? colors/danger-50\n                      :else             colors/primary-50)\n        translate-y (reanimated/use-shared-value 0)\n        translate-x (reanimated/use-shared-value 0)\n        button-color colors/primary-50\n        icon-color (if (and (not (colors/dark?)) @ready-to-lock?) colors/black colors/white)\n        icon-opacity (reanimated/use-shared-value 1)\n        red-overlay-opacity (reanimated/use-shared-value 0)\n        gray-overlay-opacity (reanimated/use-shared-value 0)\n        complete-animation\n        (fn []\n          (cond\n            (and @ready-to-lock? (not @record-button-is-animating?))\n            (do\n              (reset! locked? true)\n              (reset! ready-to-lock? false))\n            (and (not @locked?) (not @reviewing-audio?))\n            (audio/stop-recording\n             @recorder-ref\n             (fn []\n               (cond\n                 @ready-to-send?\n                 (when on-send\n                   (on-send {:file-path (audio/get-recorder-file-path @recorder-ref)\n                             :duration  @recording-length-ms}))\n                 @ready-to-delete?\n                 (when on-cancel\n                   (on-cancel)))\n               (reload-recorder-fn)\n               (reset! recording? false)\n               (reset! ready-to-send? false)\n               (reset! ready-to-delete? false)\n               (reset! ready-to-lock? false)\n               (reset! idle? true)\n               (js/setTimeout #(reset! idle? false) 1000)\n               (js/clearInterval @recording-timer)\n               (reset! recording-length-ms 0)\n               (log/debug \"[record-audio] stop recording - success\"))\n             #(log/error \"[record-audio] stop recording - error: \" %))))\n        start-animation (fn []\n                          (helpers/set-value opacity 1)\n                          (helpers/animate-linear scale 2.6 signal-anim-duration)\n                          ;; TODO: Research if we can implement this with withSequence method\n                          ;; from Reanimated 2\n                          ;; GitHub issue [#14561]:\n                          ;; https://github.com/status-im/status-mobile/issues/14561\n                          (reset! clear-timeout\n                            (js/setTimeout\n                             (fn []\n                               (helpers/set-value scale scale-to-each)\n                               (helpers/animate-linear-with-delay-loop scale\n                                                                       scale-to-total\n                                                                       signal-anim-duration-2\n                                                                       0))\n                             signal-anim-duration)))\n        stop-animation (fn []\n                         (helpers/set-value opacity 0)\n                         (reanimated/cancel-animation scale)\n                         (helpers/set-value scale 1)\n                         (when @clear-timeout (js/clearTimeout @clear-timeout)))\n        start-y-animation (fn []\n                            (reset! record-button-at-initial-position? false)\n                            (reset! record-button-is-animating? true)\n                            (helpers/animate-easing translate-y -64 250)\n                            (helpers/animate-linear-with-delay icon-opacity 0 33.33 76.66)\n                            (js/setTimeout (fn []\n                                             (reset! record-button-is-animating? false)\n                                             (when-not @touch-active? (complete-animation)))\n                                           250))\n        reset-y-animation (fn []\n                            (helpers/animate-easing translate-y 0 300)\n                            (helpers/animate-linear icon-opacity 1 500)\n                            (js/setTimeout (fn []\n                                             (reset! record-button-at-initial-position? true))\n                                           500))\n        start-x-animation (fn []\n                            (reset! record-button-at-initial-position? false)\n                            (reset! record-button-is-animating? true)\n                            (helpers/animate-easing translate-x -64 250)\n                            (helpers/animate-linear-with-delay icon-opacity 0 33.33 76.66)\n                            (helpers/animate-linear red-overlay-opacity 1 33.33)\n                            (js/setTimeout (fn []\n                                             (reset! record-button-is-animating? false)\n                                             (when-not @touch-active? (complete-animation)))\n                                           250))\n        reset-x-animation (fn []\n                            (helpers/animate-easing translate-x 0 300)\n                            (helpers/animate-linear icon-opacity 1 500)\n                            (helpers/animate-linear red-overlay-opacity 0 100)\n                            (js/setTimeout (fn []\n                                             (reset! record-button-at-initial-position? true))\n                                           500))\n        start-x-y-animation (fn []\n                              (reset! record-button-at-initial-position? false)\n                              (reset! record-button-is-animating? true)\n                              (helpers/animate-easing translate-y -44 200)\n                              (helpers/animate-easing translate-x -44 200)\n                              (helpers/animate-linear-with-delay icon-opacity 0 33.33 33.33)\n                              (helpers/animate-linear gray-overlay-opacity 1 33.33)\n                              (js/setTimeout (fn []\n                                               (reset! record-button-is-animating? false)\n                                               (when-not @touch-active? (complete-animation)))\n                                             200))\n        reset-x-y-animation (fn []\n                              (helpers/animate-easing translate-y 0 300)\n                              (helpers/animate-easing translate-x 0 300)\n                              (helpers/animate-linear icon-opacity 1 500)\n                              (helpers/animate-linear gray-overlay-opacity 0 800)\n                              (js/setTimeout (fn []\n                                               (reset! record-button-at-initial-position? true))\n                                             800))]\n    (use-effect (fn []\n                  (cond\n                    @recording?\n                    (start-animation)\n                    (not @ready-to-lock?)\n                    (stop-animation)))\n                [@recording?])\n    (use-effect (fn []\n                  (if @ready-to-lock?\n                    (start-x-y-animation)\n                    (reset-x-y-animation)))\n                [@ready-to-lock?])\n    (use-effect (fn []\n                  (if @ready-to-send?\n                    (start-y-animation)\n                    (reset-y-animation)))\n                [@ready-to-send?])\n    (use-effect (fn []\n                  (if @ready-to-delete?\n                    (start-x-animation)\n                    (reset-x-animation)))\n                [@ready-to-delete?])\n    [reanimated/view\n     {:style          (style/record-button-big-container translate-x translate-y opacity)\n      :pointer-events :none}\n     [:<>\n      (map-indexed\n       (fn [id animation]\n         ^{:key id}\n         [animated-ring\n          {:scale   (:scale animation)\n           :opacity (:opacity animation)\n           :color   rings-color}])\n       animations)]\n     [rn/view {:style (style/record-button-big-body button-color)}\n      [reanimated/view {:style (style/record-button-big-red-overlay red-overlay-opacity)}]\n      [reanimated/view {:style (style/record-button-big-gray-overlay gray-overlay-opacity)}]\n      [reanimated/view {:style (style/record-button-big-icon-container icon-opacity)}\n       (if @locked?\n         [rn/view {:style style/stop-icon}]\n         [icons/icon :i/audio {:color icon-color}])]]]))\n"]}