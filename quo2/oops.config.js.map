{"version":3,"sources":["oops/config.cljs"],"mappings":"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","names":["oops.config/get-initial-runtime-config","oops.config/*runtime-config*","js/Error","oops.config/set-current-runtime-config!","new-config","cljs.core/map?","oops.config/get-current-runtime-config","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","oops.config/update-current-runtime-config!","seq13690","G__13691","cljs.core/first","cljs.core/next","self__4723__auto__","f-or-map","args","cljs.core/merge","cljs.core/apply","oops.config/get-config-key","p__13698","vec__13699","cljs.core/nth","seq13694","G__13695","key","config","or__4126__auto__","oops.config/has-config-key?","p__13708","vec__13709","seq13705","G__13706","cljs.core/not=","cljs.core/get","oops.config/get-error-reporting","p__13715","vec__13716","seq13714","self__4724__auto__","cljs.core/seq","oops.config/get-warning-reporting","p__13723","vec__13725","seq13719","oops.config/get-suppress-reporting","p__13739","vec__13740","seq13730","oops.config/get-child-factory","p__13753","vec__13754","seq13749","oops.config/set-child-factory!","new-factory-fn","oops.config/throw-errors-from-macro-call-sites?","p__13759","vec__13760","seq13757","oops.config/use-envelope?","p__13769","vec__13770","seq13765"],"sourcesContent":["(ns oops.config\n  \"Code supporting dynamic (run-time) configuration. See runtime-prefixed keys in config map in defaults.clj.\"\n  (:require-macros [oops.config :refer [gen-runtime-config]]))\n\n(defn get-initial-runtime-config []\n  (gen-runtime-config))\n\n; use oops.config/get-current-runtime-config to get currently effective config\n(def ^:dynamic *runtime-config* (get-initial-runtime-config))\n\n; -- public api -------------------------------------------------------------------------------------------------------------\n\n(defn set-current-runtime-config! [new-config]\n  {:pre [(map? new-config)]}\n  (set! *runtime-config* new-config)\n  new-config)\n\n(defn get-current-runtime-config []\n  *runtime-config*)\n\n(defn update-current-runtime-config! [f-or-map & args]\n  (if (map? f-or-map)\n    (update-current-runtime-config! merge f-or-map)\n    (set-current-runtime-config! (apply f-or-map (get-current-runtime-config) args))))\n\n; -- icing ------------------------------------------------------------------------------------------------------------------\n\n(defn get-config-key [key & [config]]\n  (key (or config (get-current-runtime-config))))\n\n(defn ^boolean has-config-key? [key & [config]]\n  (not= ::not-found (get (or config (get-current-runtime-config)) key ::not-found)))\n\n(defn get-error-reporting [& [config]]\n  (get-config-key :error-reporting config))\n\n(defn get-warning-reporting [& [config]]\n  (get-config-key :warning-reporting config))\n\n(defn get-suppress-reporting [& [config]]\n  (get-config-key :suppress-reporting config))\n\n(defn get-child-factory [& [config]]\n  (get-config-key :child-factory config))\n\n(defn set-child-factory! [new-factory-fn]\n  (update-current-runtime-config! {:child-factory new-factory-fn}))\n\n(defn ^boolean throw-errors-from-macro-call-sites? [& [config]]\n  (true? (get-config-key :throw-errors-from-macro-call-sites config)))\n\n(defn ^boolean use-envelope? [& [config]]\n  (true? (get-config-key :use-envelope config)))\n"]}