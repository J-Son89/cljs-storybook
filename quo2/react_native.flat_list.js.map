{"version":3,"sources":["react_native/flat_list.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,AAAKA,AAAuB,AAACC,AAA0B,AAAgBC;AAEvE,AAAA,AAAOC,AACJC,AAAEC;AADL,AAEE,AAAKC;AAAL,AACE,AAAA,AAACC,AAAoBH,AAAE,AAAYE,AAAM,AAAaA,AACjC,AAAkBA,AAAMD,AACxB,AAAgBC,AAAM,AAAYA;;;AAE3D,AAAA,AAAOE,AACJJ;AADH,AAEE,AAAKE;AAAL,AACE,AAACF,AAAE,AAAYE,AAAM,AAAUA,AAAM,AAAYA;;;AAErD,AAAA,AAAOG,AACJL;AADH,AAEE,AAAKE,AAAKI;AAAV,AACE,AAAMN;AAAN,AACE,AAACA,AAAEE,AAAKI;;AADV;;;;AAGJ,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAEUa;AAFV,AAAAT,AAAAJ,AAAA,AAC0DW;AAD1D,AAAAP,AAAAJ,AAAA,AACoEN;AADpE,AAAAU,AAAAJ,AAAA,AACkBO;AADlB,AAAAH,AAAAJ,AAAA,AACyEP;AADzE,AAAAW,AAAAJ,AAAA,AAC4CS;AAD5C,AAAAL,AAAAJ,AAAA,AACmDU;AADnD,AAAAN,AAAAJ,AAAA,AACqFY;AADrF,AAAAR,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AAC4BQ;AAD5B,AAGE,AAAA,AAAA,AAACM,AACO,AAACC,AAASrB,AACjB,AAAA,AAAA,AAAA,AAAA,AAAMY,AAAsB,AAACT,AAAYS,AACzC,AAAA,AAAA,AAAA,AAAA,AAAMC,AAAuB,AAAChB,AAAegB,AAAUd,AACvD,AAAA,AAAA,AAAA,AAAMkB,AAAmC;AAAA,AAAO,AAAChB,AAAmBgB;AAApE,AACA,AAAA,AAAA,AAAA,AAAMH,AAAqC;AAAA,AAAO,AAACb,AAAmBa;AAAtE,AACA,AAAA,AAAA,AAAA,AAAA,AAAMC,AAA6B,AAACd,AAAmBc,AACvD,AAAA,AAAA,AAAA,AAAA,AAAMC,AAA6B,AAACf,AAAmBe,AACvD,AAAA,AAAA,AAAA,AAAA,AAAME,AAA2B,AAAChB,AAAoBgB,AACtD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACI,AAAOH;;AAEX,AAAA,AAAMI,AACHJ;AADH,AAAA,AAEGzB,AAAuB,AAACiB,AAAgBQ","names":["react-native.flat-list/react-native-flat-list","reagent.core/adapt-react-class","js/shadow.js.shim.module$react_native","react-native.flat-list/wrap-render-fn","f","render-data","data","reagent.core/as-element","react-native.flat-list/wrap-on-drag-end-fn","react-native.flat-list/wrap-key-fn","index","p__14471","map__14475","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","react-native.flat-list/base-list-props","key-fn","render-fn","empty-component","header","footer","separator","on-drag-end-fn","props","cljs.core/merge","cljs.core/to-array","cljs.core/dissoc","react-native.flat-list/flat-list"],"sourcesContent":["(ns react-native.flat-list\n  (:require [\"react-native\" :as react-native]\n            [reagent.core :as reagent]))\n\n(def react-native-flat-list (reagent/adapt-react-class (.-FlatList ^js react-native)))\n\n(defn- wrap-render-fn\n  [f render-data]\n  (fn [data]\n    (reagent/as-element [f (.-item ^js data) (.-index ^js data)\n                         (.-separators ^js data) render-data\n                         (.-isActive ^js data) (.-drag ^js data)])))\n\n(defn- wrap-on-drag-end-fn\n  [f]\n  (fn [data]\n    (f (.-from ^js data) (.-to ^js data) (.-data ^js data))))\n\n(defn- wrap-key-fn\n  [f]\n  (fn [data index]\n    (when f\n      (f data index))))\n\n(defn base-list-props\n  [{:keys [key-fn render-fn empty-component header footer separator data render-data on-drag-end-fn]\n    :as   props}]\n  (merge\n   {:data (to-array data)}\n   (when key-fn {:keyExtractor (wrap-key-fn key-fn)})\n   (when render-fn {:renderItem (wrap-render-fn render-fn render-data)})\n   (when separator {:ItemSeparatorComponent (fn [] (reagent/as-element separator))})\n   (when empty-component {:ListEmptyComponent (fn [] (reagent/as-element empty-component))})\n   (when header {:ListHeaderComponent (reagent/as-element header)})\n   (when footer {:ListFooterComponent (reagent/as-element footer)})\n   (when on-drag-end-fn {:onDragEnd (wrap-on-drag-end-fn on-drag-end-fn)})\n   (dissoc props :data :header :footer :empty-component :separator :render-fn :key-fn :on-drag-end-fn)))\n\n(defn flat-list\n  [props]\n  [react-native-flat-list (base-list-props props)])\n"]}