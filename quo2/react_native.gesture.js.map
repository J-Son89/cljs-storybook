{"version":3,"sources":["react_native/gesture.cljs"],"mappings":"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","names":["react-native.gesture/gesture-detector","reagent.core/adapt-react-class","js/shadow.js.shim.module$react_native_gesture_handler.GestureDetector","react-native.gesture/gesture-handler-root-hoc","js/shadow.js.shim.module$react_native_gesture_handler.gestureHandlerRootHOC","react-native.gesture/gesture-tap","js/shadow.js.shim.module$react_native_gesture_handler.Gesture","react-native.gesture/gesture-pan","react-native.gesture/gesture-pinch","react-native.gesture/on-begin","gesture","handler","react-native.gesture/on-start","react-native.gesture/on-update","react-native.gesture/on-end","react-native.gesture/on-finalize","react-native.gesture/max-pointers","count","react-native.gesture/min-distance","dist","react-native.gesture/number-of-taps","react-native.gesture/enabled","enabled?","react-native.gesture/average-touches","average-touches?","react-native.gesture/with-test-ID","test-ID","var_args","G__16694","react-native.gesture/simultaneous","js/Error","g1","g2","g3","react-native.gesture/exclusive","react-native.gesture/touchable-without-feedback","js/shadow.js.shim.module$react_native_gesture_handler.TouchableWithoutFeedback","react-native.gesture/rect-button","js/shadow.js.shim.module$react_native_gesture_handler.RectButton","react-native.gesture/swipeable-component","js/shadow.js.shim.module$react_native_gesture_handler.Swipeable","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","react-native.gesture/swipeable","p__16721","map__16722","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","seq16712","G__16714","cljs.core/first","cljs.core/next","self__4723__auto__","render-left-actions","render-right-actions","props","children","cljs.core/into","G__16726","cljs.core/assoc","args","reagent.core/as-element","react-native.gesture/gesture-flat-list","js/shadow.js.shim.module$react_native_gesture_handler.FlatList","react-native.gesture/flat-list","react-native.flat-list/base-list-props","react-native.gesture/scroll-view","js/shadow.js.shim.module$react_native_gesture_handler.ScrollView","react-native.gesture/flatten-sections","sections","cljs.core/mapcat","p__16729","map__16730","title","data","p__16734","map__16736","react-native.gesture/section-list","render-section-header-fn","render-fn","cljs.core/merge","p1","p2","p3","p4"],"sourcesContent":["(ns react-native.gesture\n  (:require [\"react-native-gesture-handler\" :refer\n             (Gesture\n              GestureDetector\n              RectButton\n              Swipeable\n              TouchableWithoutFeedback\n              gestureHandlerRootHOC\n              FlatList\n              ScrollView)]\n            [react-native.flat-list :as rn-flat-list]\n            [reagent.core :as reagent]))\n\n(def gesture-detector (reagent/adapt-react-class GestureDetector))\n\n(def gesture-handler-root-hoc gestureHandlerRootHOC)\n\n(defn gesture-tap [] (.Tap ^js Gesture))\n\n(defn gesture-pan [] (.Pan ^js Gesture))\n\n(defn gesture-pinch [] (.Pinch ^js Gesture))\n\n(defn on-begin [gesture handler] (.onBegin ^js gesture handler))\n\n(defn on-start [gesture handler] (.onStart ^js gesture handler))\n\n(defn on-update [gesture handler] (.onUpdate ^js gesture handler))\n\n(defn on-end [gesture handler] (.onEnd ^js gesture handler))\n\n(defn on-finalize [gesture handler] (.onFinalize ^js gesture handler))\n\n(defn max-pointers [gesture count] (.maxPointers ^js gesture count))\n\n(defn min-distance [gesture dist] (.minDistance ^js gesture dist))\n\n(defn number-of-taps [gesture count] (.numberOfTaps ^js gesture count))\n\n(defn enabled [gesture enabled?] (.enabled ^js gesture enabled?))\n\n(defn average-touches [gesture average-touches?] (.averageTouches ^js gesture average-touches?))\n\n(defn with-test-ID [gesture test-ID] (.withTestId ^js gesture (str test-ID)))\n\n(defn simultaneous\n  ([g1 g2] (.Simultaneous ^js Gesture g1 g2))\n  ([g1 g2 g3] (.Simultaneous ^js Gesture g1 g2 g3)))\n\n(defn exclusive [g1 g2] (.Exclusive ^js Gesture g1 g2))\n\n;; RN Gesture Handler touchables are drop-in replacements for the RN ones. In\n;; some cases, it's the only touchable that works with Swipeable components.\n(def touchable-without-feedback (reagent/adapt-react-class TouchableWithoutFeedback))\n\n(def rect-button (reagent/adapt-react-class RectButton))\n\n(def ^:private swipeable-component\n  (reagent/adapt-react-class Swipeable))\n\n(defn swipeable\n  [{:keys [render-left-actions render-right-actions] :as props} & children]\n  (into [swipeable-component\n         (cond-> props\n           render-left-actions\n           (assoc :render-left-actions\n                  (fn [& args]\n                    (reagent/as-element (apply render-left-actions args))))\n\n           render-right-actions\n           (assoc :render-right-actions\n                  (fn [& args]\n                    (reagent/as-element (apply render-right-actions args)))))]\n        children))\n\n(def gesture-flat-list (reagent/adapt-react-class FlatList))\n\n(defn flat-list\n  [props]\n  [gesture-flat-list (rn-flat-list/base-list-props props)])\n\n(def scroll-view (reagent/adapt-react-class ScrollView))\n\n;;; Custom gesture section-list\n(defn- flatten-sections\n  [sections]\n  (mapcat (fn [{:keys [title data]}]\n            (into [{:title title :header? true}] data))\n   sections))\n\n(defn section-list\n  [{:keys [sections render-section-header-fn render-fn] :as props}]\n  (let [data (flatten-sections sections)]\n    [flat-list\n     (merge props\n            {:data      data\n             :render-fn (fn [p1 p2 p3 p4]\n                          (if (:header? p1)\n                            [render-section-header-fn p1 p2 p3 p4]\n                            [render-fn p1 p2 p3 p4]))})]))\n"]}