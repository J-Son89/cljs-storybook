{"version":3,"sources":["quo/react_native.cljs"],"mappings":"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","names":["quo.react-native/hole-view","reagent.core/adapt-react-class","js/shadow.js.shim.module$react_native_hole_view.RNHoleView","quo.react-native/rn-draggable-flatlist","js/shadow.js.shim.module$react_native_draggable_flatlist.default","quo.react-native/emoji-keyboard","js/shadow.js.shim.module$rn_emoji_keyboard.EmojiKeyboard","quo.react-native/app-registry","js/shadow.js.shim.module$react_native","quo.react-native/platform","quo.react-native/find-node-handle","quo.react-native/view","quo.react-native/image","quo.react-native/text","quo.react-native/resolve-asset-source","uri","cljs.core/js->clj","quo.react-native/scroll-view","quo.react-native/modal","quo.react-native/refresh-control","quo.react-native/touchable-opacity","quo.react-native/touchable-highlight","quo.react-native/touchable-without-feedback","quo.react-native/text-input","quo.react-native/keyboard-avoiding-view-class","quo.react-native/navigation-const","cljs.core/atom","js/shadow.js.shim.module$react_native_navigation.Navigation","consts","cljs.core/reset!","quo.react-native/keyboard-avoiding-view","this","reagent.core/current-component","props","reagent.core/props","cljs.core/into","cljs.core/merge","quo.platform/ios?","cljs.core/deref","reagent.core/children","quo.react-native/status-bar","quo.react-native/keyboard","quo.react-native/dismiss-keyboard!","quo.react-native/dimensions","quo.react-native/pan-responder","quo.react-native/create-pan-responder","opts","cljs.core/clj->js","quo.react-native/animated","quo.react-native/subtract","quo.react-native/animated-flat-list-class","quo.react-native/animated-view","quo.react-native/ui-manager","quo.react-native/layout-animation","quo.react-native/configure-next","quo.react-native/create-animation","quo.react-native/layout-animation-presets","quo.react-native/layout-animation-types","quo.react-native/layout-animation-properties","quo.react-native/custom-animations","js/quo","js/quo.react-native","js/quo.react-native.enable-layout-animations","quo.react-native/enable-layout-animations","quo.platform/android?","quo.react-native/activity-indicator","quo.react-native/rn-flat-list","quo.react-native/wrap-render-fn","f","render-data","data","reagent.core/as-element","quo.react-native/wrap-on-drag-end-fn","quo.react-native/wrap-key-fn","%","js/Error","index","p__17371","map__17372","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo.react-native/base-list-props","key-fn","render-fn","empty-component","header","footer","separator","on-drag-end-fn","cljs.core/to-array","cljs.core/dissoc","quo.react-native/flat-list","quo.react-native/draggable-flat-list","quo.react-native/animated-flat-list","quo.react-native/use-window-dimensions","window","js/shadow.js.shim.module$react_native.useWindowDimensions","quo.react-native/use-back-handler","js/shadow.js.shim.module$$react_native_community$hooks","quo.react-native/use-keyboard","kb","quo.react-native/use-layout","map__17387","onLayout","x","y","height","width","cljs-bean.core/bean"],"sourcesContent":["(ns quo.react-native\n  (:require [\"@react-native-community/hooks\" :as hooks]\n            [\"react-native\" :as rn]\n            [\"react-native-draggable-flatlist\" :default DraggableFlatList]\n            [\"react-native-hole-view\" :refer (RNHoleView)]\n            [\"react-native-navigation\" :refer (Navigation)]\n            [\"rn-emoji-keyboard\" :refer (EmojiKeyboard)]\n            [cljs-bean.core :as bean]\n            [quo.platform :as platform]\n            [reagent.core :as reagent]))\n\n(def hole-view (reagent/adapt-react-class RNHoleView))\n\n(def rn-draggable-flatlist (reagent/adapt-react-class DraggableFlatList))\n\n(def emoji-keyboard (reagent/adapt-react-class EmojiKeyboard))\n\n(def app-registry (.-AppRegistry rn))\n\n(def platform (.-Platform ^js rn))\n\n(def find-node-handle (.-findNodeHandle ^js rn))\n\n(def view (reagent/adapt-react-class (.-View ^js rn)))\n(def image (reagent/adapt-react-class (.-Image rn)))\n(def text (reagent/adapt-react-class (.-Text ^js rn)))\n\n(defn resolve-asset-source\n  [uri]\n  (js->clj (.resolveAssetSource ^js (.-Image ^js rn) uri) :keywordize-keys true))\n\n(def scroll-view (reagent/adapt-react-class (.-ScrollView ^js rn)))\n(def modal (reagent/adapt-react-class (.-Modal ^js rn)))\n(def refresh-control (reagent/adapt-react-class (.-RefreshControl ^js rn)))\n\n(def touchable-opacity (reagent/adapt-react-class (.-TouchableOpacity ^js rn)))\n(def touchable-highlight (reagent/adapt-react-class (.-TouchableHighlight ^js rn)))\n(def touchable-without-feedback (reagent/adapt-react-class (.-TouchableWithoutFeedback ^js rn)))\n(def text-input (reagent/adapt-react-class (.-TextInput ^js rn)))\n\n(def keyboard-avoiding-view-class (reagent/adapt-react-class (.-KeyboardAvoidingView ^js rn)))\n\n(def navigation-const (atom nil))\n\n(.then (.constants Navigation)\n       (fn [^js consts]\n         (reset! navigation-const {:top-bar-height     (.-topBarHeight consts)\n                                   :bottom-tabs-height (.-bottomTabsHeight consts)\n                                   :status-bar-height  (.-statusBarHeight consts)})))\n\n(defn keyboard-avoiding-view\n  []\n  (let [this  (reagent/current-component)\n        props (reagent/props this)]\n    (into [keyboard-avoiding-view-class\n           (merge (when platform/ios?\n                    {:behavior :padding})\n                  props\n                  {:keyboardVerticalOffset (+ 44 (:status-bar-height @navigation-const))})]\n          (reagent/children this))))\n\n(def status-bar (.-StatusBar ^js rn))\n\n(def keyboard (.-Keyboard ^js rn))\n\n(def dismiss-keyboard! #(.dismiss ^js keyboard))\n\n(def dimensions (.-Dimensions ^js rn))\n\n(def pan-responder (.-PanResponder ^js rn))\n\n(defn create-pan-responder\n  [opts]\n  (.create ^js pan-responder (clj->js opts)))\n\n(def animated (.-Animated rn))\n\n(def subtract (.-subtract ^js animated))\n\n(def animated-flat-list-class\n  (reagent/adapt-react-class (.-FlatList ^js animated)))\n\n(def animated-view\n  (reagent/adapt-react-class (.-View ^js animated)))\n\n(def ui-manager (.-UIManager ^js rn))\n\n(def layout-animation (.-LayoutAnimation ^js rn))\n(def configure-next (.-configureNext ^js layout-animation))\n(def create-animation (.-create ^js layout-animation))\n\n(def layout-animation-presets\n  {:ease-in-ease-out (-> ^js layout-animation .-Presets .-easeInEaseOut)\n   :linear           (-> ^js layout-animation .-Presets .-linear)\n   :spring           (-> ^js layout-animation .-Presets .-spring)})\n\n(def layout-animation-types\n  {:spring           (-> ^js layout-animation .-Types .-spring)\n   :linear           (-> ^js layout-animation .-Types .-linear)\n   :ease-in-ease-out (-> ^js layout-animation .-Types .-easeInEaseOut)\n   :ease-in          (-> ^js layout-animation .-Types .-easeIn)\n   :ease-out         (-> ^js layout-animation .-Types .-easeOut)})\n\n(def layout-animation-properties\n  {:opacity  (-> ^js layout-animation .-Properties .-opacity)\n   :scale-x  (-> ^js layout-animation .-Properties .-scaleX)\n   :scale-y  (-> ^js layout-animation .-Properties .-scaleY)\n   :scale-xy (-> ^js layout-animation .-Properties .-scaleXY)})\n\n(def custom-animations\n  {:ease-opacity-200 #js\n                      {:duration 200\n                       :create   #js\n                                  {:type     (:ease-in-ease-out layout-animation-types)\n                                   :property (:opacity layout-animation-properties)}\n                       :update   #js\n                                  {:type     (:ease-in-ease-out layout-animation-types)\n                                   :property (:opacity layout-animation-properties)}\n                       :delete   #js\n                                  {:type     (:ease-in-ease-out layout-animation-types)\n                                   :property (:opacity layout-animation-properties)}}})\n\n(defonce enable-layout-animations\n  (when platform/android?\n    (.setLayoutAnimationEnabledExperimental ^js ui-manager true)))\n\n(def activity-indicator (reagent/adapt-react-class (.-ActivityIndicator ^js rn)))\n\n;; Flat-list\n(def ^:private rn-flat-list (reagent/adapt-react-class (.-FlatList ^js rn)))\n\n(defn- wrap-render-fn\n  [f render-data]\n  (fn [data]\n    (reagent/as-element [f (.-item ^js data) (.-index ^js data)\n                         (.-separators ^js data) render-data\n                         (.-isActive ^js data) (.-drag ^js data)])))\n\n(defn- wrap-on-drag-end-fn\n  [f]\n  (fn [data]\n    (f (.-from ^js data) (.-to ^js data) (.-data ^js data))))\n\n(defn- wrap-key-fn\n  [f]\n  (fn [data index]\n    {:post [(some? %)]}\n    (f data index)))\n\n(defn base-list-props\n  [{:keys [key-fn render-fn empty-component header footer separator data render-data on-drag-end-fn]\n    :as   props}]\n  (merge\n   {:data (to-array data)}\n   (when key-fn {:keyExtractor (wrap-key-fn key-fn)})\n   (when render-fn {:renderItem (wrap-render-fn render-fn render-data)})\n   (when separator {:ItemSeparatorComponent (fn [] (reagent/as-element separator))})\n   (when empty-component {:ListEmptyComponent (fn [] (reagent/as-element empty-component))})\n   (when header {:ListHeaderComponent (reagent/as-element header)})\n   (when footer {:ListFooterComponent (reagent/as-element footer)})\n   (when on-drag-end-fn {:onDragEnd (wrap-on-drag-end-fn on-drag-end-fn)})\n   (dissoc props :data :header :footer :empty-component :separator :render-fn :key-fn :on-drag-end-fn)))\n\n(defn flat-list\n  [props]\n  [rn-flat-list (base-list-props props)])\n\n(defn draggable-flat-list\n  [props]\n  [rn-draggable-flatlist (base-list-props props)])\n\n(defn animated-flat-list\n  [props]\n  [animated-flat-list-class (base-list-props props)])\n;; Hooks\n\n(defn use-window-dimensions\n  []\n  (let [window (rn/useWindowDimensions)]\n    {:font-scale (.-fontScale window)\n     :height     (.-height ^js window)\n     :scale      (.-scale ^js window)\n     :width      (.-width ^js window)}))\n\n(def use-back-handler (.-useBackHandler hooks))\n\n(defn use-keyboard\n  []\n  (let [kb (.useKeyboard hooks)]\n    {:keyboard-shown  (.-keyboardShown ^js kb)\n     :keyboard-height (.-keyboardHeight ^js kb)}))\n\n(defn use-layout\n  []\n  (let [{:keys [onLayout x y height width]} (bean/bean (.useLayout hooks))]\n    {:on-layout onLayout\n     :x         x\n     :y         y\n     :height    height\n     :width     width}))\n"]}