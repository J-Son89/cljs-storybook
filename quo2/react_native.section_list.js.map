{"version":3,"sources":["react_native/section_list.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,AAAKA,AAAmB,AAACC,AAA0B,AAAeC;AAElE,AAAKC,AACH,AAACC,AACA,AAAKC,AAAEC;AAAP,AACE,AAASC;AAAT,AACE,AAAA,AAACC,AAAoBH,AAAE,AAAQE,AAAM,AAASA,AAAM,AAAcA,AAAMD;;;AAE/E,AAAA,AAAOG,AACJJ;AADH,AAEE,AAASE;AAAT,AACE,AAAUG,AAAQ,AAAWH;AAA7B,AACE,AAAA,AAAA,AAAA,AAAA,AAACC,AAAoBH,AACQ,AAASK,AACT,AAAQA;;;AAE3C,AAAA,AAAOC,AACJC;AADH,AAEE,AAACC,AACA,AAAAC,AAAW,AAAA,AAAYF;AAAvB,AAAA,AAAAE;AAAA,AAAAA,AAAST;AAAT,AACE,AAAA,AAACU,AAAM,AAAA,AAAA,AAACC,AAAOJ,AAER,AAACT,AAAoBE,AAAE,AAAA,AAAcO;;AAC5CA;;AALH,AAOCK;;AAEH;;;;;;AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAKiFP;AALjF,AAAAW,AAAAJ,AAAA,AAKWM;AALX,AAAAF,AAAAJ,AAAA,AAKoBO;AALpB,AAAAH,AAAAJ,AAAA,AAK6CQ;AAL7C,AAAAJ,AAAAJ,AAAA,AAKsES;AALtE,AAAA,AAMG5B,AACA,AAAA,AAAA,AAAA,AAAA,AAAC6B,AAAM,AAACC,AAA0BlB,AAC3BA,AACA,AAAA,AAAA,AAAA,AAAA,AAAMe,AACkB,AAAClB,AAA8BkB,AACjC,AAACI,AAAQ,AAACC,AAAIrB,AAA2Bc,AACzC,AAAChB,AAA8BiB,AAC/BE","names":["react-native.section-list/section-list-class","reagent.core/adapt-react-class","js/shadow.js.shim.module$react_native","react-native.section-list/memo-wrap-render-fn","cljs.core/memoize","f","render-data","data","reagent.core/as-element","react-native.section-list/wrap-render-section-header-fn","section","react-native.section-list/wrap-per-section-render-fn","props","cljs.core/update","temp__5733__auto__","cljs.core/assoc","cljs.core/dissoc","cljs.core/to-array","p__16006","map__16007","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","react-native.section-list/section-list","sections","render-section-header-fn","render-section-footer-fn","style","cljs.core/merge","react-native.flat-list/base-list-props","cljs.core/clj->js","cljs.core/map"],"sourcesContent":["(ns react-native.section-list\n  (:require [\"react-native\" :as react-native]\n            [react-native.flat-list :as flat-list]\n            [reagent.core :as reagent]))\n\n(def section-list-class (reagent/adapt-react-class (.-SectionList react-native)))\n\n(def memo-wrap-render-fn\n  (memoize\n   (fn [f render-data]\n     (fn [^js data]\n       (reagent/as-element [f (.-item data) (.-index data) (.-separators data) render-data])))))\n\n(defn- wrap-render-section-header-fn\n  [f]\n  (fn [^js data]\n    (let [^js section (.-section data)]\n      (reagent/as-element [f\n                           {:title (.-title section)\n                            :data  (.-data section)}]))))\n\n(defn- wrap-per-section-render-fn\n  [props]\n  (update\n   (if-let [f (:render-fn props)]\n     (assoc (dissoc props :render-fn :render-data)\n            :renderItem\n            (memo-wrap-render-fn f (:render-data props)))\n     props)\n   :data\n   to-array))\n\n(defn section-list\n  \"A wrapper for SectionList.\n   To render something on empty sections, use renderSectionFooter and conditionaly\n   render on empty data\n   See https://facebook.github.io/react-native/docs/sectionlist.html\"\n  [{:keys [sections render-section-header-fn render-section-footer-fn style] :as props}]\n  [section-list-class\n   (merge (flat-list/base-list-props props)\n          props\n          (when render-section-footer-fn\n            {:renderSectionFooter (wrap-render-section-header-fn render-section-footer-fn)})\n          {:sections            (clj->js (map wrap-per-section-render-fn sections))\n           :renderSectionHeader (wrap-render-section-header-fn render-section-header-fn)\n           :style               style})])\n"]}