{"version":3,"sources":["status_im/ui/components/react.cljs"],"mappings":"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","names":["status-im.ui.components.react/native-modules","js/shadow.js.shim.module$react_native","status-im.ui.components.react/app-state","status-im.ui.components.react/view","reagent.core/adapt-react-class","status-im.ui.components.react/scroll-view-class","status-im.ui.components.react/keyboard-avoiding-view-class","status-im.ui.components.react/text-class","status-im.ui.components.react/text-input-class","status-im.ui.components.react/image-class","js/shadow.js.shim.module$react.memo","status-im.ui.components.react/fast-image-class","js/shadow.js.shim.module$react_native_fast_image","status-im.ui.components.react/image-get-size","uri","callback","status-im.ui.components.react/resolve-asset-source","cljs.core/js->clj","status-im.ui.components.react/linear-gradient","js/shadow.js.shim.module$react_native_linear_gradient.default","status-im.ui.components.react/masked-view","js/shadow.js.shim.module$$react_native_community$masked_view.default","status-im.ui.components.react/blur-view","js/shadow.js.shim.module$$react_native_community$blur","status-im.ui.components.react/valid-source?","source","or__4126__auto__","cljs.core/map?","cljs.core/contains?","p__18859","map__18860","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","status-im.ui.components.react/image","props","status-im.ui.components.react/switch-class","status-im.ui.components.react/switch","status-im.ui.components.react/touchable-highlight-class","status-im.ui.components.react/pressable-class","status-im.ui.components.react/touchable-without-feedback-class","status-im.ui.components.react/touchable-opacity-class","status-im.ui.components.react/activity-indicator-class","status-im.ui.components.react/activity-indicator","p1__18862#","cljs.core/update","quo.design-system.colors/gray","status-im.ui.components.react/small-loading-indicator","color","status-im.ui.components.react/animated","status-im.ui.components.react/animated-view-class","status-im.ui.components.react/animated-flat-list-class","status-im.ui.components.react/animated-scroll-view-class","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","status-im.ui.components.react/animated-view","seq18863","G__18864","cljs.core/first","cljs.core/next","self__4723__auto__","content","cljs.core/vec","cljs.core/conj","status-im.ui.components.react/animated-scroll-view","seq18865","G__18866","children","status-im.ui.components.react/dimensions","status-im.ui.components.react/keyboard","status-im.ui.components.react/dismiss-keyboard!","js/shadow.js.shim.module$react_native.Keyboard","status-im.ui.components.react/linking","status-im.ui.components.react/max-font-size-multiplier","status-im.ui.components.react/prepare-text-props","status-im.ui.components.typography/get-style","cljs.core/assoc","status-im.ui.components.react/prepare-nested-text-props","status-im.ui.components.typography/get-nested-style","G__18868","status-im.ui.components.react/text","js/Error","text-element","options","status-im.ui.components.react/nested-text","seq18872","G__18873","nested-text-elements","options-with-style","cljs.core/reduce","acc","vec__18874","seq__18875","cljs.core/seq","first__18876","cljs.core/dissoc","status-im.ui.components.react/text-input-refs","cljs.core/atom","status-im.ui.components.react/text-input","_","render-fn","text","cljs.core/merge","quo.design-system.colors/text-gray","utils.i18n/label","input-ref","reagent.core/create-class","cljs.core/deref","cljs.core/swap!","r","and__4115__auto__","cljs.core/reset!","p__18877","map__18878","status-im.ui.components.react/i18n-text","style","key","status-im.ui.components.react/touchable-opacity","status-im.ui.components.react/touchable-highlight","status-im.ui.components.react/pressable","status-im.ui.components.react/touchable-without-feedback","status-im.ui.components.react/get-dimensions","name","status-im.ui.components.react/show-access-error","o","cljs.core/=","status-im.utils.utils/show-popup","G__18881","status-im.ui.components.react/show-image-picker","p__18882","map__18883","images-fn","media-type","js/shadow.js.shim.module$react_native_image_crop_picker.default","cljs.core/clj->js","G__18886","status-im.ui.components.react/show-image-picker-camera","status-im.ui.components.react/sharing","status-im.ui.components.react/copy-to-clipboard","js/shadow.js.shim.module$$react_native_community$clipboard.default","status-im.ui.components.react/get-from-clipboard","clbk","clipboard-contents","p1__18887#","status-im.ui.components.react/navigation-const","js/shadow.js.shim.module$react_native_navigation.Navigation","consts","status-im.ui.components.react/keyboard-avoiding-view","seq18888","G__18889","cljs.core/into","status-im.utils.platform/ios?","cljs.core/+","status-im.ui.components.react/keyboard-avoiding-view-new","seq18890","G__18891","status-im.ui.components.react/scroll-view","seq18892","G__18893","p__18895","map__18896","args18894","p__18898","map__18899","cljs.core/name","status-im.ui.components.react/with-activity-indicator","timeout","enabled?","preview","comp","loading","reagent.core/atom","status-im.utils.utils/set-timeout","cljs.core/not","status-im.ui.components.react/hw-back-add-listener","js/shadow.js.shim.module$react_native.BackHandler","status-im.ui.components.react/hw-back-remove-listener"],"sourcesContent":["(ns status-im.ui.components.react\n  (:require [\"@react-native-community/blur\" :as blur]\n            [\"@react-native-community/clipboard\" :default Clipboard]\n            [\"@react-native-community/masked-view\" :default MaskedView]\n            [\"react\" :as reactjs]\n            [\"react-native\" :as react-native :refer (Keyboard BackHandler)]\n            [\"react-native-fast-image\" :as FastImage]\n            [\"react-native-image-crop-picker\" :default image-picker]\n            [\"react-native-linear-gradient\" :default LinearGradient]\n            [\"react-native-navigation\" :refer (Navigation)]\n            [quo.design-system.colors :as colors]\n            [reagent.core :as reagent]\n            [utils.i18n :as i18n]\n            [status-im.ui.components.typography :as typography]\n            [status-im.utils.platform :as platform]\n            [status-im.utils.utils :as utils])\n  (:require-macros [status-im.utils.views :as views]))\n\n(def native-modules (.-NativeModules react-native))\n\n;; React Components\n\n(def app-state (.-AppState react-native))\n(def view (reagent/adapt-react-class (.-View react-native)))\n\n(def scroll-view-class (reagent/adapt-react-class (.-ScrollView react-native)))\n(def keyboard-avoiding-view-class (reagent/adapt-react-class (.-KeyboardAvoidingView react-native)))\n\n(def text-class (reagent/adapt-react-class (.-Text react-native)))\n(def text-input-class (reagent/adapt-react-class (.-TextInput react-native)))\n\n(def image-class (reagent/adapt-react-class (reactjs/memo (.-Image react-native))))\n\n(def fast-image-class (reagent/adapt-react-class FastImage))\n\n(defn image-get-size [uri callback] (.getSize (.-Image react-native) uri callback))\n(defn resolve-asset-source\n  [uri]\n  (js->clj (.resolveAssetSource (.-Image react-native) uri) :keywordize-keys true))\n\n(def linear-gradient (reagent/adapt-react-class LinearGradient))\n\n(def masked-view (reagent/adapt-react-class MaskedView))\n\n(def blur-view (reagent/adapt-react-class (.-BlurView blur)))\n\n(defn valid-source?\n  [source]\n  (or (not (map? source))\n      (not (contains? source :uri))\n      (and (contains? source :uri)\n           (:uri source))))\n\n(defn image\n  [{:keys [source] :as props}]\n  (when (valid-source? source)\n    [image-class props]))\n\n(def switch-class (reagent/adapt-react-class (.-Switch react-native)))\n\n(defn switch\n  [props]\n  [switch-class props])\n\n(def touchable-highlight-class (reagent/adapt-react-class (.-TouchableHighlight react-native)))\n(def pressable-class (reagent/adapt-react-class (.-Pressable react-native)))\n(def touchable-without-feedback-class\n  (reagent/adapt-react-class (.-TouchableWithoutFeedback react-native)))\n(def touchable-opacity-class (reagent/adapt-react-class (.-TouchableOpacity react-native)))\n(def activity-indicator-class (reagent/adapt-react-class (.-ActivityIndicator react-native)))\n\n(defn activity-indicator\n  [props]\n  [activity-indicator-class (update props :color #(or % colors/gray))])\n\n(defn small-loading-indicator\n  [color]\n  [activity-indicator\n   {:color   color\n    :ios     {:size :small}\n    :android {:size :16}}])\n\n(def animated (.-Animated react-native))\n\n(def animated-view-class\n  (reagent/adapt-react-class (.-View ^js animated)))\n\n(def animated-flat-list-class\n  (reagent/adapt-react-class (.-FlatList ^js animated)))\n\n(def animated-scroll-view-class\n  (reagent/adapt-react-class (.-ScrollView ^js animated)))\n\n(defn animated-view\n  [props & content]\n  (vec (conj content props animated-view-class)))\n\n(defn animated-scroll-view\n  [props & children]\n  (vec (conj children props animated-scroll-view-class)))\n\n(def dimensions (.-Dimensions react-native))\n(def keyboard (.-Keyboard react-native))\n(def dismiss-keyboard! #(.dismiss ^js Keyboard))\n(def linking (.-Linking react-native))\n\n(def max-font-size-multiplier 1.25)\n\n(defn prepare-text-props\n  [props]\n  (-> props\n      (update :style typography/get-style)\n      (assoc :max-font-size-multiplier max-font-size-multiplier)))\n\n(defn prepare-nested-text-props\n  [props]\n  (-> props\n      (update :style typography/get-nested-style)\n      (assoc :parseBasicMarkdown true)\n      (assoc :nested? true)))\n\n;; Accessor methods for React Components\n(defn text\n  \"For nested text elements, use nested-text instead\"\n  ([text-element]\n   (text {} text-element))\n  ([options text-element]\n   [text-class (prepare-text-props options) text-element]))\n\n(defn nested-text\n  \"Returns nested text elements with proper styling and typography\n  Do not use the nested? option, it is for internal usage of the function only\"\n  [options & nested-text-elements]\n  (let [options-with-style (if (:nested? options)\n                             (prepare-nested-text-props options)\n                             (prepare-text-props options))]\n    (reduce (fn [acc text-element]\n              (conj acc\n                    (if (string? text-element)\n                      text-element\n                      (let [[options & nested-text-elements] text-element]\n                        (apply nested-text\n                               (prepare-nested-text-props options)\n                               nested-text-elements)))))\n            [text-class (dissoc options-with-style :nested?)]\n            nested-text-elements)))\n\n;; We track all currently mounted text input refs\n;; in a ref-to-defaultValue map\n;; so that we can clear them (restore their default values)\n;; when global react-navigation's onWillBlur event is invoked\n(def text-input-refs (atom {}))\n\n(defn text-input\n  [options _]\n  (let [render-fn (fn [options text]\n                    [text-input-class\n                     (merge\n                      {:underline-color-android  :transparent\n                       :max-font-size-multiplier max-font-size-multiplier\n                       :placeholder-text-color   colors/text-gray\n                       :placeholder              (i18n/label :t/type-a-message)\n                       :value                    text}\n                      (-> options\n                          (dissoc :preserve-input?)\n                          (update :style typography/get-style)\n                          (update :style dissoc :line-height)))])]\n    (if (:preserve-input? options)\n      render-fn\n      (let [input-ref (atom nil)]\n        (reagent/create-class\n         {:component-will-unmount #(when @input-ref\n                                     (swap! text-input-refs dissoc @input-ref))\n          :reagent-render\n          (fn [options text]\n            (render-fn (assoc options\n                              :ref\n                              (fn [r]\n                                ;; Store input and its defaultValue\n                                ;; one we receive a non-nil ref\n                                (when (and r (nil? @input-ref))\n                                  (swap! text-input-refs assoc r (:default-value options)))\n                                (reset! input-ref r)\n                                (when (:ref options)\n                                  ((:ref options) r))))\n                       text))})))))\n\n(defn i18n-text\n  [{:keys [style key]}]\n  [text {:style style} (i18n/label key)])\n\n(defn touchable-opacity\n  [props content]\n  [touchable-opacity-class props content])\n\n(defn touchable-highlight\n  [props content]\n  [touchable-highlight-class\n   (merge {:underlay-color :transparent} props)\n   content])\n\n(defn pressable\n  [props content]\n  [pressable-class props content])\n\n(defn touchable-without-feedback\n  [props content]\n  [touchable-without-feedback-class\n   props\n   content])\n\n(defn get-dimensions\n  [name]\n  (js->clj (.get ^js dimensions name) :keywordize-keys true))\n\n;; Image picker\n(defn show-access-error\n  [o]\n  (when (= \"E_PERMISSION_MISSING\" (.-code ^js o))\n    (utils/show-popup (i18n/label :t/error)\n                      (i18n/label :t/photos-access-error))))\n\n(defn show-image-picker\n  ([images-fn]\n   (show-image-picker images-fn nil))\n  ([images-fn\n    {:keys [media-type]\n     :or   {media-type \"any\"}\n     :as   props}]\n   (-> ^js image-picker\n       (.openPicker (clj->js (merge {:mediaType media-type}\n                                    props)))\n       (.then images-fn)\n       (.catch show-access-error))))\n\n(defn show-image-picker-camera\n  ([images-fn]\n   (show-image-picker-camera images-fn nil))\n  ([images-fn props]\n   (-> ^js image-picker\n       (.openCamera (clj->js props))\n       (.then images-fn)\n       (.catch show-access-error))))\n\n;; Clipboard\n\n(def sharing\n  (.-Share react-native))\n\n(defn copy-to-clipboard\n  [text]\n  (.setString ^js Clipboard text))\n\n(defn get-from-clipboard\n  [clbk]\n  (let [clipboard-contents (.getString ^js Clipboard)]\n    (.then clipboard-contents #(clbk %))))\n\n;; KeyboardAvoidingView\n(def navigation-const (atom nil))\n\n(.then (.constants Navigation)\n       (fn [^js consts]\n         (reset! navigation-const {:top-bar-height     (.-topBarHeight consts)\n                                   :bottom-tabs-height (.-bottomTabsHeight consts)\n                                   :status-bar-height  (.-statusBarHeight consts)})))\n\n(defn keyboard-avoiding-view\n  [props & children]\n  (into [keyboard-avoiding-view-class\n         (merge (when platform/ios? {:behavior :padding})\n                (if (:ignore-offset props)\n                  props\n                  (update props :keyboardVerticalOffset + 44 (:status-bar-height @navigation-const))))]\n        children))\n\n(defn keyboard-avoiding-view-new\n  [props & children]\n  (into [keyboard-avoiding-view-class\n         (merge (when platform/ios? {:behavior :padding})\n                (if (:ignore-offset props)\n                  props\n                  (update props :keyboardVerticalOffset + 44)))]\n        children))\n\n(defn scroll-view\n  [props & children]\n  (vec (conj children props scroll-view-class)))\n\n(views/defview with-activity-indicator\n  [{:keys [timeout style enabled? preview]} comp]\n  (views/letsubs\n    [loading (reagent/atom true)]\n    {:component-did-mount (fn []\n                            (if (or (nil? timeout)\n                                    (> 100 timeout))\n                              (reset! loading false)\n                              (utils/set-timeout #(reset! loading false)\n                                                 timeout)))}\n    (if (and (not enabled?) @loading)\n      (or preview\n          [view\n           {:style (or style\n                       {:justify-content :center\n                        :align-items     :center})}\n           [activity-indicator {:animating true}]])\n      comp)))\n\n(defn hw-back-add-listener\n  [callback]\n  (.addEventListener BackHandler \"hardwareBackPress\" callback))\n\n(defn hw-back-remove-listener\n  [callback]\n  (.removeEventListener BackHandler \"hardwareBackPress\" callback))\n"]}