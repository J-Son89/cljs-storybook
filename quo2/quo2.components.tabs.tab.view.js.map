{"version":3,"sources":["quo2/components/tabs/tab/view.cljs"],"mappings":"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","names":["p__19356","map__19359","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","quo2.components.tabs.tab.view/right-side-with-cutout","height","width","background-color","disabled","react-native.svg/svg","quo2.components.tabs.tab.style/tab-background-opacity","react-native.svg/path","react-native.svg/defs","react-native.svg/clippath","react-native.svg/rect","p__19370","map__19371","quo2.components.tabs.tab.view/content","size","label","children","react-native.core/view","quo2.components.markdown.text/text","cljs.core/merge","G__19375","cljs.core/vector?","p__19376","map__19378","quo2.components.tabs.tab.view/themed-view","accessibility-label","active","before","item-container-style","active-item-container-style","blur?","id","on-press","theme","segmented?","notification-dot?","map__19394","show-notification-dot?","and__4115__auto__","cljs.core/=","icon-color","quo2.components.tabs.tab.style/by-theme","react-native.core/touchable-without-feedback","quo2.components.tabs.tab.style/container","quo2.components.notifications.notification-dot/notification-dot","quo2.components.tabs.tab.style/notification-dot","quo2.components.tabs.tab.style/tab","cljs.core/not","quo2.components.icon/icon","quo2.components.tabs.tab.style/size->padding-left","quo2.components.tabs.tab.view/view","quo2.theme/with-theme"],"sourcesContent":["(ns quo2.components.tabs.tab.view\n  (:require [quo2.components.icon :as icons]\n            [quo2.components.markdown.text :as text]\n            [quo2.components.notifications.notification-dot :as notification-dot]\n            [quo2.components.tabs.tab.style :as style]\n            [quo2.theme :as theme]\n            [react-native.core :as rn]\n            [react-native.svg :as svg]))\n\n(defn- right-side-with-cutout\n  \"SVG exported from Figma.\"\n  [{:keys [height width background-color disabled]}]\n  ;; Do not add a view-box property, it'll cause an artifact where the SVG is\n  ;; rendered slightly smaller than the proper width and height.\n  [svg/svg\n   {:width        width\n    :height       height\n    :fill         background-color\n    :fill-opacity (when disabled style/tab-background-opacity)}\n   [svg/path\n    {:d\n     \"M 11.468 6.781 C 11.004 6.923 10.511 7 10 7 C 7.239 7 5 4.761 5 2 C 5\n     1.489 5.077 0.996 5.219 0.532 C 4.687 0.351 4.134 0.213 3.564 0.123 C 2.787\n     0 1.858 0 0 0 L 0 32 C 1.858 32 2.787 32 3.564 31.877 C 7.843 31.199 11.199\n     27.843 11.877 23.564 C 12 22.787 12 21.858 12 20 L 12 12 C 12 10.142 12\n     9.213 11.877 8.436 C 11.787 7.866 11.649 7.313 11.468 6.781 Z\"\n     :clip-path \"url(#clip0_5514_84289)\"}]\n   [svg/defs\n    [svg/clippath {:id \"clip0_5514_84289\"}\n     [svg/rect {:width width :height height :fill :none}]]]])\n\n(defn- content\n  [{:keys [size label]} children]\n  [rn/view\n   (cond\n     (string? children)\n     [text/text\n      (merge {:size            (case size\n                                 24 :paragraph-2\n                                 20 :label\n                                 nil)\n              :weight          :medium\n              :number-of-lines 1}\n             label)\n      children]\n\n     (vector? children)\n     children)])\n\n(defn- themed-view\n  [{:keys [accessibility-label\n           active\n           before\n           item-container-style\n           active-item-container-style\n           blur?\n           disabled\n           id\n           on-press\n           theme\n           segmented?\n           size\n           notification-dot?]\n    :or   {size 32}}\n   children]\n  (let [show-notification-dot? (and notification-dot? (= size 32))\n        {:keys [icon-color\n                background-color\n                label]}        (style/by-theme {:theme    theme\n                                                :blur?    blur?\n                                                :disabled disabled\n                                                :active   active})]\n    [rn/touchable-without-feedback\n     (merge {:disabled            disabled\n             :accessibility-label accessibility-label}\n            (when on-press\n              {:on-press (fn []\n                           (on-press id))}))\n     [rn/view {:style style/container}\n      (when show-notification-dot?\n        [notification-dot/notification-dot\n         {:style style/notification-dot}])\n      [rn/view\n       {:style (merge\n                (style/tab\n                 {:size                   size\n                  :background-color       (if (and segmented? (not active))\n                                            :transparent\n                                            background-color)\n                  :disabled               disabled\n                  :segmented?             segmented?\n                  :show-notification-dot? show-notification-dot?})\n                (if active active-item-container-style item-container-style))}\n       (when before\n         [rn/view\n          [icons/icon before {:color icon-color}]])\n       [content {:size size :label label} children]]\n      (when show-notification-dot?\n        [right-side-with-cutout\n         {:width            (style/size->padding-left size)\n          :height           size\n          :disabled         disabled\n          :background-color background-color}])]]))\n\n(def view (theme/with-theme themed-view))\n"]}