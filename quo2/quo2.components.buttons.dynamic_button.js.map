{"version":3,"sources":["quo2/components/buttons/dynamic_button.cljs"],"mappings":"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","names":["quo2.components.buttons.dynamic-button/get-button-color","type","pressed?","customization-color","quo2.foundations.colors/custom-color-by-theme","quo2.foundations.colors/theme-colors","quo2.foundations.colors/neutral-80-opa-80","quo2.foundations.colors/white-opa-80","quo2.foundations.colors/neutral-80-opa-70","quo2.foundations.colors/white-opa-70","quo2.components.buttons.dynamic-button/get-icon-and-text-color","quo2.foundations.colors/white","quo2.foundations.colors/neutral-100","quo2.components.buttons.dynamic-button/icon-view","quo2.components.icon/icon","G__16652","cljs.core/Keyword","js/Error","G__16654","G__16655","quo2.components.buttons.dynamic-button/dynamic-button","_","reagent.core/atom","p__16659","map__16660","cljs.core/PROTOCOL_SENTINEL","cljs.core/apply","cljs.core/hash-map","cljs.core/get","label","on-press","count","style","react-native.core/touchable-opacity","cljs.core/reset!","react-native.core/view","cljs.core/merge","cljs.core/deref","or__4126__auto__","quo2.components.markdown.text/text","G__16665","G__16667","G__16668"],"sourcesContent":["(ns quo2.components.buttons.dynamic-button\n  (:require [quo2.components.icon :as icon]\n            [quo2.components.markdown.text :as text]\n            [quo2.foundations.colors :as colors]\n            [react-native.core :as rn]\n            [reagent.core :as reagent]))\n\n(defn- get-button-color\n  [type pressed? customization-color]\n  (if (#{:jump-to :mention} type)\n    (if pressed?\n      (colors/custom-color-by-theme customization-color 60 50)\n      (colors/custom-color-by-theme customization-color 50 60))\n    (if pressed?\n      (colors/theme-colors colors/neutral-80-opa-80 colors/white-opa-80)\n      (colors/theme-colors colors/neutral-80-opa-70 colors/white-opa-70))))\n\n(defn- get-icon-and-text-color\n  [type]\n  (if (#{:jump-to :mention} type)\n    colors/white\n    (colors/theme-colors colors/white colors/neutral-100)))\n\n(defn- icon-view\n  [type]\n  [icon/icon\n   (case type\n     :jump-to           :i/jump-to\n     :mention           :i/mention\n     :notification-down :i/arrow-down\n     :notification-up   :i/arrow-up\n     :search-with-label :i/search\n     :search            :i/search\n     :scroll-to-bottom  :i/arrow-down)\n   {:size            12\n    :color           (get-icon-and-text-color type)\n    :container-style {:margin-top    6\n                      :margin-bottom 6\n                      :margin-left   (case type\n                                       :jump-to           0\n                                       :mention           8\n                                       :notification-down 2\n                                       :notification-up   2\n                                       :search-with-label 8\n                                       :search            6\n                                       :scroll-to-bottom  6)\n                      :margin-right  (case type\n                                       :jump-to           8\n                                       :mention           2\n                                       :notification-down 8\n                                       :notification-up   8\n                                       :search-with-label 4\n                                       :search            6\n                                       :scroll-to-bottom  6)}}])\n\n(defn dynamic-button\n  \"[dynamic-button opts]\n   opts\n   {:type                :jump-to/:mention/:notification-down/:notification-up/:search/:search-with-label/:scroll-to-bottom\n    :on-press            fn\n    :count               mentions or notifications count\n    :customization-color customize jump-to and mention button color}\"\n  [_]\n  (let [pressed? (reagent/atom false)]\n    (fn [{:keys [type label on-press count customization-color style]}]\n      [rn/touchable-opacity\n       {:on-press-in         #(reset! pressed? true)\n        :on-press-out        #(reset! pressed? false)\n        :on-press            on-press\n        :active-opacity      1\n        :hit-slop            {:top 5 :bottom 5 :left 5 :right 5}\n        :pointer-events      :auto\n        :accessibility-label type}\n       [rn/view\n        {:style (merge\n                 {:flex-direction   :row\n                  :height           24\n                  :border-radius    12\n                  :background-color (get-button-color type @pressed? (or customization-color :primary))}\n                 style)}\n        (when (#{:mention :search :search-with-label :scroll-to-bottom} type)\n          [icon-view type])\n        (when (#{:jump-to :mention :notification-down :notification-up :search-with-label} type)\n          [text/text\n           {:weight :medium\n            :size   :paragraph-2\n            :style  {:color         (get-icon-and-text-color type)\n                     :margin-top    2.5\n                     :margin-bottom 3.5\n                     :margin-left   (case type\n                                      :jump-to           8\n                                      :mention           0\n                                      :notification-down 8\n                                      :notification-up   8\n                                      :search-with-label 0)\n                     :margin-right  (case type\n                                      :jump-to           0\n                                      :mention           8\n                                      :notification-down 0\n                                      :notification-up   0\n                                      :search-with-label 8)}}\n           (case type\n             :jump-to                                       label\n             :search-with-label                             label\n             (:mention :notification-down :notification-up) (str count))])\n        (when (#{:jump-to :notification-down :notification-up} type)\n          [icon-view type])]])))\n"]}